// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/single_use_coupons/offer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PKSingleUseCoupons {

  /// <summary>Holder for reflection information generated from io/single_use_coupons/offer.proto</summary>
  public static partial class OfferReflection {

    #region Descriptor
    /// <summary>File descriptor for io/single_use_coupons/offer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OfferReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFpby9zaW5nbGVfdXNlX2NvdXBvbnMvb2ZmZXIucHJvdG8SEnNpbmdsZV91",
            "c2VfY291cG9ucxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoX",
            "aW8vY29tbW9uL2JpbGxpbmcucHJvdG8aHGlvL2NvbW1vbi9kaXN0cmlidXRp",
            "b24ucHJvdG8aHGlvL2NvbW1vbi9sb2NhbGl6YXRpb24ucHJvdG8aGmlvL2Nv",
            "bW1vbi9wYWdpbmF0aW9uLnByb3RvGhhpby9jb21tb24vdGVtcGxhdGUucHJv",
            "dG8aFGlvL2ltYWdlL2ltYWdlLnByb3RvGixwcm90b2MtZ2VuLXN3YWdnZXIv",
            "b3B0aW9ucy9hbm5vdGF0aW9ucy5wcm90byLgCAoLQ291cG9uT2ZmZXISCgoC",
            "aWQYASABKAkSEgoKb2ZmZXJUaXRsZRgCIAEoCRIwChNsb2NhbGl6ZWRPZmZl",
            "clRpdGxlGAMgASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEhcKD29mZmVyU2hv",
            "cnRUaXRsZRgEIAEoCRI1Chhsb2NhbGl6ZWRPZmZlclNob3J0VGl0bGUYBSAB",
            "KAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcSFAoMb2ZmZXJEZXRhaWxzGAYgASgJ",
            "EjIKFWxvY2FsaXplZE9mZmVyRGV0YWlscxgHIAEoCzITLmlvLkxvY2FsaXpl",
            "ZFN0cmluZxIWCg5vZmZlckZpbmVQcmludBgIIAEoCRI0Chdsb2NhbGl6ZWRP",
            "ZmZlckZpbmVQcmludBgJIAEoCzITLmlvLkxvY2FsaXplZFN0cmluZxIiChpi",
            "ZWZvcmVSZWRlZW1QYXNzVGVtcGxhdGVJZBgKIAEoCRIhChlhZnRlclJlZGVl",
            "bVBhc3NUZW1wbGF0ZUlkGAsgASgJEhgKBXF1b3RhGAwgASgLMgkuaW8uUXVv",
            "dGESRgoUY291cG9uRXhwaXJ5U2V0dGluZ3MYDSABKAsyKC5zaW5nbGVfdXNl",
            "X2NvdXBvbnMuQ291cG9uRXhwaXJ5U2V0dGluZ3MSQgoScmVkZW1wdGlvblNl",
            "dHRpbmdzGA4gASgLMiYuc2luZ2xlX3VzZV9jb3Vwb25zLlJlZGVtcHRpb25T",
            "ZXR0aW5ncxIyCg5pc3N1ZVN0YXJ0RGF0ZRgPIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXASMAoMaXNzdWVFbmREYXRlGBAgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcBIrCgdjcmVhdGVkGBEgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcBIrCgd1cGRhdGVkGBIgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcBISCgpjYW1wYWlnbklkGBMgASgJEjYKFGRp",
            "c3RyaWJ1dGlvblNldHRpbmdzGBQgASgLMhguaW8uRGlzdHJpYnV0aW9uU2V0",
            "dGluZ3MSEQoJc2hvcnRDb2RlGBUgASgJEhQKDGlhbmFUaW1lem9uZRgWIAEo",
            "CRIQCghkaXNhYmxlZBgXIAEoCDriAZJB3gEK2wEqDENvdXBvbiBPZmZlcjKR",
            "AUhvbGRzIHRoZSBvZmZlciBkZXRhaWxzLCByZWRlbXB0aW9uIHNldHRpbmdz",
            "IGFuZCBiZWZvcmUgJiBhZnRlci1yZWRlZW0gdGVtcGxhdGUgZGVzaWducyAo",
            "QXBwbGUgV2FsbGV0ICYgR29vZ2xlIFBheSBkZXNpZ25zKSBmb3IgdGhlIENv",
            "dXBvbiBPZmZlci7SAQpvZmZlclRpdGxl0gEMb2ZmZXJEZXRhaWxz0gEaYmVm",
            "b3JlUmVkZWVtUGFzc1RlbXBsYXRlSWQicAoUQ291cG9uRXhwaXJ5U2V0dGlu",
            "Z3MSPgoQY291cG9uRXhwaXJ5VHlwZRgBIAEoDjIkLnNpbmdsZV91c2VfY291",
            "cG9ucy5Db3Vwb25FeHBpcnlUeXBlEhgKEGV4cGlyZUFmdGVyWERheXMYAyAB",
            "KA0i3AMKElJlZGVtcHRpb25TZXR0aW5ncxI3ChNyZWRlbXB0aW9uU3RhcnRE",
            "YXRlGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI1ChFyZWRl",
            "bXB0aW9uRW5kRGF0ZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXASOgoOcmVkZW1wdGlvblR5cGUYAyADKA4yIi5zaW5nbGVfdXNlX2NvdXBv",
            "bnMuUmVkZW1wdGlvblR5cGUSZgocY29kZVByb3ZpZGVkT25SZWRlZW1TZXR0",
            "aW5ncxgFIAEoCzJALnNpbmdsZV91c2VfY291cG9ucy5DdXN0b21lckluaXRp",
            "YXRlZENvZGVQcm92aWRlT25SZWRlZW1TZXR0aW5ncxJRChFmaXhlZENvZGVT",
            "ZXR0aW5ncxgGIAEoCzI2LnNpbmdsZV91c2VfY291cG9ucy5DdXN0b21lcklu",
            "aXRpYXRlZEZpeGVkQ29kZVNldHRpbmdzEkcKEHN0YW5kYXJkU2V0dGluZ3MY",
            "ByABKAsyLS5zaW5nbGVfdXNlX2NvdXBvbnMuU3RhbmRhcmRQYXNzS2l0SG9z",
            "dGVkUGFnZUoECAQQBUoECAgQCUoECAkQCkoECAoQCyK1AQoiQ3VzdG9tZXJJ",
            "bml0aWF0ZWRGaXhlZENvZGVTZXR0aW5ncxIRCglmaXhlZENvZGUYASABKAkS",
            "FAoMdXNlQ291cG9uU2t1GAIgASgIEiAKB2JhcmNvZGUYAyABKA4yDy5pby5C",
            "YXJjb2RlVHlwZRJECg9yZWRlbXB0aW9uVGltZXIYBCABKAsyKy5zaW5nbGVf",
            "dXNlX2NvdXBvbnMuUmVkZW1wdGlvblRpbWVyU2V0dGluZ3MifAoXUmVkZW1w",
            "dGlvblRpbWVyU2V0dGluZ3MSFgoOdGltZW91dFNlY29uZHMYASABKA0SFQoN",
            "dGltZXJIZWxwVGV4dBgCIAEoCRIyChVsb2NhbGl6ZWRUaW1lSGVscFRleHQY",
            "AyABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmci0QEKLEN1c3RvbWVySW5pdGlh",
            "dGVkQ29kZVByb3ZpZGVPblJlZGVlbVNldHRpbmdzEhIKCnZhbGlkQ29kZXMY",
            "ASADKAkSOwoTcmVkZW1wdGlvbkNvZGVJbnB1dBgCIAEoCzIeLnNpbmdsZV91",
            "c2VfY291cG9ucy5JbnB1dEZpZWxkEhgKEHN1Ym1pdEJ1dHRvblRleHQYAyAB",
            "KAkSNgoZbG9jYWxpemVkU3VibWl0QnV0dG9uVGV4dBgEIAEoCzITLmlvLkxv",
            "Y2FsaXplZFN0cmluZyL+AgoKSW5wdXRGaWVsZBINCgVsYWJlbBgBIAEoCRIr",
            "Cg5sb2NhbGl6ZWRMYWJlbBgCIAEoCzITLmlvLkxvY2FsaXplZFN0cmluZxIS",
            "CgpoZWxwZXJUZXh0GAMgASgJEjAKE2xvY2FsaXplZEhlbHBlclRleHQYBCAB",
            "KAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcSFAoMZXJyb3JNZXNzYWdlGAUgASgJ",
            "EjIKFWxvY2FsaXplZEVycm9yTWVzc2FnZRgGIAEoCzITLmlvLkxvY2FsaXpl",
            "ZFN0cmluZxIUCgxkZWZhdWx0VmFsdWUYByABKAkSMgoVbG9jYWxpemVkRGVm",
            "YXVsdFZhbHVlGAggASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEhMKC3BsYWNl",
            "aG9sZGVyGAkgASgJEjEKFGxvY2FsaXplZFBsYWNlaG9sZGVyGAogASgLMhMu",
            "aW8uTG9jYWxpemVkU3RyaW5nEhIKCnZhbGlkYXRpb24YCyABKAkiiQQKGVN0",
            "YW5kYXJkUGFzc0tpdEhvc3RlZFBhZ2USDQoFdGl0bGUYASABKAkSKwoObG9j",
            "YWxpemVkVGl0bGUYAiABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcSHgoWcmVk",
            "ZW1wdGlvbkluc3RydWN0aW9ucxgDIAEoCRI8Ch9sb2NhbGl6ZWRSZWRlbXB0",
            "aW9uSW5zdHJ1Y3Rpb25zGAQgASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEiAK",
            "CGltYWdlSWRzGAUgASgLMgwuaW8uSW1hZ2VJZHNIABIfCgZpbWFnZXMYBiAB",
            "KAsyDS5pby5JbWFnZURhdGFIABISCgpmb290ZXJUZXh0GAcgASgJEjAKE2xv",
            "Y2FsaXplZEZvb3RlclRleHQYCCABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcS",
            "OAoNcmVzcG9uc2VUZXh0cxgJIAEoCzIhLnNpbmdsZV91c2VfY291cG9ucy5S",
            "ZXNwb25zZVRleHRzEhwKFGhpZGVSZWRlZW1lZERhdGVUaW1lGAogASgIEkIK",
            "EmNhbGxUb0FjdGlvbkJ1dHRvbhgLIAEoCzImLnNpbmdsZV91c2VfY291cG9u",
            "cy5DYWxsVG9BY3Rpb25CdXR0b24SFAoMY3NzT3ZlcnJpZGVzGAwgASgJQhcK",
            "FVJlZGVtcHRpb25JbWFnZUFzc2V0cyK0AQoSQ2FsbFRvQWN0aW9uQnV0dG9u",
            "Eh4KFmhpZGVDYWxsVG9BY3Rpb25CdXR0b24YASABKAgSEgoKYnV0dG9uVGV4",
            "dBgCIAEoCRIwChNsb2NhbGl6ZWRCdXR0b25UZXh0GAMgASgLMhMuaW8uTG9j",
            "YWxpemVkU3RyaW5nEgwKBGxpbmsYBCABKAkSKgoNbG9jYWxpemVkTGluaxgF",
            "IAEoCzITLmlvLkxvY2FsaXplZFN0cmluZyKrBAoNUmVzcG9uc2VUZXh0cxIn",
            "Ch9yZWRlZW1Db25maXJtYXRpb25EaWFsb2dCb3hUZXh0GAEgASgJEkUKKGxv",
            "Y2FsaXplZFJlZGVlbUNvbmZpcm1hdGlvbkRpYWxvZ0JveFRleHQYAiABKAsy",
            "Ey5pby5Mb2NhbGl6ZWRTdHJpbmcSGAoQY2FuY2VsUmVkZWVtVGV4dBgDIAEo",
            "CRI2Chlsb2NhbGl6ZWRDYW5jZWxSZWRlZW1UZXh0GAQgASgLMhMuaW8uTG9j",
            "YWxpemVkU3RyaW5nEhcKD2FmdGVyUmVkZWVtVGV4dBgFIAEoCRI1Chhsb2Nh",
            "bGl6ZWRBZnRlclJlZGVlbVRleHQYBiABKAsyEy5pby5Mb2NhbGl6ZWRTdHJp",
            "bmcSIQoZY291cG9uQWxyZWFkeVJlZGVlbWVkVGV4dBgHIAEoCRI/CiJsb2Nh",
            "bGl6ZWRDb3Vwb25BbHJlYWR5UmVkZWVtZWRUZXh0GAggASgLMhMuaW8uTG9j",
            "YWxpemVkU3RyaW5nEhgKEG9mZmVyRXhwaXJlZFRleHQYCSABKAkSNgoZbG9j",
            "YWxpemVkT2ZmZXJFeHBpcmVkVGV4dBgKIAEoCzITLmlvLkxvY2FsaXplZFN0",
            "cmluZxIZChFjb3Vwb25FeHBpcmVkVGV4dBgLIAEoCRI3Chpsb2NhbGl6ZWRD",
            "b3Vwb25FeHBpcmVkVGV4dBgMIAEoCzITLmlvLkxvY2FsaXplZFN0cmluZyJR",
            "ChdDb3Vwb25PZmZlcnNMaXN0UmVxdWVzdBISCgpjYW1wYWlnbklkGAEgASgJ",
            "EiIKCnBhZ2luYXRpb24YAiABKAsyDi5pby5QYWdpbmF0aW9uKqkBChBDb3Vw",
            "b25FeHBpcnlUeXBlEhUKEUVYUElSWV9ET19OT1RfVVNFEAASHgoaQVVUT19F",
            "WFBJUkVfT0ZGRVJfRU5EX0RBVEUQARIjCh9BVVRPX0VYUElSRV9SRURFTVBU",
            "SU9OX0VORF9EQVRFEAISFwoTRVhQSVJFX0FGVEVSX1hfREFZUxADEiAKHEVY",
            "UElSRV9PTl9WQVJJQUJMRV9EQVRFX1RJTUUQBCrkAQoOUmVkZW1wdGlvblR5",
            "cGUSHgoaUkVERU1QVElPTl9UWVBFX0RPX05PVF9VU0UQABIXChNSRURFTVBU",
            "SU9OX1RZUEVfQVBJEAESJgoiUkVERU1QVElPTl9UWVBFX0NVU1RPTUVSX0lO",
            "SVRJQVRFRBACEjEKLVJFREVNUFRJT05fVFlQRV9DVVNUT01FUl9JTklUSUFU",
            "RURfQ09ERV9GSVhFRBADEj4KOlJFREVNUFRJT05fVFlQRV9DVVNUT01FUl9J",
            "TklUSUFURURfQ09ERV9QUk9WSURFRF9PTl9SRURFRU0QBEJwCiBpby5wYXNz",
            "a2l0LlBLaW8uU2luZ2xlVXNlQ291cG9uc1o3c3Rhc2gucGFzc2tpdC5jb20v",
            "aW8vbW9kZWwvc2RrL2dvL2lvL3NpbmdsZV91c2VfY291cG9uc6oCElBLU2lu",
            "Z2xlVXNlQ291cG9uc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::PKIo.BillingReflection.Descriptor, global::PKIo.DistributionReflection.Descriptor, global::PKIo.LocalizationReflection.Descriptor, global::PKIo.PaginationReflection.Descriptor, global::PKIo.TemplateReflection.Descriptor, global::PKIo.ImageReflection.Descriptor, global::Grpc.Gateway.ProtocGenSwagger.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PKSingleUseCoupons.CouponExpiryType), typeof(global::PKSingleUseCoupons.RedemptionType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.CouponOffer), global::PKSingleUseCoupons.CouponOffer.Parser, new[]{ "Id", "OfferTitle", "LocalizedOfferTitle", "OfferShortTitle", "LocalizedOfferShortTitle", "OfferDetails", "LocalizedOfferDetails", "OfferFinePrint", "LocalizedOfferFinePrint", "BeforeRedeemPassTemplateId", "AfterRedeemPassTemplateId", "Quota", "CouponExpirySettings", "RedemptionSettings", "IssueStartDate", "IssueEndDate", "Created", "Updated", "CampaignId", "DistributionSettings", "ShortCode", "IanaTimezone", "Disabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.CouponExpirySettings), global::PKSingleUseCoupons.CouponExpirySettings.Parser, new[]{ "CouponExpiryType", "ExpireAfterXDays" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.RedemptionSettings), global::PKSingleUseCoupons.RedemptionSettings.Parser, new[]{ "RedemptionStartDate", "RedemptionEndDate", "RedemptionType", "CodeProvidedOnRedeemSettings", "FixedCodeSettings", "StandardSettings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.CustomerInitiatedFixedCodeSettings), global::PKSingleUseCoupons.CustomerInitiatedFixedCodeSettings.Parser, new[]{ "FixedCode", "UseCouponSku", "Barcode", "RedemptionTimer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.RedemptionTimerSettings), global::PKSingleUseCoupons.RedemptionTimerSettings.Parser, new[]{ "TimeoutSeconds", "TimerHelpText", "LocalizedTimeHelpText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.CustomerInitiatedCodeProvideOnRedeemSettings), global::PKSingleUseCoupons.CustomerInitiatedCodeProvideOnRedeemSettings.Parser, new[]{ "ValidCodes", "RedemptionCodeInput", "SubmitButtonText", "LocalizedSubmitButtonText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.InputField), global::PKSingleUseCoupons.InputField.Parser, new[]{ "Label", "LocalizedLabel", "HelperText", "LocalizedHelperText", "ErrorMessage", "LocalizedErrorMessage", "DefaultValue", "LocalizedDefaultValue", "Placeholder", "LocalizedPlaceholder", "Validation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.StandardPassKitHostedPage), global::PKSingleUseCoupons.StandardPassKitHostedPage.Parser, new[]{ "Title", "LocalizedTitle", "RedemptionInstructions", "LocalizedRedemptionInstructions", "ImageIds", "Images", "FooterText", "LocalizedFooterText", "ResponseTexts", "HideRedeemedDateTime", "CallToActionButton", "CssOverrides" }, new[]{ "RedemptionImageAssets" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.CallToActionButton), global::PKSingleUseCoupons.CallToActionButton.Parser, new[]{ "HideCallToActionButton", "ButtonText", "LocalizedButtonText", "Link", "LocalizedLink" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.ResponseTexts), global::PKSingleUseCoupons.ResponseTexts.Parser, new[]{ "RedeemConfirmationDialogBoxText", "LocalizedRedeemConfirmationDialogBoxText", "CancelRedeemText", "LocalizedCancelRedeemText", "AfterRedeemText", "LocalizedAfterRedeemText", "CouponAlreadyRedeemedText", "LocalizedCouponAlreadyRedeemedText", "OfferExpiredText", "LocalizedOfferExpiredText", "CouponExpiredText", "LocalizedCouponExpiredText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.CouponOffersListRequest), global::PKSingleUseCoupons.CouponOffersListRequest.Parser, new[]{ "CampaignId", "Pagination" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CouponExpiryType {
    [pbr::OriginalName("EXPIRY_DO_NOT_USE")] ExpiryDoNotUse = 0,
    /// <summary>
    /// The system will set the coupon expiry based to the campaign end date (default).
    /// </summary>
    [pbr::OriginalName("AUTO_EXPIRE_OFFER_END_DATE")] AutoExpireOfferEndDate = 1,
    /// <summary>
    /// The system will set the coupon expiry based to the redemption end date.
    /// </summary>
    [pbr::OriginalName("AUTO_EXPIRE_REDEMPTION_END_DATE")] AutoExpireRedemptionEndDate = 2,
    /// <summary>
    /// The system will calculate the expiry date based the number of days after the digital coupon is issued.
    /// The calculated date needs to be within range of the campaign date rules. For example, if issue date + EXPIRE_AFTER_X_DAYS is greater than the campaign end date, it will default to the campaign end date.
    /// The expiry date will be based on your timezone. The digital card will expire at 23:59:59 of set date in fixed timezone.
    /// </summary>
    [pbr::OriginalName("EXPIRE_AFTER_X_DAYS")] ExpireAfterXDays = 3,
    /// <summary>
    /// If you want to set the expiry date for each individual coupon when the coupon is issued, you can use this expiry type.
    /// You can set expiry date and time in fixed timezone on the coupon record.
    /// The date needs to be within range of the campaign date rules, otherwise the system will return an error.
    /// </summary>
    [pbr::OriginalName("EXPIRE_ON_VARIABLE_DATE_TIME")] ExpireOnVariableDateTime = 4,
  }

  public enum RedemptionType {
    /// <summary>
    /// Zero index should not be used
    /// </summary>
    [pbr::OriginalName("REDEMPTION_TYPE_DO_NOT_USE")] DoNotUse = 0,
    /// <summary>
    /// Coupons are always redeemed via API (default). This method is used by POS integrations, but is also be used by the PassKit scanning app.
    /// </summary>
    [pbr::OriginalName("REDEMPTION_TYPE_API")] Api = 1,
    /// <summary>
    /// Coupons can be redeemed by the coupon holder (i.e. the customer) by visiting a redemption URL rendered on the coupon.
    /// The coupon will redeem upon the link being visited.
    /// </summary>
    [pbr::OriginalName("REDEMPTION_TYPE_CUSTOMER_INITIATED")] CustomerInitiated = 2,
    /// <summary>
    /// This will present a fixed code to the customer after they visit the redemption URL, and then auto redeem the coupon. The customer can then present this fixed-code to a member of staff.
    /// </summary>
    [pbr::OriginalName("REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_FIXED")] CustomerInitiatedCodeFixed = 3,
    /// <summary>
    /// After visiting the redemption URL, a member of staff provides the customer with a redemption-code they need to enter. After entering the code, the coupon with redeem.
    /// </summary>
    [pbr::OriginalName("REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_PROVIDED_ON_REDEEM")] CustomerInitiatedCodeProvidedOnRedeem = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The Coupon Offer Details.
  /// </summary>
  public sealed partial class CouponOffer : pb::IMessage<CouponOffer> {
    private static readonly pb::MessageParser<CouponOffer> _parser = new pb::MessageParser<CouponOffer>(() => new CouponOffer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CouponOffer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.OfferReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CouponOffer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CouponOffer(CouponOffer other) : this() {
      id_ = other.id_;
      offerTitle_ = other.offerTitle_;
      localizedOfferTitle_ = other.localizedOfferTitle_ != null ? other.localizedOfferTitle_.Clone() : null;
      offerShortTitle_ = other.offerShortTitle_;
      localizedOfferShortTitle_ = other.localizedOfferShortTitle_ != null ? other.localizedOfferShortTitle_.Clone() : null;
      offerDetails_ = other.offerDetails_;
      localizedOfferDetails_ = other.localizedOfferDetails_ != null ? other.localizedOfferDetails_.Clone() : null;
      offerFinePrint_ = other.offerFinePrint_;
      localizedOfferFinePrint_ = other.localizedOfferFinePrint_ != null ? other.localizedOfferFinePrint_.Clone() : null;
      beforeRedeemPassTemplateId_ = other.beforeRedeemPassTemplateId_;
      afterRedeemPassTemplateId_ = other.afterRedeemPassTemplateId_;
      quota_ = other.quota_ != null ? other.quota_.Clone() : null;
      couponExpirySettings_ = other.couponExpirySettings_ != null ? other.couponExpirySettings_.Clone() : null;
      redemptionSettings_ = other.redemptionSettings_ != null ? other.redemptionSettings_.Clone() : null;
      issueStartDate_ = other.issueStartDate_ != null ? other.issueStartDate_.Clone() : null;
      issueEndDate_ = other.issueEndDate_ != null ? other.issueEndDate_.Clone() : null;
      created_ = other.created_ != null ? other.created_.Clone() : null;
      updated_ = other.updated_ != null ? other.updated_.Clone() : null;
      campaignId_ = other.campaignId_;
      distributionSettings_ = other.distributionSettings_ != null ? other.distributionSettings_.Clone() : null;
      shortCode_ = other.shortCode_;
      ianaTimezone_ = other.ianaTimezone_;
      disabled_ = other.disabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CouponOffer Clone() {
      return new CouponOffer(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// PassKit generated offer id (22 characters).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offerTitle" field.</summary>
    public const int OfferTitleFieldNumber = 2;
    private string offerTitle_ = "";
    /// <summary>
    /// The offer title; will be shown on the enrolment page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfferTitle {
      get { return offerTitle_; }
      set {
        offerTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedOfferTitle" field.</summary>
    public const int LocalizedOfferTitleFieldNumber = 3;
    private global::PKIo.LocalizedString localizedOfferTitle_;
    /// <summary>
    /// Localized offer title.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedOfferTitle {
      get { return localizedOfferTitle_; }
      set {
        localizedOfferTitle_ = value;
      }
    }

    /// <summary>Field number for the "offerShortTitle" field.</summary>
    public const int OfferShortTitleFieldNumber = 4;
    private string offerShortTitle_ = "";
    /// <summary>
    /// The offer short title.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfferShortTitle {
      get { return offerShortTitle_; }
      set {
        offerShortTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedOfferShortTitle" field.</summary>
    public const int LocalizedOfferShortTitleFieldNumber = 5;
    private global::PKIo.LocalizedString localizedOfferShortTitle_;
    /// <summary>
    /// Localized offer short title.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedOfferShortTitle {
      get { return localizedOfferShortTitle_; }
      set {
        localizedOfferShortTitle_ = value;
      }
    }

    /// <summary>Field number for the "offerDetails" field.</summary>
    public const int OfferDetailsFieldNumber = 6;
    private string offerDetails_ = "";
    /// <summary>
    /// The offer details; will be shown on the enrolment page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfferDetails {
      get { return offerDetails_; }
      set {
        offerDetails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedOfferDetails" field.</summary>
    public const int LocalizedOfferDetailsFieldNumber = 7;
    private global::PKIo.LocalizedString localizedOfferDetails_;
    /// <summary>
    /// Localized offer details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedOfferDetails {
      get { return localizedOfferDetails_; }
      set {
        localizedOfferDetails_ = value;
      }
    }

    /// <summary>Field number for the "offerFinePrint" field.</summary>
    public const int OfferFinePrintFieldNumber = 8;
    private string offerFinePrint_ = "";
    /// <summary>
    /// The offer fine print.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfferFinePrint {
      get { return offerFinePrint_; }
      set {
        offerFinePrint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedOfferFinePrint" field.</summary>
    public const int LocalizedOfferFinePrintFieldNumber = 9;
    private global::PKIo.LocalizedString localizedOfferFinePrint_;
    /// <summary>
    /// Localized offer fine print.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedOfferFinePrint {
      get { return localizedOfferFinePrint_; }
      set {
        localizedOfferFinePrint_ = value;
      }
    }

    /// <summary>Field number for the "beforeRedeemPassTemplateId" field.</summary>
    public const int BeforeRedeemPassTemplateIdFieldNumber = 10;
    private string beforeRedeemPassTemplateId_ = "";
    /// <summary>
    /// The pass template ID that coupons will use when in unredeemed state. All coupons for the offer are issued in unredeemed state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BeforeRedeemPassTemplateId {
      get { return beforeRedeemPassTemplateId_; }
      set {
        beforeRedeemPassTemplateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "afterRedeemPassTemplateId" field.</summary>
    public const int AfterRedeemPassTemplateIdFieldNumber = 11;
    private string afterRedeemPassTemplateId_ = "";
    /// <summary>
    /// Optional pass template ID that coupons will use when switched to redeemed state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AfterRedeemPassTemplateId {
      get { return afterRedeemPassTemplateId_; }
      set {
        afterRedeemPassTemplateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quota" field.</summary>
    public const int QuotaFieldNumber = 12;
    private global::PKIo.Quota quota_;
    /// <summary>
    /// The quota for the campaign. If set to 0, then it is unlimited. If the quota is reached no new coupons can be issued.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.Quota Quota {
      get { return quota_; }
      set {
        quota_ = value;
      }
    }

    /// <summary>Field number for the "couponExpirySettings" field.</summary>
    public const int CouponExpirySettingsFieldNumber = 13;
    private global::PKSingleUseCoupons.CouponExpirySettings couponExpirySettings_;
    /// <summary>
    /// Coupon expiry settings
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKSingleUseCoupons.CouponExpirySettings CouponExpirySettings {
      get { return couponExpirySettings_; }
      set {
        couponExpirySettings_ = value;
      }
    }

    /// <summary>Field number for the "redemptionSettings" field.</summary>
    public const int RedemptionSettingsFieldNumber = 14;
    private global::PKSingleUseCoupons.RedemptionSettings redemptionSettings_;
    /// <summary>
    /// Optional redemption settings to give more control over redemption.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKSingleUseCoupons.RedemptionSettings RedemptionSettings {
      get { return redemptionSettings_; }
      set {
        redemptionSettings_ = value;
      }
    }

    /// <summary>Field number for the "issueStartDate" field.</summary>
    public const int IssueStartDateFieldNumber = 15;
    private global::Google.Protobuf.WellKnownTypes.Timestamp issueStartDate_;
    /// <summary>
    /// Optional date when coupons can start to be issued. Defaults to the campaign start date. Needs to be greater than / equal to the campaign start date. Needs to be less than / equal to the campaign end date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp IssueStartDate {
      get { return issueStartDate_; }
      set {
        issueStartDate_ = value;
      }
    }

    /// <summary>Field number for the "issueEndDate" field.</summary>
    public const int IssueEndDateFieldNumber = 16;
    private global::Google.Protobuf.WellKnownTypes.Timestamp issueEndDate_;
    /// <summary>
    /// Optional date when coupons can no longer be issued. Defaults to the campaign end date. Needs to be less than / equal to the campaign end date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp IssueEndDate {
      get { return issueEndDate_; }
      set {
        issueEndDate_ = value;
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 17;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// The date when the offer was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 18;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updated_;
    /// <summary>
    /// The date the offer was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    /// <summary>Field number for the "campaignId" field.</summary>
    public const int CampaignIdFieldNumber = 19;
    private string campaignId_ = "";
    /// <summary>
    /// The campaign id that the offer belongs to (1 campaign can have multiple offers). This field cannot be changed once an offer is linked to a campaign.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "distributionSettings" field.</summary>
    public const int DistributionSettingsFieldNumber = 20;
    private global::PKIo.DistributionSettings distributionSettings_;
    /// <summary>
    /// Contains the email &amp; sms distribution settings for the offer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.DistributionSettings DistributionSettings {
      get { return distributionSettings_; }
      set {
        distributionSettings_ = value;
      }
    }

    /// <summary>Field number for the "shortCode" field.</summary>
    public const int ShortCodeFieldNumber = 21;
    private string shortCode_ = "";
    /// <summary>
    /// The offer shortcode generated by the system. If the campaign is public, then this shortcode can be used to generate the coupon-create URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShortCode {
      get { return shortCode_; }
      set {
        shortCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ianaTimezone" field.</summary>
    public const int IanaTimezoneFieldNumber = 22;
    private string ianaTimezone_ = "";
    /// <summary>
    /// The offer timezone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IanaTimezone {
      get { return ianaTimezone_; }
      set {
        ianaTimezone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 23;
    private bool disabled_;
    /// <summary>
    /// Can be used to temporarily disable the coupon (i.e. if you ran out of your promotion item, you can temporarily disable all live coupons, and activate them again later on when your item is in stock again).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CouponOffer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CouponOffer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OfferTitle != other.OfferTitle) return false;
      if (!object.Equals(LocalizedOfferTitle, other.LocalizedOfferTitle)) return false;
      if (OfferShortTitle != other.OfferShortTitle) return false;
      if (!object.Equals(LocalizedOfferShortTitle, other.LocalizedOfferShortTitle)) return false;
      if (OfferDetails != other.OfferDetails) return false;
      if (!object.Equals(LocalizedOfferDetails, other.LocalizedOfferDetails)) return false;
      if (OfferFinePrint != other.OfferFinePrint) return false;
      if (!object.Equals(LocalizedOfferFinePrint, other.LocalizedOfferFinePrint)) return false;
      if (BeforeRedeemPassTemplateId != other.BeforeRedeemPassTemplateId) return false;
      if (AfterRedeemPassTemplateId != other.AfterRedeemPassTemplateId) return false;
      if (!object.Equals(Quota, other.Quota)) return false;
      if (!object.Equals(CouponExpirySettings, other.CouponExpirySettings)) return false;
      if (!object.Equals(RedemptionSettings, other.RedemptionSettings)) return false;
      if (!object.Equals(IssueStartDate, other.IssueStartDate)) return false;
      if (!object.Equals(IssueEndDate, other.IssueEndDate)) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (!object.Equals(Updated, other.Updated)) return false;
      if (CampaignId != other.CampaignId) return false;
      if (!object.Equals(DistributionSettings, other.DistributionSettings)) return false;
      if (ShortCode != other.ShortCode) return false;
      if (IanaTimezone != other.IanaTimezone) return false;
      if (Disabled != other.Disabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (OfferTitle.Length != 0) hash ^= OfferTitle.GetHashCode();
      if (localizedOfferTitle_ != null) hash ^= LocalizedOfferTitle.GetHashCode();
      if (OfferShortTitle.Length != 0) hash ^= OfferShortTitle.GetHashCode();
      if (localizedOfferShortTitle_ != null) hash ^= LocalizedOfferShortTitle.GetHashCode();
      if (OfferDetails.Length != 0) hash ^= OfferDetails.GetHashCode();
      if (localizedOfferDetails_ != null) hash ^= LocalizedOfferDetails.GetHashCode();
      if (OfferFinePrint.Length != 0) hash ^= OfferFinePrint.GetHashCode();
      if (localizedOfferFinePrint_ != null) hash ^= LocalizedOfferFinePrint.GetHashCode();
      if (BeforeRedeemPassTemplateId.Length != 0) hash ^= BeforeRedeemPassTemplateId.GetHashCode();
      if (AfterRedeemPassTemplateId.Length != 0) hash ^= AfterRedeemPassTemplateId.GetHashCode();
      if (quota_ != null) hash ^= Quota.GetHashCode();
      if (couponExpirySettings_ != null) hash ^= CouponExpirySettings.GetHashCode();
      if (redemptionSettings_ != null) hash ^= RedemptionSettings.GetHashCode();
      if (issueStartDate_ != null) hash ^= IssueStartDate.GetHashCode();
      if (issueEndDate_ != null) hash ^= IssueEndDate.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (updated_ != null) hash ^= Updated.GetHashCode();
      if (CampaignId.Length != 0) hash ^= CampaignId.GetHashCode();
      if (distributionSettings_ != null) hash ^= DistributionSettings.GetHashCode();
      if (ShortCode.Length != 0) hash ^= ShortCode.GetHashCode();
      if (IanaTimezone.Length != 0) hash ^= IanaTimezone.GetHashCode();
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (OfferTitle.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OfferTitle);
      }
      if (localizedOfferTitle_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LocalizedOfferTitle);
      }
      if (OfferShortTitle.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OfferShortTitle);
      }
      if (localizedOfferShortTitle_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LocalizedOfferShortTitle);
      }
      if (OfferDetails.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OfferDetails);
      }
      if (localizedOfferDetails_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LocalizedOfferDetails);
      }
      if (OfferFinePrint.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OfferFinePrint);
      }
      if (localizedOfferFinePrint_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LocalizedOfferFinePrint);
      }
      if (BeforeRedeemPassTemplateId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(BeforeRedeemPassTemplateId);
      }
      if (AfterRedeemPassTemplateId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(AfterRedeemPassTemplateId);
      }
      if (quota_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Quota);
      }
      if (couponExpirySettings_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(CouponExpirySettings);
      }
      if (redemptionSettings_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(RedemptionSettings);
      }
      if (issueStartDate_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(IssueStartDate);
      }
      if (issueEndDate_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(IssueEndDate);
      }
      if (created_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Updated);
      }
      if (CampaignId.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(CampaignId);
      }
      if (distributionSettings_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(DistributionSettings);
      }
      if (ShortCode.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ShortCode);
      }
      if (IanaTimezone.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(IanaTimezone);
      }
      if (Disabled != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (OfferTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferTitle);
      }
      if (localizedOfferTitle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedOfferTitle);
      }
      if (OfferShortTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferShortTitle);
      }
      if (localizedOfferShortTitle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedOfferShortTitle);
      }
      if (OfferDetails.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferDetails);
      }
      if (localizedOfferDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedOfferDetails);
      }
      if (OfferFinePrint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferFinePrint);
      }
      if (localizedOfferFinePrint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedOfferFinePrint);
      }
      if (BeforeRedeemPassTemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BeforeRedeemPassTemplateId);
      }
      if (AfterRedeemPassTemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AfterRedeemPassTemplateId);
      }
      if (quota_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quota);
      }
      if (couponExpirySettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CouponExpirySettings);
      }
      if (redemptionSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedemptionSettings);
      }
      if (issueStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IssueStartDate);
      }
      if (issueEndDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IssueEndDate);
      }
      if (created_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (updated_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Updated);
      }
      if (CampaignId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CampaignId);
      }
      if (distributionSettings_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DistributionSettings);
      }
      if (ShortCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ShortCode);
      }
      if (IanaTimezone.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(IanaTimezone);
      }
      if (Disabled != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CouponOffer other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.OfferTitle.Length != 0) {
        OfferTitle = other.OfferTitle;
      }
      if (other.localizedOfferTitle_ != null) {
        if (localizedOfferTitle_ == null) {
          LocalizedOfferTitle = new global::PKIo.LocalizedString();
        }
        LocalizedOfferTitle.MergeFrom(other.LocalizedOfferTitle);
      }
      if (other.OfferShortTitle.Length != 0) {
        OfferShortTitle = other.OfferShortTitle;
      }
      if (other.localizedOfferShortTitle_ != null) {
        if (localizedOfferShortTitle_ == null) {
          LocalizedOfferShortTitle = new global::PKIo.LocalizedString();
        }
        LocalizedOfferShortTitle.MergeFrom(other.LocalizedOfferShortTitle);
      }
      if (other.OfferDetails.Length != 0) {
        OfferDetails = other.OfferDetails;
      }
      if (other.localizedOfferDetails_ != null) {
        if (localizedOfferDetails_ == null) {
          LocalizedOfferDetails = new global::PKIo.LocalizedString();
        }
        LocalizedOfferDetails.MergeFrom(other.LocalizedOfferDetails);
      }
      if (other.OfferFinePrint.Length != 0) {
        OfferFinePrint = other.OfferFinePrint;
      }
      if (other.localizedOfferFinePrint_ != null) {
        if (localizedOfferFinePrint_ == null) {
          LocalizedOfferFinePrint = new global::PKIo.LocalizedString();
        }
        LocalizedOfferFinePrint.MergeFrom(other.LocalizedOfferFinePrint);
      }
      if (other.BeforeRedeemPassTemplateId.Length != 0) {
        BeforeRedeemPassTemplateId = other.BeforeRedeemPassTemplateId;
      }
      if (other.AfterRedeemPassTemplateId.Length != 0) {
        AfterRedeemPassTemplateId = other.AfterRedeemPassTemplateId;
      }
      if (other.quota_ != null) {
        if (quota_ == null) {
          Quota = new global::PKIo.Quota();
        }
        Quota.MergeFrom(other.Quota);
      }
      if (other.couponExpirySettings_ != null) {
        if (couponExpirySettings_ == null) {
          CouponExpirySettings = new global::PKSingleUseCoupons.CouponExpirySettings();
        }
        CouponExpirySettings.MergeFrom(other.CouponExpirySettings);
      }
      if (other.redemptionSettings_ != null) {
        if (redemptionSettings_ == null) {
          RedemptionSettings = new global::PKSingleUseCoupons.RedemptionSettings();
        }
        RedemptionSettings.MergeFrom(other.RedemptionSettings);
      }
      if (other.issueStartDate_ != null) {
        if (issueStartDate_ == null) {
          IssueStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        IssueStartDate.MergeFrom(other.IssueStartDate);
      }
      if (other.issueEndDate_ != null) {
        if (issueEndDate_ == null) {
          IssueEndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        IssueEndDate.MergeFrom(other.IssueEndDate);
      }
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      if (other.updated_ != null) {
        if (updated_ == null) {
          Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Updated.MergeFrom(other.Updated);
      }
      if (other.CampaignId.Length != 0) {
        CampaignId = other.CampaignId;
      }
      if (other.distributionSettings_ != null) {
        if (distributionSettings_ == null) {
          DistributionSettings = new global::PKIo.DistributionSettings();
        }
        DistributionSettings.MergeFrom(other.DistributionSettings);
      }
      if (other.ShortCode.Length != 0) {
        ShortCode = other.ShortCode;
      }
      if (other.IanaTimezone.Length != 0) {
        IanaTimezone = other.IanaTimezone;
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            OfferTitle = input.ReadString();
            break;
          }
          case 26: {
            if (localizedOfferTitle_ == null) {
              LocalizedOfferTitle = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedOfferTitle);
            break;
          }
          case 34: {
            OfferShortTitle = input.ReadString();
            break;
          }
          case 42: {
            if (localizedOfferShortTitle_ == null) {
              LocalizedOfferShortTitle = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedOfferShortTitle);
            break;
          }
          case 50: {
            OfferDetails = input.ReadString();
            break;
          }
          case 58: {
            if (localizedOfferDetails_ == null) {
              LocalizedOfferDetails = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedOfferDetails);
            break;
          }
          case 66: {
            OfferFinePrint = input.ReadString();
            break;
          }
          case 74: {
            if (localizedOfferFinePrint_ == null) {
              LocalizedOfferFinePrint = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedOfferFinePrint);
            break;
          }
          case 82: {
            BeforeRedeemPassTemplateId = input.ReadString();
            break;
          }
          case 90: {
            AfterRedeemPassTemplateId = input.ReadString();
            break;
          }
          case 98: {
            if (quota_ == null) {
              Quota = new global::PKIo.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
          case 106: {
            if (couponExpirySettings_ == null) {
              CouponExpirySettings = new global::PKSingleUseCoupons.CouponExpirySettings();
            }
            input.ReadMessage(CouponExpirySettings);
            break;
          }
          case 114: {
            if (redemptionSettings_ == null) {
              RedemptionSettings = new global::PKSingleUseCoupons.RedemptionSettings();
            }
            input.ReadMessage(RedemptionSettings);
            break;
          }
          case 122: {
            if (issueStartDate_ == null) {
              IssueStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(IssueStartDate);
            break;
          }
          case 130: {
            if (issueEndDate_ == null) {
              IssueEndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(IssueEndDate);
            break;
          }
          case 138: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 146: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
          case 154: {
            CampaignId = input.ReadString();
            break;
          }
          case 162: {
            if (distributionSettings_ == null) {
              DistributionSettings = new global::PKIo.DistributionSettings();
            }
            input.ReadMessage(DistributionSettings);
            break;
          }
          case 170: {
            ShortCode = input.ReadString();
            break;
          }
          case 178: {
            IanaTimezone = input.ReadString();
            break;
          }
          case 184: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CouponExpirySettings : pb::IMessage<CouponExpirySettings> {
    private static readonly pb::MessageParser<CouponExpirySettings> _parser = new pb::MessageParser<CouponExpirySettings>(() => new CouponExpirySettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CouponExpirySettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.OfferReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CouponExpirySettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CouponExpirySettings(CouponExpirySettings other) : this() {
      couponExpiryType_ = other.couponExpiryType_;
      expireAfterXDays_ = other.expireAfterXDays_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CouponExpirySettings Clone() {
      return new CouponExpirySettings(this);
    }

    /// <summary>Field number for the "couponExpiryType" field.</summary>
    public const int CouponExpiryTypeFieldNumber = 1;
    private global::PKSingleUseCoupons.CouponExpiryType couponExpiryType_ = global::PKSingleUseCoupons.CouponExpiryType.ExpiryDoNotUse;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKSingleUseCoupons.CouponExpiryType CouponExpiryType {
      get { return couponExpiryType_; }
      set {
        couponExpiryType_ = value;
      }
    }

    /// <summary>Field number for the "expireAfterXDays" field.</summary>
    public const int ExpireAfterXDaysFieldNumber = 3;
    private uint expireAfterXDays_;
    /// <summary>
    /// Number of days the coupon card is expired after the issue date.
    /// The expiry time is 23:59:59 of expiry day. Please set couponExpiryType as EXPIRE_AFTER_X_DAYS.
    /// Field can be omitted if using any of the other coupon expiry types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ExpireAfterXDays {
      get { return expireAfterXDays_; }
      set {
        expireAfterXDays_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CouponExpirySettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CouponExpirySettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CouponExpiryType != other.CouponExpiryType) return false;
      if (ExpireAfterXDays != other.ExpireAfterXDays) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CouponExpiryType != global::PKSingleUseCoupons.CouponExpiryType.ExpiryDoNotUse) hash ^= CouponExpiryType.GetHashCode();
      if (ExpireAfterXDays != 0) hash ^= ExpireAfterXDays.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CouponExpiryType != global::PKSingleUseCoupons.CouponExpiryType.ExpiryDoNotUse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CouponExpiryType);
      }
      if (ExpireAfterXDays != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ExpireAfterXDays);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CouponExpiryType != global::PKSingleUseCoupons.CouponExpiryType.ExpiryDoNotUse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CouponExpiryType);
      }
      if (ExpireAfterXDays != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpireAfterXDays);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CouponExpirySettings other) {
      if (other == null) {
        return;
      }
      if (other.CouponExpiryType != global::PKSingleUseCoupons.CouponExpiryType.ExpiryDoNotUse) {
        CouponExpiryType = other.CouponExpiryType;
      }
      if (other.ExpireAfterXDays != 0) {
        ExpireAfterXDays = other.ExpireAfterXDays;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CouponExpiryType = (global::PKSingleUseCoupons.CouponExpiryType) input.ReadEnum();
            break;
          }
          case 24: {
            ExpireAfterXDays = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RedemptionSettings : pb::IMessage<RedemptionSettings> {
    private static readonly pb::MessageParser<RedemptionSettings> _parser = new pb::MessageParser<RedemptionSettings>(() => new RedemptionSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedemptionSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.OfferReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedemptionSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedemptionSettings(RedemptionSettings other) : this() {
      redemptionStartDate_ = other.redemptionStartDate_ != null ? other.redemptionStartDate_.Clone() : null;
      redemptionEndDate_ = other.redemptionEndDate_ != null ? other.redemptionEndDate_.Clone() : null;
      redemptionType_ = other.redemptionType_.Clone();
      codeProvidedOnRedeemSettings_ = other.codeProvidedOnRedeemSettings_ != null ? other.codeProvidedOnRedeemSettings_.Clone() : null;
      fixedCodeSettings_ = other.fixedCodeSettings_ != null ? other.fixedCodeSettings_.Clone() : null;
      standardSettings_ = other.standardSettings_ != null ? other.standardSettings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedemptionSettings Clone() {
      return new RedemptionSettings(this);
    }

    /// <summary>Field number for the "redemptionStartDate" field.</summary>
    public const int RedemptionStartDateFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp redemptionStartDate_;
    /// <summary>
    /// Optional field that can be set if offers can only be redeemed after a certain date. Defaults to the offer issue start date. Needs to be greater than / equal to the offer issue start date, and less than / equal to offer issue end date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RedemptionStartDate {
      get { return redemptionStartDate_; }
      set {
        redemptionStartDate_ = value;
      }
    }

    /// <summary>Field number for the "redemptionEndDate" field.</summary>
    public const int RedemptionEndDateFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp redemptionEndDate_;
    /// <summary>
    /// Optional field that can be set if offers can only be redeemed until a certain date. Defaults to the offer issue end date. Needs to be less than / equal to the offer issue end date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RedemptionEndDate {
      get { return redemptionEndDate_; }
      set {
        redemptionEndDate_ = value;
      }
    }

    /// <summary>Field number for the "redemptionType" field.</summary>
    public const int RedemptionTypeFieldNumber = 3;
    private static readonly pb::FieldCodec<global::PKSingleUseCoupons.RedemptionType> _repeated_redemptionType_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::PKSingleUseCoupons.RedemptionType) x);
    private readonly pbc::RepeatedField<global::PKSingleUseCoupons.RedemptionType> redemptionType_ = new pbc::RepeatedField<global::PKSingleUseCoupons.RedemptionType>();
    /// <summary>
    /// Dictates redemption type; defaults to API.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PKSingleUseCoupons.RedemptionType> RedemptionType {
      get { return redemptionType_; }
    }

    /// <summary>Field number for the "codeProvidedOnRedeemSettings" field.</summary>
    public const int CodeProvidedOnRedeemSettingsFieldNumber = 5;
    private global::PKSingleUseCoupons.CustomerInitiatedCodeProvideOnRedeemSettings codeProvidedOnRedeemSettings_;
    /// <summary>
    /// Settings for code provided on redemption; a list of valid codes and possible invalid-code error message needs to be provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKSingleUseCoupons.CustomerInitiatedCodeProvideOnRedeemSettings CodeProvidedOnRedeemSettings {
      get { return codeProvidedOnRedeemSettings_; }
      set {
        codeProvidedOnRedeemSettings_ = value;
      }
    }

    /// <summary>Field number for the "fixedCodeSettings" field.</summary>
    public const int FixedCodeSettingsFieldNumber = 6;
    private global::PKSingleUseCoupons.CustomerInitiatedFixedCodeSettings fixedCodeSettings_;
    /// <summary>
    /// Settings for fixed code redemption.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKSingleUseCoupons.CustomerInitiatedFixedCodeSettings FixedCodeSettings {
      get { return fixedCodeSettings_; }
      set {
        fixedCodeSettings_ = value;
      }
    }

    /// <summary>Field number for the "standardSettings" field.</summary>
    public const int StandardSettingsFieldNumber = 7;
    private global::PKSingleUseCoupons.StandardPassKitHostedPage standardSettings_;
    /// <summary>
    /// Standard redemption page design, hosted by PassKit. Mandatory field if the type is any of the customer initiated redemptions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKSingleUseCoupons.StandardPassKitHostedPage StandardSettings {
      get { return standardSettings_; }
      set {
        standardSettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedemptionSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedemptionSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RedemptionStartDate, other.RedemptionStartDate)) return false;
      if (!object.Equals(RedemptionEndDate, other.RedemptionEndDate)) return false;
      if(!redemptionType_.Equals(other.redemptionType_)) return false;
      if (!object.Equals(CodeProvidedOnRedeemSettings, other.CodeProvidedOnRedeemSettings)) return false;
      if (!object.Equals(FixedCodeSettings, other.FixedCodeSettings)) return false;
      if (!object.Equals(StandardSettings, other.StandardSettings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (redemptionStartDate_ != null) hash ^= RedemptionStartDate.GetHashCode();
      if (redemptionEndDate_ != null) hash ^= RedemptionEndDate.GetHashCode();
      hash ^= redemptionType_.GetHashCode();
      if (codeProvidedOnRedeemSettings_ != null) hash ^= CodeProvidedOnRedeemSettings.GetHashCode();
      if (fixedCodeSettings_ != null) hash ^= FixedCodeSettings.GetHashCode();
      if (standardSettings_ != null) hash ^= StandardSettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (redemptionStartDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RedemptionStartDate);
      }
      if (redemptionEndDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RedemptionEndDate);
      }
      redemptionType_.WriteTo(output, _repeated_redemptionType_codec);
      if (codeProvidedOnRedeemSettings_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CodeProvidedOnRedeemSettings);
      }
      if (fixedCodeSettings_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(FixedCodeSettings);
      }
      if (standardSettings_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StandardSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (redemptionStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedemptionStartDate);
      }
      if (redemptionEndDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedemptionEndDate);
      }
      size += redemptionType_.CalculateSize(_repeated_redemptionType_codec);
      if (codeProvidedOnRedeemSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CodeProvidedOnRedeemSettings);
      }
      if (fixedCodeSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FixedCodeSettings);
      }
      if (standardSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StandardSettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedemptionSettings other) {
      if (other == null) {
        return;
      }
      if (other.redemptionStartDate_ != null) {
        if (redemptionStartDate_ == null) {
          RedemptionStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RedemptionStartDate.MergeFrom(other.RedemptionStartDate);
      }
      if (other.redemptionEndDate_ != null) {
        if (redemptionEndDate_ == null) {
          RedemptionEndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RedemptionEndDate.MergeFrom(other.RedemptionEndDate);
      }
      redemptionType_.Add(other.redemptionType_);
      if (other.codeProvidedOnRedeemSettings_ != null) {
        if (codeProvidedOnRedeemSettings_ == null) {
          CodeProvidedOnRedeemSettings = new global::PKSingleUseCoupons.CustomerInitiatedCodeProvideOnRedeemSettings();
        }
        CodeProvidedOnRedeemSettings.MergeFrom(other.CodeProvidedOnRedeemSettings);
      }
      if (other.fixedCodeSettings_ != null) {
        if (fixedCodeSettings_ == null) {
          FixedCodeSettings = new global::PKSingleUseCoupons.CustomerInitiatedFixedCodeSettings();
        }
        FixedCodeSettings.MergeFrom(other.FixedCodeSettings);
      }
      if (other.standardSettings_ != null) {
        if (standardSettings_ == null) {
          StandardSettings = new global::PKSingleUseCoupons.StandardPassKitHostedPage();
        }
        StandardSettings.MergeFrom(other.StandardSettings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (redemptionStartDate_ == null) {
              RedemptionStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RedemptionStartDate);
            break;
          }
          case 18: {
            if (redemptionEndDate_ == null) {
              RedemptionEndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RedemptionEndDate);
            break;
          }
          case 26:
          case 24: {
            redemptionType_.AddEntriesFrom(input, _repeated_redemptionType_codec);
            break;
          }
          case 42: {
            if (codeProvidedOnRedeemSettings_ == null) {
              CodeProvidedOnRedeemSettings = new global::PKSingleUseCoupons.CustomerInitiatedCodeProvideOnRedeemSettings();
            }
            input.ReadMessage(CodeProvidedOnRedeemSettings);
            break;
          }
          case 50: {
            if (fixedCodeSettings_ == null) {
              FixedCodeSettings = new global::PKSingleUseCoupons.CustomerInitiatedFixedCodeSettings();
            }
            input.ReadMessage(FixedCodeSettings);
            break;
          }
          case 58: {
            if (standardSettings_ == null) {
              StandardSettings = new global::PKSingleUseCoupons.StandardPassKitHostedPage();
            }
            input.ReadMessage(StandardSettings);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomerInitiatedFixedCodeSettings : pb::IMessage<CustomerInitiatedFixedCodeSettings> {
    private static readonly pb::MessageParser<CustomerInitiatedFixedCodeSettings> _parser = new pb::MessageParser<CustomerInitiatedFixedCodeSettings>(() => new CustomerInitiatedFixedCodeSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomerInitiatedFixedCodeSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.OfferReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerInitiatedFixedCodeSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerInitiatedFixedCodeSettings(CustomerInitiatedFixedCodeSettings other) : this() {
      fixedCode_ = other.fixedCode_;
      useCouponSku_ = other.useCouponSku_;
      barcode_ = other.barcode_;
      redemptionTimer_ = other.redemptionTimer_ != null ? other.redemptionTimer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerInitiatedFixedCodeSettings Clone() {
      return new CustomerInitiatedFixedCodeSettings(this);
    }

    /// <summary>Field number for the "fixedCode" field.</summary>
    public const int FixedCodeFieldNumber = 1;
    private string fixedCode_ = "";
    /// <summary>
    /// For fixed code customer initiated redemption; the fixed code to display needs to be set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FixedCode {
      get { return fixedCode_; }
      set {
        fixedCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "useCouponSku" field.</summary>
    public const int UseCouponSkuFieldNumber = 2;
    private bool useCouponSku_;
    /// <summary>
    /// If set to true will use coupon.sku as the fixed code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseCouponSku {
      get { return useCouponSku_; }
      set {
        useCouponSku_ = value;
      }
    }

    /// <summary>Field number for the "barcode" field.</summary>
    public const int BarcodeFieldNumber = 3;
    private global::PKIo.BarcodeType barcode_ = global::PKIo.BarcodeType.DoNotUse;
    /// <summary>
    /// If set will render a barcode underneath the fixed code with as contents the fixed code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.BarcodeType Barcode {
      get { return barcode_; }
      set {
        barcode_ = value;
      }
    }

    /// <summary>Field number for the "redemptionTimer" field.</summary>
    public const int RedemptionTimerFieldNumber = 4;
    private global::PKSingleUseCoupons.RedemptionTimerSettings redemptionTimer_;
    /// <summary>
    /// Count down timer for redemption.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKSingleUseCoupons.RedemptionTimerSettings RedemptionTimer {
      get { return redemptionTimer_; }
      set {
        redemptionTimer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomerInitiatedFixedCodeSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomerInitiatedFixedCodeSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FixedCode != other.FixedCode) return false;
      if (UseCouponSku != other.UseCouponSku) return false;
      if (Barcode != other.Barcode) return false;
      if (!object.Equals(RedemptionTimer, other.RedemptionTimer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FixedCode.Length != 0) hash ^= FixedCode.GetHashCode();
      if (UseCouponSku != false) hash ^= UseCouponSku.GetHashCode();
      if (Barcode != global::PKIo.BarcodeType.DoNotUse) hash ^= Barcode.GetHashCode();
      if (redemptionTimer_ != null) hash ^= RedemptionTimer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FixedCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FixedCode);
      }
      if (UseCouponSku != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseCouponSku);
      }
      if (Barcode != global::PKIo.BarcodeType.DoNotUse) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Barcode);
      }
      if (redemptionTimer_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RedemptionTimer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FixedCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FixedCode);
      }
      if (UseCouponSku != false) {
        size += 1 + 1;
      }
      if (Barcode != global::PKIo.BarcodeType.DoNotUse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Barcode);
      }
      if (redemptionTimer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedemptionTimer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomerInitiatedFixedCodeSettings other) {
      if (other == null) {
        return;
      }
      if (other.FixedCode.Length != 0) {
        FixedCode = other.FixedCode;
      }
      if (other.UseCouponSku != false) {
        UseCouponSku = other.UseCouponSku;
      }
      if (other.Barcode != global::PKIo.BarcodeType.DoNotUse) {
        Barcode = other.Barcode;
      }
      if (other.redemptionTimer_ != null) {
        if (redemptionTimer_ == null) {
          RedemptionTimer = new global::PKSingleUseCoupons.RedemptionTimerSettings();
        }
        RedemptionTimer.MergeFrom(other.RedemptionTimer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FixedCode = input.ReadString();
            break;
          }
          case 16: {
            UseCouponSku = input.ReadBool();
            break;
          }
          case 24: {
            Barcode = (global::PKIo.BarcodeType) input.ReadEnum();
            break;
          }
          case 34: {
            if (redemptionTimer_ == null) {
              RedemptionTimer = new global::PKSingleUseCoupons.RedemptionTimerSettings();
            }
            input.ReadMessage(RedemptionTimer);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RedemptionTimerSettings : pb::IMessage<RedemptionTimerSettings> {
    private static readonly pb::MessageParser<RedemptionTimerSettings> _parser = new pb::MessageParser<RedemptionTimerSettings>(() => new RedemptionTimerSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedemptionTimerSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.OfferReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedemptionTimerSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedemptionTimerSettings(RedemptionTimerSettings other) : this() {
      timeoutSeconds_ = other.timeoutSeconds_;
      timerHelpText_ = other.timerHelpText_;
      localizedTimeHelpText_ = other.localizedTimeHelpText_ != null ? other.localizedTimeHelpText_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedemptionTimerSettings Clone() {
      return new RedemptionTimerSettings(this);
    }

    /// <summary>Field number for the "timeoutSeconds" field.</summary>
    public const int TimeoutSecondsFieldNumber = 1;
    private uint timeoutSeconds_;
    /// <summary>
    /// The number of seconds the redemption page displays the redemption code. When the times runs out, the redemption page will show the 'redemption period expired' message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TimeoutSeconds {
      get { return timeoutSeconds_; }
      set {
        timeoutSeconds_ = value;
      }
    }

    /// <summary>Field number for the "timerHelpText" field.</summary>
    public const int TimerHelpTextFieldNumber = 2;
    private string timerHelpText_ = "";
    /// <summary>
    /// Help text rendered above redemption timer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimerHelpText {
      get { return timerHelpText_; }
      set {
        timerHelpText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedTimeHelpText" field.</summary>
    public const int LocalizedTimeHelpTextFieldNumber = 3;
    private global::PKIo.LocalizedString localizedTimeHelpText_;
    /// <summary>
    /// Localized help text for redemption timer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedTimeHelpText {
      get { return localizedTimeHelpText_; }
      set {
        localizedTimeHelpText_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedemptionTimerSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedemptionTimerSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeoutSeconds != other.TimeoutSeconds) return false;
      if (TimerHelpText != other.TimerHelpText) return false;
      if (!object.Equals(LocalizedTimeHelpText, other.LocalizedTimeHelpText)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeoutSeconds != 0) hash ^= TimeoutSeconds.GetHashCode();
      if (TimerHelpText.Length != 0) hash ^= TimerHelpText.GetHashCode();
      if (localizedTimeHelpText_ != null) hash ^= LocalizedTimeHelpText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TimeoutSeconds != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TimeoutSeconds);
      }
      if (TimerHelpText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TimerHelpText);
      }
      if (localizedTimeHelpText_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LocalizedTimeHelpText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TimeoutSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeoutSeconds);
      }
      if (TimerHelpText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimerHelpText);
      }
      if (localizedTimeHelpText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedTimeHelpText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedemptionTimerSettings other) {
      if (other == null) {
        return;
      }
      if (other.TimeoutSeconds != 0) {
        TimeoutSeconds = other.TimeoutSeconds;
      }
      if (other.TimerHelpText.Length != 0) {
        TimerHelpText = other.TimerHelpText;
      }
      if (other.localizedTimeHelpText_ != null) {
        if (localizedTimeHelpText_ == null) {
          LocalizedTimeHelpText = new global::PKIo.LocalizedString();
        }
        LocalizedTimeHelpText.MergeFrom(other.LocalizedTimeHelpText);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeoutSeconds = input.ReadUInt32();
            break;
          }
          case 18: {
            TimerHelpText = input.ReadString();
            break;
          }
          case 26: {
            if (localizedTimeHelpText_ == null) {
              LocalizedTimeHelpText = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedTimeHelpText);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomerInitiatedCodeProvideOnRedeemSettings : pb::IMessage<CustomerInitiatedCodeProvideOnRedeemSettings> {
    private static readonly pb::MessageParser<CustomerInitiatedCodeProvideOnRedeemSettings> _parser = new pb::MessageParser<CustomerInitiatedCodeProvideOnRedeemSettings>(() => new CustomerInitiatedCodeProvideOnRedeemSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomerInitiatedCodeProvideOnRedeemSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.OfferReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerInitiatedCodeProvideOnRedeemSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerInitiatedCodeProvideOnRedeemSettings(CustomerInitiatedCodeProvideOnRedeemSettings other) : this() {
      validCodes_ = other.validCodes_.Clone();
      redemptionCodeInput_ = other.redemptionCodeInput_ != null ? other.redemptionCodeInput_.Clone() : null;
      submitButtonText_ = other.submitButtonText_;
      localizedSubmitButtonText_ = other.localizedSubmitButtonText_ != null ? other.localizedSubmitButtonText_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerInitiatedCodeProvideOnRedeemSettings Clone() {
      return new CustomerInitiatedCodeProvideOnRedeemSettings(this);
    }

    /// <summary>Field number for the "validCodes" field.</summary>
    public const int ValidCodesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_validCodes_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> validCodes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional array of valid codes that can be input on redemption.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ValidCodes {
      get { return validCodes_; }
    }

    /// <summary>Field number for the "redemptionCodeInput" field.</summary>
    public const int RedemptionCodeInputFieldNumber = 2;
    private global::PKSingleUseCoupons.InputField redemptionCodeInput_;
    /// <summary>
    /// Input field box for entering the redemption code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKSingleUseCoupons.InputField RedemptionCodeInput {
      get { return redemptionCodeInput_; }
      set {
        redemptionCodeInput_ = value;
      }
    }

    /// <summary>Field number for the "submitButtonText" field.</summary>
    public const int SubmitButtonTextFieldNumber = 3;
    private string submitButtonText_ = "";
    /// <summary>
    /// Submit button to confirm the validation code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubmitButtonText {
      get { return submitButtonText_; }
      set {
        submitButtonText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedSubmitButtonText" field.</summary>
    public const int LocalizedSubmitButtonTextFieldNumber = 4;
    private global::PKIo.LocalizedString localizedSubmitButtonText_;
    /// <summary>
    /// Localized submit button text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedSubmitButtonText {
      get { return localizedSubmitButtonText_; }
      set {
        localizedSubmitButtonText_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomerInitiatedCodeProvideOnRedeemSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomerInitiatedCodeProvideOnRedeemSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!validCodes_.Equals(other.validCodes_)) return false;
      if (!object.Equals(RedemptionCodeInput, other.RedemptionCodeInput)) return false;
      if (SubmitButtonText != other.SubmitButtonText) return false;
      if (!object.Equals(LocalizedSubmitButtonText, other.LocalizedSubmitButtonText)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= validCodes_.GetHashCode();
      if (redemptionCodeInput_ != null) hash ^= RedemptionCodeInput.GetHashCode();
      if (SubmitButtonText.Length != 0) hash ^= SubmitButtonText.GetHashCode();
      if (localizedSubmitButtonText_ != null) hash ^= LocalizedSubmitButtonText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      validCodes_.WriteTo(output, _repeated_validCodes_codec);
      if (redemptionCodeInput_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RedemptionCodeInput);
      }
      if (SubmitButtonText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SubmitButtonText);
      }
      if (localizedSubmitButtonText_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocalizedSubmitButtonText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += validCodes_.CalculateSize(_repeated_validCodes_codec);
      if (redemptionCodeInput_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedemptionCodeInput);
      }
      if (SubmitButtonText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubmitButtonText);
      }
      if (localizedSubmitButtonText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedSubmitButtonText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomerInitiatedCodeProvideOnRedeemSettings other) {
      if (other == null) {
        return;
      }
      validCodes_.Add(other.validCodes_);
      if (other.redemptionCodeInput_ != null) {
        if (redemptionCodeInput_ == null) {
          RedemptionCodeInput = new global::PKSingleUseCoupons.InputField();
        }
        RedemptionCodeInput.MergeFrom(other.RedemptionCodeInput);
      }
      if (other.SubmitButtonText.Length != 0) {
        SubmitButtonText = other.SubmitButtonText;
      }
      if (other.localizedSubmitButtonText_ != null) {
        if (localizedSubmitButtonText_ == null) {
          LocalizedSubmitButtonText = new global::PKIo.LocalizedString();
        }
        LocalizedSubmitButtonText.MergeFrom(other.LocalizedSubmitButtonText);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            validCodes_.AddEntriesFrom(input, _repeated_validCodes_codec);
            break;
          }
          case 18: {
            if (redemptionCodeInput_ == null) {
              RedemptionCodeInput = new global::PKSingleUseCoupons.InputField();
            }
            input.ReadMessage(RedemptionCodeInput);
            break;
          }
          case 26: {
            SubmitButtonText = input.ReadString();
            break;
          }
          case 34: {
            if (localizedSubmitButtonText_ == null) {
              LocalizedSubmitButtonText = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedSubmitButtonText);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InputField : pb::IMessage<InputField> {
    private static readonly pb::MessageParser<InputField> _parser = new pb::MessageParser<InputField>(() => new InputField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InputField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.OfferReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputField(InputField other) : this() {
      label_ = other.label_;
      localizedLabel_ = other.localizedLabel_ != null ? other.localizedLabel_.Clone() : null;
      helperText_ = other.helperText_;
      localizedHelperText_ = other.localizedHelperText_ != null ? other.localizedHelperText_.Clone() : null;
      errorMessage_ = other.errorMessage_;
      localizedErrorMessage_ = other.localizedErrorMessage_ != null ? other.localizedErrorMessage_.Clone() : null;
      defaultValue_ = other.defaultValue_;
      localizedDefaultValue_ = other.localizedDefaultValue_ != null ? other.localizedDefaultValue_.Clone() : null;
      placeholder_ = other.placeholder_;
      localizedPlaceholder_ = other.localizedPlaceholder_ != null ? other.localizedPlaceholder_.Clone() : null;
      validation_ = other.validation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputField Clone() {
      return new InputField(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private string label_ = "";
    /// <summary>
    /// The label of input field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedLabel" field.</summary>
    public const int LocalizedLabelFieldNumber = 2;
    private global::PKIo.LocalizedString localizedLabel_;
    /// <summary>
    /// Localized label of input field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedLabel {
      get { return localizedLabel_; }
      set {
        localizedLabel_ = value;
      }
    }

    /// <summary>Field number for the "helperText" field.</summary>
    public const int HelperTextFieldNumber = 3;
    private string helperText_ = "";
    /// <summary>
    /// Help text shown below the input field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HelperText {
      get { return helperText_; }
      set {
        helperText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedHelperText" field.</summary>
    public const int LocalizedHelperTextFieldNumber = 4;
    private global::PKIo.LocalizedString localizedHelperText_;
    /// <summary>
    /// Localized help text shown below the input field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedHelperText {
      get { return localizedHelperText_; }
      set {
        localizedHelperText_ = value;
      }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 5;
    private string errorMessage_ = "";
    /// <summary>
    /// Optional message that is displayed if the user provides an invalid input value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedErrorMessage" field.</summary>
    public const int LocalizedErrorMessageFieldNumber = 6;
    private global::PKIo.LocalizedString localizedErrorMessage_;
    /// <summary>
    /// Localized invalid code error message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedErrorMessage {
      get { return localizedErrorMessage_; }
      set {
        localizedErrorMessage_ = value;
      }
    }

    /// <summary>Field number for the "defaultValue" field.</summary>
    public const int DefaultValueFieldNumber = 7;
    private string defaultValue_ = "";
    /// <summary>
    /// Default input value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultValue {
      get { return defaultValue_; }
      set {
        defaultValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDefaultValue" field.</summary>
    public const int LocalizedDefaultValueFieldNumber = 8;
    private global::PKIo.LocalizedString localizedDefaultValue_;
    /// <summary>
    /// Localized default value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedDefaultValue {
      get { return localizedDefaultValue_; }
      set {
        localizedDefaultValue_ = value;
      }
    }

    /// <summary>Field number for the "placeholder" field.</summary>
    public const int PlaceholderFieldNumber = 9;
    private string placeholder_ = "";
    /// <summary>
    /// Placeholder text for the input field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Placeholder {
      get { return placeholder_; }
      set {
        placeholder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedPlaceholder" field.</summary>
    public const int LocalizedPlaceholderFieldNumber = 10;
    private global::PKIo.LocalizedString localizedPlaceholder_;
    /// <summary>
    /// Localized placeholder text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedPlaceholder {
      get { return localizedPlaceholder_; }
      set {
        localizedPlaceholder_ = value;
      }
    }

    /// <summary>Field number for the "validation" field.</summary>
    public const int ValidationFieldNumber = 11;
    private string validation_ = "";
    /// <summary>
    /// A regex which allows you to set custom validation rules for the input value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Validation {
      get { return validation_; }
      set {
        validation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InputField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InputField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (!object.Equals(LocalizedLabel, other.LocalizedLabel)) return false;
      if (HelperText != other.HelperText) return false;
      if (!object.Equals(LocalizedHelperText, other.LocalizedHelperText)) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      if (!object.Equals(LocalizedErrorMessage, other.LocalizedErrorMessage)) return false;
      if (DefaultValue != other.DefaultValue) return false;
      if (!object.Equals(LocalizedDefaultValue, other.LocalizedDefaultValue)) return false;
      if (Placeholder != other.Placeholder) return false;
      if (!object.Equals(LocalizedPlaceholder, other.LocalizedPlaceholder)) return false;
      if (Validation != other.Validation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (localizedLabel_ != null) hash ^= LocalizedLabel.GetHashCode();
      if (HelperText.Length != 0) hash ^= HelperText.GetHashCode();
      if (localizedHelperText_ != null) hash ^= LocalizedHelperText.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (localizedErrorMessage_ != null) hash ^= LocalizedErrorMessage.GetHashCode();
      if (DefaultValue.Length != 0) hash ^= DefaultValue.GetHashCode();
      if (localizedDefaultValue_ != null) hash ^= LocalizedDefaultValue.GetHashCode();
      if (Placeholder.Length != 0) hash ^= Placeholder.GetHashCode();
      if (localizedPlaceholder_ != null) hash ^= LocalizedPlaceholder.GetHashCode();
      if (Validation.Length != 0) hash ^= Validation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Label.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Label);
      }
      if (localizedLabel_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LocalizedLabel);
      }
      if (HelperText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HelperText);
      }
      if (localizedHelperText_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocalizedHelperText);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ErrorMessage);
      }
      if (localizedErrorMessage_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LocalizedErrorMessage);
      }
      if (DefaultValue.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DefaultValue);
      }
      if (localizedDefaultValue_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LocalizedDefaultValue);
      }
      if (Placeholder.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Placeholder);
      }
      if (localizedPlaceholder_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LocalizedPlaceholder);
      }
      if (Validation.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Validation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (localizedLabel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedLabel);
      }
      if (HelperText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HelperText);
      }
      if (localizedHelperText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedHelperText);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (localizedErrorMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedErrorMessage);
      }
      if (DefaultValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultValue);
      }
      if (localizedDefaultValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDefaultValue);
      }
      if (Placeholder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Placeholder);
      }
      if (localizedPlaceholder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedPlaceholder);
      }
      if (Validation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Validation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InputField other) {
      if (other == null) {
        return;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.localizedLabel_ != null) {
        if (localizedLabel_ == null) {
          LocalizedLabel = new global::PKIo.LocalizedString();
        }
        LocalizedLabel.MergeFrom(other.LocalizedLabel);
      }
      if (other.HelperText.Length != 0) {
        HelperText = other.HelperText;
      }
      if (other.localizedHelperText_ != null) {
        if (localizedHelperText_ == null) {
          LocalizedHelperText = new global::PKIo.LocalizedString();
        }
        LocalizedHelperText.MergeFrom(other.LocalizedHelperText);
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      if (other.localizedErrorMessage_ != null) {
        if (localizedErrorMessage_ == null) {
          LocalizedErrorMessage = new global::PKIo.LocalizedString();
        }
        LocalizedErrorMessage.MergeFrom(other.LocalizedErrorMessage);
      }
      if (other.DefaultValue.Length != 0) {
        DefaultValue = other.DefaultValue;
      }
      if (other.localizedDefaultValue_ != null) {
        if (localizedDefaultValue_ == null) {
          LocalizedDefaultValue = new global::PKIo.LocalizedString();
        }
        LocalizedDefaultValue.MergeFrom(other.LocalizedDefaultValue);
      }
      if (other.Placeholder.Length != 0) {
        Placeholder = other.Placeholder;
      }
      if (other.localizedPlaceholder_ != null) {
        if (localizedPlaceholder_ == null) {
          LocalizedPlaceholder = new global::PKIo.LocalizedString();
        }
        LocalizedPlaceholder.MergeFrom(other.LocalizedPlaceholder);
      }
      if (other.Validation.Length != 0) {
        Validation = other.Validation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Label = input.ReadString();
            break;
          }
          case 18: {
            if (localizedLabel_ == null) {
              LocalizedLabel = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedLabel);
            break;
          }
          case 26: {
            HelperText = input.ReadString();
            break;
          }
          case 34: {
            if (localizedHelperText_ == null) {
              LocalizedHelperText = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedHelperText);
            break;
          }
          case 42: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 50: {
            if (localizedErrorMessage_ == null) {
              LocalizedErrorMessage = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedErrorMessage);
            break;
          }
          case 58: {
            DefaultValue = input.ReadString();
            break;
          }
          case 66: {
            if (localizedDefaultValue_ == null) {
              LocalizedDefaultValue = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedDefaultValue);
            break;
          }
          case 74: {
            Placeholder = input.ReadString();
            break;
          }
          case 82: {
            if (localizedPlaceholder_ == null) {
              LocalizedPlaceholder = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedPlaceholder);
            break;
          }
          case 90: {
            Validation = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StandardPassKitHostedPage : pb::IMessage<StandardPassKitHostedPage> {
    private static readonly pb::MessageParser<StandardPassKitHostedPage> _parser = new pb::MessageParser<StandardPassKitHostedPage>(() => new StandardPassKitHostedPage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StandardPassKitHostedPage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.OfferReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardPassKitHostedPage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardPassKitHostedPage(StandardPassKitHostedPage other) : this() {
      title_ = other.title_;
      localizedTitle_ = other.localizedTitle_ != null ? other.localizedTitle_.Clone() : null;
      redemptionInstructions_ = other.redemptionInstructions_;
      localizedRedemptionInstructions_ = other.localizedRedemptionInstructions_ != null ? other.localizedRedemptionInstructions_.Clone() : null;
      footerText_ = other.footerText_;
      localizedFooterText_ = other.localizedFooterText_ != null ? other.localizedFooterText_.Clone() : null;
      responseTexts_ = other.responseTexts_ != null ? other.responseTexts_.Clone() : null;
      hideRedeemedDateTime_ = other.hideRedeemedDateTime_;
      callToActionButton_ = other.callToActionButton_ != null ? other.callToActionButton_.Clone() : null;
      cssOverrides_ = other.cssOverrides_;
      switch (other.RedemptionImageAssetsCase) {
        case RedemptionImageAssetsOneofCase.ImageIds:
          ImageIds = other.ImageIds.Clone();
          break;
        case RedemptionImageAssetsOneofCase.Images:
          Images = other.Images.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardPassKitHostedPage Clone() {
      return new StandardPassKitHostedPage(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    /// <summary>
    /// Title shown on the redemption page browser tab. If not set, offer title will be shown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedTitle" field.</summary>
    public const int LocalizedTitleFieldNumber = 2;
    private global::PKIo.LocalizedString localizedTitle_;
    /// <summary>
    /// Localized title.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedTitle {
      get { return localizedTitle_; }
      set {
        localizedTitle_ = value;
      }
    }

    /// <summary>Field number for the "redemptionInstructions" field.</summary>
    public const int RedemptionInstructionsFieldNumber = 3;
    private string redemptionInstructions_ = "";
    /// <summary>
    /// Redemption instructions, show underneath the redemption banner image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RedemptionInstructions {
      get { return redemptionInstructions_; }
      set {
        redemptionInstructions_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedRedemptionInstructions" field.</summary>
    public const int LocalizedRedemptionInstructionsFieldNumber = 4;
    private global::PKIo.LocalizedString localizedRedemptionInstructions_;
    /// <summary>
    /// Localized redemption instructions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedRedemptionInstructions {
      get { return localizedRedemptionInstructions_; }
      set {
        localizedRedemptionInstructions_ = value;
      }
    }

    /// <summary>Field number for the "imageIds" field.</summary>
    public const int ImageIdsFieldNumber = 5;
    /// <summary>
    /// Image data defined by image ids.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.ImageIds ImageIds {
      get { return redemptionImageAssetsCase_ == RedemptionImageAssetsOneofCase.ImageIds ? (global::PKIo.ImageIds) redemptionImageAssets_ : null; }
      set {
        redemptionImageAssets_ = value;
        redemptionImageAssetsCase_ = value == null ? RedemptionImageAssetsOneofCase.None : RedemptionImageAssetsOneofCase.ImageIds;
      }
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 6;
    /// <summary>
    /// Image data defined as image object.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.ImageData Images {
      get { return redemptionImageAssetsCase_ == RedemptionImageAssetsOneofCase.Images ? (global::PKIo.ImageData) redemptionImageAssets_ : null; }
      set {
        redemptionImageAssets_ = value;
        redemptionImageAssetsCase_ = value == null ? RedemptionImageAssetsOneofCase.None : RedemptionImageAssetsOneofCase.Images;
      }
    }

    /// <summary>Field number for the "footerText" field.</summary>
    public const int FooterTextFieldNumber = 7;
    private string footerText_ = "";
    /// <summary>
    /// Text shown at the footer of the page, underneath the redemption code / redemption code input.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FooterText {
      get { return footerText_; }
      set {
        footerText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedFooterText" field.</summary>
    public const int LocalizedFooterTextFieldNumber = 8;
    private global::PKIo.LocalizedString localizedFooterText_;
    /// <summary>
    /// Localized text shown at the footer of the page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedFooterText {
      get { return localizedFooterText_; }
      set {
        localizedFooterText_ = value;
      }
    }

    /// <summary>Field number for the "responseTexts" field.</summary>
    public const int ResponseTextsFieldNumber = 9;
    private global::PKSingleUseCoupons.ResponseTexts responseTexts_;
    /// <summary>
    /// Customize success or error messages shown on the page or error dialog box.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKSingleUseCoupons.ResponseTexts ResponseTexts {
      get { return responseTexts_; }
      set {
        responseTexts_ = value;
      }
    }

    /// <summary>Field number for the "hideRedeemedDateTime" field.</summary>
    public const int HideRedeemedDateTimeFieldNumber = 10;
    private bool hideRedeemedDateTime_;
    /// <summary>
    /// Date time showed with couponAlreadyRedeemedText. Date time is localized to browser preferred language.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HideRedeemedDateTime {
      get { return hideRedeemedDateTime_; }
      set {
        hideRedeemedDateTime_ = value;
      }
    }

    /// <summary>Field number for the "callToActionButton" field.</summary>
    public const int CallToActionButtonFieldNumber = 11;
    private global::PKSingleUseCoupons.CallToActionButton callToActionButton_;
    /// <summary>
    /// Call to action button rendered on error page of coupon already redeemed to provide better customer experience.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKSingleUseCoupons.CallToActionButton CallToActionButton {
      get { return callToActionButton_; }
      set {
        callToActionButton_ = value;
      }
    }

    /// <summary>Field number for the "cssOverrides" field.</summary>
    public const int CssOverridesFieldNumber = 12;
    private string cssOverrides_ = "";
    /// <summary>
    /// Optional CSS overrides to ensure the page aligns with your brand guidelines.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CssOverrides {
      get { return cssOverrides_; }
      set {
        cssOverrides_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object redemptionImageAssets_;
    /// <summary>Enum of possible cases for the "RedemptionImageAssets" oneof.</summary>
    public enum RedemptionImageAssetsOneofCase {
      None = 0,
      ImageIds = 5,
      Images = 6,
    }
    private RedemptionImageAssetsOneofCase redemptionImageAssetsCase_ = RedemptionImageAssetsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedemptionImageAssetsOneofCase RedemptionImageAssetsCase {
      get { return redemptionImageAssetsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRedemptionImageAssets() {
      redemptionImageAssetsCase_ = RedemptionImageAssetsOneofCase.None;
      redemptionImageAssets_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StandardPassKitHostedPage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StandardPassKitHostedPage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (!object.Equals(LocalizedTitle, other.LocalizedTitle)) return false;
      if (RedemptionInstructions != other.RedemptionInstructions) return false;
      if (!object.Equals(LocalizedRedemptionInstructions, other.LocalizedRedemptionInstructions)) return false;
      if (!object.Equals(ImageIds, other.ImageIds)) return false;
      if (!object.Equals(Images, other.Images)) return false;
      if (FooterText != other.FooterText) return false;
      if (!object.Equals(LocalizedFooterText, other.LocalizedFooterText)) return false;
      if (!object.Equals(ResponseTexts, other.ResponseTexts)) return false;
      if (HideRedeemedDateTime != other.HideRedeemedDateTime) return false;
      if (!object.Equals(CallToActionButton, other.CallToActionButton)) return false;
      if (CssOverrides != other.CssOverrides) return false;
      if (RedemptionImageAssetsCase != other.RedemptionImageAssetsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (localizedTitle_ != null) hash ^= LocalizedTitle.GetHashCode();
      if (RedemptionInstructions.Length != 0) hash ^= RedemptionInstructions.GetHashCode();
      if (localizedRedemptionInstructions_ != null) hash ^= LocalizedRedemptionInstructions.GetHashCode();
      if (redemptionImageAssetsCase_ == RedemptionImageAssetsOneofCase.ImageIds) hash ^= ImageIds.GetHashCode();
      if (redemptionImageAssetsCase_ == RedemptionImageAssetsOneofCase.Images) hash ^= Images.GetHashCode();
      if (FooterText.Length != 0) hash ^= FooterText.GetHashCode();
      if (localizedFooterText_ != null) hash ^= LocalizedFooterText.GetHashCode();
      if (responseTexts_ != null) hash ^= ResponseTexts.GetHashCode();
      if (HideRedeemedDateTime != false) hash ^= HideRedeemedDateTime.GetHashCode();
      if (callToActionButton_ != null) hash ^= CallToActionButton.GetHashCode();
      if (CssOverrides.Length != 0) hash ^= CssOverrides.GetHashCode();
      hash ^= (int) redemptionImageAssetsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (localizedTitle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LocalizedTitle);
      }
      if (RedemptionInstructions.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RedemptionInstructions);
      }
      if (localizedRedemptionInstructions_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocalizedRedemptionInstructions);
      }
      if (redemptionImageAssetsCase_ == RedemptionImageAssetsOneofCase.ImageIds) {
        output.WriteRawTag(42);
        output.WriteMessage(ImageIds);
      }
      if (redemptionImageAssetsCase_ == RedemptionImageAssetsOneofCase.Images) {
        output.WriteRawTag(50);
        output.WriteMessage(Images);
      }
      if (FooterText.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(FooterText);
      }
      if (localizedFooterText_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LocalizedFooterText);
      }
      if (responseTexts_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ResponseTexts);
      }
      if (HideRedeemedDateTime != false) {
        output.WriteRawTag(80);
        output.WriteBool(HideRedeemedDateTime);
      }
      if (callToActionButton_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CallToActionButton);
      }
      if (CssOverrides.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CssOverrides);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (localizedTitle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedTitle);
      }
      if (RedemptionInstructions.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedemptionInstructions);
      }
      if (localizedRedemptionInstructions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedRedemptionInstructions);
      }
      if (redemptionImageAssetsCase_ == RedemptionImageAssetsOneofCase.ImageIds) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageIds);
      }
      if (redemptionImageAssetsCase_ == RedemptionImageAssetsOneofCase.Images) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Images);
      }
      if (FooterText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FooterText);
      }
      if (localizedFooterText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedFooterText);
      }
      if (responseTexts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseTexts);
      }
      if (HideRedeemedDateTime != false) {
        size += 1 + 1;
      }
      if (callToActionButton_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CallToActionButton);
      }
      if (CssOverrides.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CssOverrides);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StandardPassKitHostedPage other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.localizedTitle_ != null) {
        if (localizedTitle_ == null) {
          LocalizedTitle = new global::PKIo.LocalizedString();
        }
        LocalizedTitle.MergeFrom(other.LocalizedTitle);
      }
      if (other.RedemptionInstructions.Length != 0) {
        RedemptionInstructions = other.RedemptionInstructions;
      }
      if (other.localizedRedemptionInstructions_ != null) {
        if (localizedRedemptionInstructions_ == null) {
          LocalizedRedemptionInstructions = new global::PKIo.LocalizedString();
        }
        LocalizedRedemptionInstructions.MergeFrom(other.LocalizedRedemptionInstructions);
      }
      if (other.FooterText.Length != 0) {
        FooterText = other.FooterText;
      }
      if (other.localizedFooterText_ != null) {
        if (localizedFooterText_ == null) {
          LocalizedFooterText = new global::PKIo.LocalizedString();
        }
        LocalizedFooterText.MergeFrom(other.LocalizedFooterText);
      }
      if (other.responseTexts_ != null) {
        if (responseTexts_ == null) {
          ResponseTexts = new global::PKSingleUseCoupons.ResponseTexts();
        }
        ResponseTexts.MergeFrom(other.ResponseTexts);
      }
      if (other.HideRedeemedDateTime != false) {
        HideRedeemedDateTime = other.HideRedeemedDateTime;
      }
      if (other.callToActionButton_ != null) {
        if (callToActionButton_ == null) {
          CallToActionButton = new global::PKSingleUseCoupons.CallToActionButton();
        }
        CallToActionButton.MergeFrom(other.CallToActionButton);
      }
      if (other.CssOverrides.Length != 0) {
        CssOverrides = other.CssOverrides;
      }
      switch (other.RedemptionImageAssetsCase) {
        case RedemptionImageAssetsOneofCase.ImageIds:
          if (ImageIds == null) {
            ImageIds = new global::PKIo.ImageIds();
          }
          ImageIds.MergeFrom(other.ImageIds);
          break;
        case RedemptionImageAssetsOneofCase.Images:
          if (Images == null) {
            Images = new global::PKIo.ImageData();
          }
          Images.MergeFrom(other.Images);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            if (localizedTitle_ == null) {
              LocalizedTitle = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedTitle);
            break;
          }
          case 26: {
            RedemptionInstructions = input.ReadString();
            break;
          }
          case 34: {
            if (localizedRedemptionInstructions_ == null) {
              LocalizedRedemptionInstructions = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedRedemptionInstructions);
            break;
          }
          case 42: {
            global::PKIo.ImageIds subBuilder = new global::PKIo.ImageIds();
            if (redemptionImageAssetsCase_ == RedemptionImageAssetsOneofCase.ImageIds) {
              subBuilder.MergeFrom(ImageIds);
            }
            input.ReadMessage(subBuilder);
            ImageIds = subBuilder;
            break;
          }
          case 50: {
            global::PKIo.ImageData subBuilder = new global::PKIo.ImageData();
            if (redemptionImageAssetsCase_ == RedemptionImageAssetsOneofCase.Images) {
              subBuilder.MergeFrom(Images);
            }
            input.ReadMessage(subBuilder);
            Images = subBuilder;
            break;
          }
          case 58: {
            FooterText = input.ReadString();
            break;
          }
          case 66: {
            if (localizedFooterText_ == null) {
              LocalizedFooterText = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedFooterText);
            break;
          }
          case 74: {
            if (responseTexts_ == null) {
              ResponseTexts = new global::PKSingleUseCoupons.ResponseTexts();
            }
            input.ReadMessage(ResponseTexts);
            break;
          }
          case 80: {
            HideRedeemedDateTime = input.ReadBool();
            break;
          }
          case 90: {
            if (callToActionButton_ == null) {
              CallToActionButton = new global::PKSingleUseCoupons.CallToActionButton();
            }
            input.ReadMessage(CallToActionButton);
            break;
          }
          case 98: {
            CssOverrides = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CallToActionButton : pb::IMessage<CallToActionButton> {
    private static readonly pb::MessageParser<CallToActionButton> _parser = new pb::MessageParser<CallToActionButton>(() => new CallToActionButton());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallToActionButton> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.OfferReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallToActionButton() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallToActionButton(CallToActionButton other) : this() {
      hideCallToActionButton_ = other.hideCallToActionButton_;
      buttonText_ = other.buttonText_;
      localizedButtonText_ = other.localizedButtonText_ != null ? other.localizedButtonText_.Clone() : null;
      link_ = other.link_;
      localizedLink_ = other.localizedLink_ != null ? other.localizedLink_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallToActionButton Clone() {
      return new CallToActionButton(this);
    }

    /// <summary>Field number for the "hideCallToActionButton" field.</summary>
    public const int HideCallToActionButtonFieldNumber = 1;
    private bool hideCallToActionButton_;
    /// <summary>
    /// Set true to hide button.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HideCallToActionButton {
      get { return hideCallToActionButton_; }
      set {
        hideCallToActionButton_ = value;
      }
    }

    /// <summary>Field number for the "buttonText" field.</summary>
    public const int ButtonTextFieldNumber = 2;
    private string buttonText_ = "";
    /// <summary>
    /// Call-to-action text shown on the button.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ButtonText {
      get { return buttonText_; }
      set {
        buttonText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedButtonText" field.</summary>
    public const int LocalizedButtonTextFieldNumber = 3;
    private global::PKIo.LocalizedString localizedButtonText_;
    /// <summary>
    /// Localized button text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedButtonText {
      get { return localizedButtonText_; }
      set {
        localizedButtonText_ = value;
      }
    }

    /// <summary>Field number for the "link" field.</summary>
    public const int LinkFieldNumber = 4;
    private string link_ = "";
    /// <summary>
    /// Link that the button will open.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Link {
      get { return link_; }
      set {
        link_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedLink" field.</summary>
    public const int LocalizedLinkFieldNumber = 5;
    private global::PKIo.LocalizedString localizedLink_;
    /// <summary>
    /// Localized link that the button will open.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedLink {
      get { return localizedLink_; }
      set {
        localizedLink_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallToActionButton);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallToActionButton other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HideCallToActionButton != other.HideCallToActionButton) return false;
      if (ButtonText != other.ButtonText) return false;
      if (!object.Equals(LocalizedButtonText, other.LocalizedButtonText)) return false;
      if (Link != other.Link) return false;
      if (!object.Equals(LocalizedLink, other.LocalizedLink)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HideCallToActionButton != false) hash ^= HideCallToActionButton.GetHashCode();
      if (ButtonText.Length != 0) hash ^= ButtonText.GetHashCode();
      if (localizedButtonText_ != null) hash ^= LocalizedButtonText.GetHashCode();
      if (Link.Length != 0) hash ^= Link.GetHashCode();
      if (localizedLink_ != null) hash ^= LocalizedLink.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HideCallToActionButton != false) {
        output.WriteRawTag(8);
        output.WriteBool(HideCallToActionButton);
      }
      if (ButtonText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ButtonText);
      }
      if (localizedButtonText_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LocalizedButtonText);
      }
      if (Link.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Link);
      }
      if (localizedLink_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LocalizedLink);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HideCallToActionButton != false) {
        size += 1 + 1;
      }
      if (ButtonText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ButtonText);
      }
      if (localizedButtonText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedButtonText);
      }
      if (Link.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Link);
      }
      if (localizedLink_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedLink);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallToActionButton other) {
      if (other == null) {
        return;
      }
      if (other.HideCallToActionButton != false) {
        HideCallToActionButton = other.HideCallToActionButton;
      }
      if (other.ButtonText.Length != 0) {
        ButtonText = other.ButtonText;
      }
      if (other.localizedButtonText_ != null) {
        if (localizedButtonText_ == null) {
          LocalizedButtonText = new global::PKIo.LocalizedString();
        }
        LocalizedButtonText.MergeFrom(other.LocalizedButtonText);
      }
      if (other.Link.Length != 0) {
        Link = other.Link;
      }
      if (other.localizedLink_ != null) {
        if (localizedLink_ == null) {
          LocalizedLink = new global::PKIo.LocalizedString();
        }
        LocalizedLink.MergeFrom(other.LocalizedLink);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HideCallToActionButton = input.ReadBool();
            break;
          }
          case 18: {
            ButtonText = input.ReadString();
            break;
          }
          case 26: {
            if (localizedButtonText_ == null) {
              LocalizedButtonText = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedButtonText);
            break;
          }
          case 34: {
            Link = input.ReadString();
            break;
          }
          case 42: {
            if (localizedLink_ == null) {
              LocalizedLink = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedLink);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseTexts : pb::IMessage<ResponseTexts> {
    private static readonly pb::MessageParser<ResponseTexts> _parser = new pb::MessageParser<ResponseTexts>(() => new ResponseTexts());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseTexts> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.OfferReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseTexts() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseTexts(ResponseTexts other) : this() {
      redeemConfirmationDialogBoxText_ = other.redeemConfirmationDialogBoxText_;
      localizedRedeemConfirmationDialogBoxText_ = other.localizedRedeemConfirmationDialogBoxText_ != null ? other.localizedRedeemConfirmationDialogBoxText_.Clone() : null;
      cancelRedeemText_ = other.cancelRedeemText_;
      localizedCancelRedeemText_ = other.localizedCancelRedeemText_ != null ? other.localizedCancelRedeemText_.Clone() : null;
      afterRedeemText_ = other.afterRedeemText_;
      localizedAfterRedeemText_ = other.localizedAfterRedeemText_ != null ? other.localizedAfterRedeemText_.Clone() : null;
      couponAlreadyRedeemedText_ = other.couponAlreadyRedeemedText_;
      localizedCouponAlreadyRedeemedText_ = other.localizedCouponAlreadyRedeemedText_ != null ? other.localizedCouponAlreadyRedeemedText_.Clone() : null;
      offerExpiredText_ = other.offerExpiredText_;
      localizedOfferExpiredText_ = other.localizedOfferExpiredText_ != null ? other.localizedOfferExpiredText_.Clone() : null;
      couponExpiredText_ = other.couponExpiredText_;
      localizedCouponExpiredText_ = other.localizedCouponExpiredText_ != null ? other.localizedCouponExpiredText_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseTexts Clone() {
      return new ResponseTexts(this);
    }

    /// <summary>Field number for the "redeemConfirmationDialogBoxText" field.</summary>
    public const int RedeemConfirmationDialogBoxTextFieldNumber = 1;
    private string redeemConfirmationDialogBoxText_ = "";
    /// <summary>
    /// To be shown before redemption page is rendered. The dialogue box will have "Ok" and "Cancel" bottons.
    /// If visitor clicks "Ok", coupon will be redeemed and the redemption page will render fixed code.
    /// This only applies to the redemption type REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_FIXED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RedeemConfirmationDialogBoxText {
      get { return redeemConfirmationDialogBoxText_; }
      set {
        redeemConfirmationDialogBoxText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedRedeemConfirmationDialogBoxText" field.</summary>
    public const int LocalizedRedeemConfirmationDialogBoxTextFieldNumber = 2;
    private global::PKIo.LocalizedString localizedRedeemConfirmationDialogBoxText_;
    /// <summary>
    /// Localized redemption confirm dialog box text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedRedeemConfirmationDialogBoxText {
      get { return localizedRedeemConfirmationDialogBoxText_; }
      set {
        localizedRedeemConfirmationDialogBoxText_ = value;
      }
    }

    /// <summary>Field number for the "cancelRedeemText" field.</summary>
    public const int CancelRedeemTextFieldNumber = 3;
    private string cancelRedeemText_ = "";
    /// <summary>
    /// To be shown when visitor clicks "Cancel" and reject to redeem now.
    /// This only applies to the redemption type REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_FIXED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CancelRedeemText {
      get { return cancelRedeemText_; }
      set {
        cancelRedeemText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedCancelRedeemText" field.</summary>
    public const int LocalizedCancelRedeemTextFieldNumber = 4;
    private global::PKIo.LocalizedString localizedCancelRedeemText_;
    /// <summary>
    /// Localized cancel redemption text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedCancelRedeemText {
      get { return localizedCancelRedeemText_; }
      set {
        localizedCancelRedeemText_ = value;
      }
    }

    /// <summary>Field number for the "afterRedeemText" field.</summary>
    public const int AfterRedeemTextFieldNumber = 5;
    private string afterRedeemText_ = "";
    /// <summary>
    /// To be shown when coupon has been redeemed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AfterRedeemText {
      get { return afterRedeemText_; }
      set {
        afterRedeemText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedAfterRedeemText" field.</summary>
    public const int LocalizedAfterRedeemTextFieldNumber = 6;
    private global::PKIo.LocalizedString localizedAfterRedeemText_;
    /// <summary>
    /// Localized after redemption text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedAfterRedeemText {
      get { return localizedAfterRedeemText_; }
      set {
        localizedAfterRedeemText_ = value;
      }
    }

    /// <summary>Field number for the "couponAlreadyRedeemedText" field.</summary>
    public const int CouponAlreadyRedeemedTextFieldNumber = 7;
    private string couponAlreadyRedeemedText_ = "";
    /// <summary>
    /// To be shown when the coupon was already redeemed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CouponAlreadyRedeemedText {
      get { return couponAlreadyRedeemedText_; }
      set {
        couponAlreadyRedeemedText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedCouponAlreadyRedeemedText" field.</summary>
    public const int LocalizedCouponAlreadyRedeemedTextFieldNumber = 8;
    private global::PKIo.LocalizedString localizedCouponAlreadyRedeemedText_;
    /// <summary>
    /// Localized text shown when the coupon was already redeemed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedCouponAlreadyRedeemedText {
      get { return localizedCouponAlreadyRedeemedText_; }
      set {
        localizedCouponAlreadyRedeemedText_ = value;
      }
    }

    /// <summary>Field number for the "offerExpiredText" field.</summary>
    public const int OfferExpiredTextFieldNumber = 9;
    private string offerExpiredText_ = "";
    /// <summary>
    /// To be shown when the offer period has ended.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfferExpiredText {
      get { return offerExpiredText_; }
      set {
        offerExpiredText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedOfferExpiredText" field.</summary>
    public const int LocalizedOfferExpiredTextFieldNumber = 10;
    private global::PKIo.LocalizedString localizedOfferExpiredText_;
    /// <summary>
    /// Localized text shown when offer has ended.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedOfferExpiredText {
      get { return localizedOfferExpiredText_; }
      set {
        localizedOfferExpiredText_ = value;
      }
    }

    /// <summary>Field number for the "couponExpiredText" field.</summary>
    public const int CouponExpiredTextFieldNumber = 11;
    private string couponExpiredText_ = "";
    /// <summary>
    /// To be shown when the coupon expiry date / redemption end date has passed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CouponExpiredText {
      get { return couponExpiredText_; }
      set {
        couponExpiredText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedCouponExpiredText" field.</summary>
    public const int LocalizedCouponExpiredTextFieldNumber = 12;
    private global::PKIo.LocalizedString localizedCouponExpiredText_;
    /// <summary>
    /// Localized text shown when the coupon expiry date / redemption end date has passed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedCouponExpiredText {
      get { return localizedCouponExpiredText_; }
      set {
        localizedCouponExpiredText_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseTexts);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseTexts other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RedeemConfirmationDialogBoxText != other.RedeemConfirmationDialogBoxText) return false;
      if (!object.Equals(LocalizedRedeemConfirmationDialogBoxText, other.LocalizedRedeemConfirmationDialogBoxText)) return false;
      if (CancelRedeemText != other.CancelRedeemText) return false;
      if (!object.Equals(LocalizedCancelRedeemText, other.LocalizedCancelRedeemText)) return false;
      if (AfterRedeemText != other.AfterRedeemText) return false;
      if (!object.Equals(LocalizedAfterRedeemText, other.LocalizedAfterRedeemText)) return false;
      if (CouponAlreadyRedeemedText != other.CouponAlreadyRedeemedText) return false;
      if (!object.Equals(LocalizedCouponAlreadyRedeemedText, other.LocalizedCouponAlreadyRedeemedText)) return false;
      if (OfferExpiredText != other.OfferExpiredText) return false;
      if (!object.Equals(LocalizedOfferExpiredText, other.LocalizedOfferExpiredText)) return false;
      if (CouponExpiredText != other.CouponExpiredText) return false;
      if (!object.Equals(LocalizedCouponExpiredText, other.LocalizedCouponExpiredText)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RedeemConfirmationDialogBoxText.Length != 0) hash ^= RedeemConfirmationDialogBoxText.GetHashCode();
      if (localizedRedeemConfirmationDialogBoxText_ != null) hash ^= LocalizedRedeemConfirmationDialogBoxText.GetHashCode();
      if (CancelRedeemText.Length != 0) hash ^= CancelRedeemText.GetHashCode();
      if (localizedCancelRedeemText_ != null) hash ^= LocalizedCancelRedeemText.GetHashCode();
      if (AfterRedeemText.Length != 0) hash ^= AfterRedeemText.GetHashCode();
      if (localizedAfterRedeemText_ != null) hash ^= LocalizedAfterRedeemText.GetHashCode();
      if (CouponAlreadyRedeemedText.Length != 0) hash ^= CouponAlreadyRedeemedText.GetHashCode();
      if (localizedCouponAlreadyRedeemedText_ != null) hash ^= LocalizedCouponAlreadyRedeemedText.GetHashCode();
      if (OfferExpiredText.Length != 0) hash ^= OfferExpiredText.GetHashCode();
      if (localizedOfferExpiredText_ != null) hash ^= LocalizedOfferExpiredText.GetHashCode();
      if (CouponExpiredText.Length != 0) hash ^= CouponExpiredText.GetHashCode();
      if (localizedCouponExpiredText_ != null) hash ^= LocalizedCouponExpiredText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RedeemConfirmationDialogBoxText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RedeemConfirmationDialogBoxText);
      }
      if (localizedRedeemConfirmationDialogBoxText_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LocalizedRedeemConfirmationDialogBoxText);
      }
      if (CancelRedeemText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CancelRedeemText);
      }
      if (localizedCancelRedeemText_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocalizedCancelRedeemText);
      }
      if (AfterRedeemText.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AfterRedeemText);
      }
      if (localizedAfterRedeemText_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LocalizedAfterRedeemText);
      }
      if (CouponAlreadyRedeemedText.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CouponAlreadyRedeemedText);
      }
      if (localizedCouponAlreadyRedeemedText_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LocalizedCouponAlreadyRedeemedText);
      }
      if (OfferExpiredText.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(OfferExpiredText);
      }
      if (localizedOfferExpiredText_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LocalizedOfferExpiredText);
      }
      if (CouponExpiredText.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CouponExpiredText);
      }
      if (localizedCouponExpiredText_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(LocalizedCouponExpiredText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RedeemConfirmationDialogBoxText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedeemConfirmationDialogBoxText);
      }
      if (localizedRedeemConfirmationDialogBoxText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedRedeemConfirmationDialogBoxText);
      }
      if (CancelRedeemText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CancelRedeemText);
      }
      if (localizedCancelRedeemText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedCancelRedeemText);
      }
      if (AfterRedeemText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AfterRedeemText);
      }
      if (localizedAfterRedeemText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedAfterRedeemText);
      }
      if (CouponAlreadyRedeemedText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponAlreadyRedeemedText);
      }
      if (localizedCouponAlreadyRedeemedText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedCouponAlreadyRedeemedText);
      }
      if (OfferExpiredText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferExpiredText);
      }
      if (localizedOfferExpiredText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedOfferExpiredText);
      }
      if (CouponExpiredText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponExpiredText);
      }
      if (localizedCouponExpiredText_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedCouponExpiredText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseTexts other) {
      if (other == null) {
        return;
      }
      if (other.RedeemConfirmationDialogBoxText.Length != 0) {
        RedeemConfirmationDialogBoxText = other.RedeemConfirmationDialogBoxText;
      }
      if (other.localizedRedeemConfirmationDialogBoxText_ != null) {
        if (localizedRedeemConfirmationDialogBoxText_ == null) {
          LocalizedRedeemConfirmationDialogBoxText = new global::PKIo.LocalizedString();
        }
        LocalizedRedeemConfirmationDialogBoxText.MergeFrom(other.LocalizedRedeemConfirmationDialogBoxText);
      }
      if (other.CancelRedeemText.Length != 0) {
        CancelRedeemText = other.CancelRedeemText;
      }
      if (other.localizedCancelRedeemText_ != null) {
        if (localizedCancelRedeemText_ == null) {
          LocalizedCancelRedeemText = new global::PKIo.LocalizedString();
        }
        LocalizedCancelRedeemText.MergeFrom(other.LocalizedCancelRedeemText);
      }
      if (other.AfterRedeemText.Length != 0) {
        AfterRedeemText = other.AfterRedeemText;
      }
      if (other.localizedAfterRedeemText_ != null) {
        if (localizedAfterRedeemText_ == null) {
          LocalizedAfterRedeemText = new global::PKIo.LocalizedString();
        }
        LocalizedAfterRedeemText.MergeFrom(other.LocalizedAfterRedeemText);
      }
      if (other.CouponAlreadyRedeemedText.Length != 0) {
        CouponAlreadyRedeemedText = other.CouponAlreadyRedeemedText;
      }
      if (other.localizedCouponAlreadyRedeemedText_ != null) {
        if (localizedCouponAlreadyRedeemedText_ == null) {
          LocalizedCouponAlreadyRedeemedText = new global::PKIo.LocalizedString();
        }
        LocalizedCouponAlreadyRedeemedText.MergeFrom(other.LocalizedCouponAlreadyRedeemedText);
      }
      if (other.OfferExpiredText.Length != 0) {
        OfferExpiredText = other.OfferExpiredText;
      }
      if (other.localizedOfferExpiredText_ != null) {
        if (localizedOfferExpiredText_ == null) {
          LocalizedOfferExpiredText = new global::PKIo.LocalizedString();
        }
        LocalizedOfferExpiredText.MergeFrom(other.LocalizedOfferExpiredText);
      }
      if (other.CouponExpiredText.Length != 0) {
        CouponExpiredText = other.CouponExpiredText;
      }
      if (other.localizedCouponExpiredText_ != null) {
        if (localizedCouponExpiredText_ == null) {
          LocalizedCouponExpiredText = new global::PKIo.LocalizedString();
        }
        LocalizedCouponExpiredText.MergeFrom(other.LocalizedCouponExpiredText);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RedeemConfirmationDialogBoxText = input.ReadString();
            break;
          }
          case 18: {
            if (localizedRedeemConfirmationDialogBoxText_ == null) {
              LocalizedRedeemConfirmationDialogBoxText = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedRedeemConfirmationDialogBoxText);
            break;
          }
          case 26: {
            CancelRedeemText = input.ReadString();
            break;
          }
          case 34: {
            if (localizedCancelRedeemText_ == null) {
              LocalizedCancelRedeemText = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedCancelRedeemText);
            break;
          }
          case 42: {
            AfterRedeemText = input.ReadString();
            break;
          }
          case 50: {
            if (localizedAfterRedeemText_ == null) {
              LocalizedAfterRedeemText = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedAfterRedeemText);
            break;
          }
          case 58: {
            CouponAlreadyRedeemedText = input.ReadString();
            break;
          }
          case 66: {
            if (localizedCouponAlreadyRedeemedText_ == null) {
              LocalizedCouponAlreadyRedeemedText = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedCouponAlreadyRedeemedText);
            break;
          }
          case 74: {
            OfferExpiredText = input.ReadString();
            break;
          }
          case 82: {
            if (localizedOfferExpiredText_ == null) {
              LocalizedOfferExpiredText = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedOfferExpiredText);
            break;
          }
          case 90: {
            CouponExpiredText = input.ReadString();
            break;
          }
          case 98: {
            if (localizedCouponExpiredText_ == null) {
              LocalizedCouponExpiredText = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedCouponExpiredText);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CouponOffersListRequest : pb::IMessage<CouponOffersListRequest> {
    private static readonly pb::MessageParser<CouponOffersListRequest> _parser = new pb::MessageParser<CouponOffersListRequest>(() => new CouponOffersListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CouponOffersListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.OfferReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CouponOffersListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CouponOffersListRequest(CouponOffersListRequest other) : this() {
      campaignId_ = other.campaignId_;
      pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CouponOffersListRequest Clone() {
      return new CouponOffersListRequest(this);
    }

    /// <summary>Field number for the "campaignId" field.</summary>
    public const int CampaignIdFieldNumber = 1;
    private string campaignId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 2;
    private global::PKIo.Pagination pagination_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.Pagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CouponOffersListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CouponOffersListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CampaignId != other.CampaignId) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CampaignId.Length != 0) hash ^= CampaignId.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CampaignId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CampaignId);
      }
      if (pagination_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CampaignId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CampaignId);
      }
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CouponOffersListRequest other) {
      if (other == null) {
        return;
      }
      if (other.CampaignId.Length != 0) {
        CampaignId = other.CampaignId;
      }
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          Pagination = new global::PKIo.Pagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CampaignId = input.ReadString();
            break;
          }
          case 18: {
            if (pagination_ == null) {
              Pagination = new global::PKIo.Pagination();
            }
            input.ReadMessage(Pagination);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
