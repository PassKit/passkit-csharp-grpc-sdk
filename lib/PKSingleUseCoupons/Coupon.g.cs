// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/single_use_coupons/coupon.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PKSingleUseCoupons {

  /// <summary>Holder for reflection information generated from io/single_use_coupons/coupon.proto</summary>
  public static partial class CouponReflection {

    #region Descriptor
    /// <summary>File descriptor for io/single_use_coupons/coupon.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CouponReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJpby9zaW5nbGVfdXNlX2NvdXBvbnMvY291cG9uLnByb3RvEhJzaW5nbGVf",
            "dXNlX2NvdXBvbnMaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8a",
            "GmlvL2NvbW1vbi9wYWdpbmF0aW9uLnByb3RvGhZpby9jb21tb24vZmlsdGVy",
            "LnByb3RvGhRpby9jb21tb24vcGFzcy5wcm90bxoYaW8vY29tbW9uL3BlcnNv",
            "bmFsLnByb3RvGhdpby9jb21tb24vbWV0cmljcy5wcm90bxoscHJvdG9jLWdl",
            "bi1zd2FnZ2VyL29wdGlvbnMvYW5ub3RhdGlvbnMucHJvdG8ivAUKBkNvdXBv",
            "bhIKCgJpZBgBIAEoCRISCgpleHRlcm5hbElkGAIgASgJEg8KB29mZmVySWQY",
            "AyABKAkSEgoKY2FtcGFpZ25JZBgEIAEoCRIaCgZwZXJzb24YBSABKAsyCi5p",
            "by5QZXJzb24SOgoIbWV0YURhdGEYBiADKAsyKC5zaW5nbGVfdXNlX2NvdXBv",
            "bnMuQ291cG9uLk1ldGFEYXRhRW50cnkSCwoDc2t1GAcgASgJEg4KBm9wdE91",
            "dBgIIAEoCBIwCgZzdGF0dXMYCiABKA4yIC5zaW5nbGVfdXNlX2NvdXBvbnMu",
            "Q291cG9uU3RhdHVzEi4KCmV4cGlyeURhdGUYCyABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEkAKEXJlZGVtcHRpb25EZXRhaWxzGAwgASgLMiUu",
            "c2luZ2xlX3VzZV9jb3Vwb25zLlJlZGVtcHRpb25EZXRhaWxzEigKDXBhc3NP",
            "dmVycmlkZXMYDSABKAsyES5pby5QYXNzT3ZlcnJpZGVzEiIKDHBhc3NNZXRh",
            "RGF0YRgOIAEoCzIMLmlvLk1ldGFkYXRhEisKB2NyZWF0ZWQYDyABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEisKB3VwZGF0ZWQYECABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wGi8KDU1ldGFEYXRhRW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ATp1kkFyCnAqBkNvdXBvbjJP",
            "SG9sZHMgdGhlIGRldGFpbHMgJiBzdGF0ZSBvZiBhIHVuaXF1ZSBpbmRpdmlk",
            "dWFsIGNvdXBvbiBpbnN0YW5jZSAoaS5lLiBhIHBhc3MpLtIBB29mZmVySWTS",
            "AQpjYW1wYWlnbklkSgQICRAKIvYBChFSZWRlbXB0aW9uRGV0YWlscxIyCg5y",
            "ZWRlbXB0aW9uRGF0ZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXASFgoOcmVkZW1wdGlvbkNvZGUYAiABKAkSCwoDbGF0GAMgASgBEgsKA2xv",
            "bhgEIAEoARILCgNhbHQYBSABKAUSGAoQcmVkZW1wdGlvblNvdXJjZRgGIAEo",
            "CRIbChNyZWRlbXB0aW9uUmVmZXJlbmNlGAcgASgJEhwKFHRyYW5zYWN0aW9u",
            "UmVmZXJlbmNlGAggASgJEhkKEXRyYW5zYWN0aW9uQW1vdW50GAkgASgBIkEK",
            "EUV4dGVybmFsSWRSZXF1ZXN0EhgKEGNvdXBvbkNhbXBhaWduSWQYASABKAkS",
            "EgoKZXh0ZXJuYWxJZBgCIAEoCSJVChVMaXN0UmVxdWVzdERlcHJlY2F0ZWQS",
            "GAoQY291cG9uQ2FtcGFpZ25JZBgBIAEoCRIiCgpwYWdpbmF0aW9uGAIgASgL",
            "Mg4uaW8uUGFnaW5hdGlvbiJFCgtMaXN0UmVxdWVzdBIYChBjb3Vwb25DYW1w",
            "YWlnbklkGAEgASgJEhwKB2ZpbHRlcnMYAiABKAsyCy5pby5GaWx0ZXJzKiwK",
            "DENvdXBvblN0YXR1cxIOCgpVTlJFREVFTUVEEAASDAoIUkVERUVNRUQQAUJw",
            "CiBpby5wYXNza2l0LlBLaW8uU2luZ2xlVXNlQ291cG9uc1o3c3Rhc2gucGFz",
            "c2tpdC5jb20vaW8vbW9kZWwvc2RrL2dvL2lvL3NpbmdsZV91c2VfY291cG9u",
            "c6oCElBLU2luZ2xlVXNlQ291cG9uc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::PKIo.PaginationReflection.Descriptor, global::PKIo.FilterReflection.Descriptor, global::PKIo.PassReflection.Descriptor, global::PKIo.PersonalReflection.Descriptor, global::PKIo.MetricsReflection.Descriptor, global::Grpc.Gateway.ProtocGenSwagger.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PKSingleUseCoupons.CouponStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.Coupon), global::PKSingleUseCoupons.Coupon.Parser, new[]{ "Id", "ExternalId", "OfferId", "CampaignId", "Person", "MetaData", "Sku", "OptOut", "Status", "ExpiryDate", "RedemptionDetails", "PassOverrides", "PassMetaData", "Created", "Updated" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.RedemptionDetails), global::PKSingleUseCoupons.RedemptionDetails.Parser, new[]{ "RedemptionDate", "RedemptionCode", "Lat", "Lon", "Alt", "RedemptionSource", "RedemptionReference", "TransactionReference", "TransactionAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.ExternalIdRequest), global::PKSingleUseCoupons.ExternalIdRequest.Parser, new[]{ "CouponCampaignId", "ExternalId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.ListRequestDeprecated), global::PKSingleUseCoupons.ListRequestDeprecated.Parser, new[]{ "CouponCampaignId", "Pagination" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKSingleUseCoupons.ListRequest), global::PKSingleUseCoupons.ListRequest.Parser, new[]{ "CouponCampaignId", "Filters" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CouponStatus {
    /// <summary>
    /// Default status when a coupon is issued.
    /// </summary>
    [pbr::OriginalName("UNREDEEMED")] Unredeemed = 0,
    /// <summary>
    /// Set after a coupon is redeemed (the redeem endpoint is called).
    /// </summary>
    [pbr::OriginalName("REDEEMED")] Redeemed = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The Coupon Details
  /// </summary>
  public sealed partial class Coupon : pb::IMessage<Coupon> {
    private static readonly pb::MessageParser<Coupon> _parser = new pb::MessageParser<Coupon>(() => new Coupon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Coupon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.CouponReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coupon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coupon(Coupon other) : this() {
      id_ = other.id_;
      externalId_ = other.externalId_;
      offerId_ = other.offerId_;
      campaignId_ = other.campaignId_;
      person_ = other.person_ != null ? other.person_.Clone() : null;
      metaData_ = other.metaData_.Clone();
      sku_ = other.sku_;
      optOut_ = other.optOut_;
      status_ = other.status_;
      expiryDate_ = other.expiryDate_ != null ? other.expiryDate_.Clone() : null;
      redemptionDetails_ = other.redemptionDetails_ != null ? other.redemptionDetails_.Clone() : null;
      passOverrides_ = other.passOverrides_ != null ? other.passOverrides_.Clone() : null;
      passMetaData_ = other.passMetaData_ != null ? other.passMetaData_.Clone() : null;
      created_ = other.created_ != null ? other.created_.Clone() : null;
      updated_ = other.updated_ != null ? other.updated_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coupon Clone() {
      return new Coupon(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// PassKit generated coupon id (22 characters).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalId" field.</summary>
    public const int ExternalIdFieldNumber = 2;
    private string externalId_ = "";
    /// <summary>
    /// This can be used to set the 'external' ID of the coupon (i.e. the unique coupon code as it's being used in your system). If provided then this can be used to query &amp; update coupon. This field will be treated as unique within the campaign, and cannot be updated at a later stage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offerId" field.</summary>
    public const int OfferIdFieldNumber = 3;
    private string offerId_ = "";
    /// <summary>
    /// The coupon offer id that the coupon belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfferId {
      get { return offerId_; }
      set {
        offerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "campaignId" field.</summary>
    public const int CampaignIdFieldNumber = 4;
    private string campaignId_ = "";
    /// <summary>
    /// The coupon campaign id the the coupon belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CampaignId {
      get { return campaignId_; }
      set {
        campaignId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "person" field.</summary>
    public const int PersonFieldNumber = 5;
    private global::PKIo.Person person_;
    /// <summary>
    /// Optional field if you would like to add PII to the individual coupon. Person is stored encrypted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.Person Person {
      get { return person_; }
      set {
        person_ = value;
      }
    }

    /// <summary>Field number for the "metaData" field.</summary>
    public const int MetaDataFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_metaData_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
    private readonly pbc::MapField<string, string> metaData_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Any other meta fields for the coupon that are not covered in the protocol (i.e. you might want to captures sign-up location, or favourite perfume, for segmenting later on).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> MetaData {
      get { return metaData_; }
    }

    /// <summary>Field number for the "sku" field.</summary>
    public const int SkuFieldNumber = 7;
    private string sku_ = "";
    /// <summary>
    /// Optional SKU. Can be used in the barcode by setting ${coupon.sku} in the template barcode settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sku {
      get { return sku_; }
      set {
        sku_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "optOut" field.</summary>
    public const int OptOutFieldNumber = 8;
    private bool optOut_;
    /// <summary>
    /// Indicates if the user of the coupon opted out to receive marketing promotions (defaults to false).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OptOut {
      get { return optOut_; }
      set {
        optOut_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 10;
    private global::PKSingleUseCoupons.CouponStatus status_ = global::PKSingleUseCoupons.CouponStatus.Unredeemed;
    /// <summary>
    /// Holds the coupon status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKSingleUseCoupons.CouponStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "expiryDate" field.</summary>
    public const int ExpiryDateFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiryDate_;
    /// <summary>
    /// Optional field to set when the coupon expires. When the expiry date hits, it will automatically gray out the barcode. Only applicable if the template for the offer is set to EXPIRE_ON_VARIABLE_DATE_TIME.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpiryDate {
      get { return expiryDate_; }
      set {
        expiryDate_ = value;
      }
    }

    /// <summary>Field number for the "redemptionDetails" field.</summary>
    public const int RedemptionDetailsFieldNumber = 12;
    private global::PKSingleUseCoupons.RedemptionDetails redemptionDetails_;
    /// <summary>
    /// Contains details about the redemption (if the coupon is in a redeemed state).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKSingleUseCoupons.RedemptionDetails RedemptionDetails {
      get { return redemptionDetails_; }
      set {
        redemptionDetails_ = value;
      }
    }

    /// <summary>Field number for the "passOverrides" field.</summary>
    public const int PassOverridesFieldNumber = 13;
    private global::PKIo.PassOverrides passOverrides_;
    /// <summary>
    /// Optional Pass level overrides for proximity &amp; images.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.PassOverrides PassOverrides {
      get { return passOverrides_; }
      set {
        passOverrides_ = value;
      }
    }

    /// <summary>Field number for the "passMetaData" field.</summary>
    public const int PassMetaDataFieldNumber = 14;
    private global::PKIo.Metadata passMetaData_;
    /// <summary>
    /// Pass Metadata hold meta data about the pass like status, lifecycle, utm details and installation data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.Metadata PassMetaData {
      get { return passMetaData_; }
      set {
        passMetaData_ = value;
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 15;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// The date the coupon was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 16;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updated_;
    /// <summary>
    /// The date the coupon was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Coupon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Coupon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ExternalId != other.ExternalId) return false;
      if (OfferId != other.OfferId) return false;
      if (CampaignId != other.CampaignId) return false;
      if (!object.Equals(Person, other.Person)) return false;
      if (!MetaData.Equals(other.MetaData)) return false;
      if (Sku != other.Sku) return false;
      if (OptOut != other.OptOut) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(ExpiryDate, other.ExpiryDate)) return false;
      if (!object.Equals(RedemptionDetails, other.RedemptionDetails)) return false;
      if (!object.Equals(PassOverrides, other.PassOverrides)) return false;
      if (!object.Equals(PassMetaData, other.PassMetaData)) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (!object.Equals(Updated, other.Updated)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (OfferId.Length != 0) hash ^= OfferId.GetHashCode();
      if (CampaignId.Length != 0) hash ^= CampaignId.GetHashCode();
      if (person_ != null) hash ^= Person.GetHashCode();
      hash ^= MetaData.GetHashCode();
      if (Sku.Length != 0) hash ^= Sku.GetHashCode();
      if (OptOut != false) hash ^= OptOut.GetHashCode();
      if (Status != global::PKSingleUseCoupons.CouponStatus.Unredeemed) hash ^= Status.GetHashCode();
      if (expiryDate_ != null) hash ^= ExpiryDate.GetHashCode();
      if (redemptionDetails_ != null) hash ^= RedemptionDetails.GetHashCode();
      if (passOverrides_ != null) hash ^= PassOverrides.GetHashCode();
      if (passMetaData_ != null) hash ^= PassMetaData.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (updated_ != null) hash ^= Updated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (OfferId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OfferId);
      }
      if (CampaignId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CampaignId);
      }
      if (person_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Person);
      }
      metaData_.WriteTo(output, _map_metaData_codec);
      if (Sku.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Sku);
      }
      if (OptOut != false) {
        output.WriteRawTag(64);
        output.WriteBool(OptOut);
      }
      if (Status != global::PKSingleUseCoupons.CouponStatus.Unredeemed) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Status);
      }
      if (expiryDate_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ExpiryDate);
      }
      if (redemptionDetails_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RedemptionDetails);
      }
      if (passOverrides_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PassOverrides);
      }
      if (passMetaData_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(PassMetaData);
      }
      if (created_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Updated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (OfferId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferId);
      }
      if (CampaignId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CampaignId);
      }
      if (person_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Person);
      }
      size += metaData_.CalculateSize(_map_metaData_codec);
      if (Sku.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sku);
      }
      if (OptOut != false) {
        size += 1 + 1;
      }
      if (Status != global::PKSingleUseCoupons.CouponStatus.Unredeemed) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (expiryDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpiryDate);
      }
      if (redemptionDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedemptionDetails);
      }
      if (passOverrides_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PassOverrides);
      }
      if (passMetaData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PassMetaData);
      }
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (updated_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Updated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Coupon other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      if (other.OfferId.Length != 0) {
        OfferId = other.OfferId;
      }
      if (other.CampaignId.Length != 0) {
        CampaignId = other.CampaignId;
      }
      if (other.person_ != null) {
        if (person_ == null) {
          Person = new global::PKIo.Person();
        }
        Person.MergeFrom(other.Person);
      }
      metaData_.Add(other.metaData_);
      if (other.Sku.Length != 0) {
        Sku = other.Sku;
      }
      if (other.OptOut != false) {
        OptOut = other.OptOut;
      }
      if (other.Status != global::PKSingleUseCoupons.CouponStatus.Unredeemed) {
        Status = other.Status;
      }
      if (other.expiryDate_ != null) {
        if (expiryDate_ == null) {
          ExpiryDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpiryDate.MergeFrom(other.ExpiryDate);
      }
      if (other.redemptionDetails_ != null) {
        if (redemptionDetails_ == null) {
          RedemptionDetails = new global::PKSingleUseCoupons.RedemptionDetails();
        }
        RedemptionDetails.MergeFrom(other.RedemptionDetails);
      }
      if (other.passOverrides_ != null) {
        if (passOverrides_ == null) {
          PassOverrides = new global::PKIo.PassOverrides();
        }
        PassOverrides.MergeFrom(other.PassOverrides);
      }
      if (other.passMetaData_ != null) {
        if (passMetaData_ == null) {
          PassMetaData = new global::PKIo.Metadata();
        }
        PassMetaData.MergeFrom(other.PassMetaData);
      }
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      if (other.updated_ != null) {
        if (updated_ == null) {
          Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Updated.MergeFrom(other.Updated);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
          case 26: {
            OfferId = input.ReadString();
            break;
          }
          case 34: {
            CampaignId = input.ReadString();
            break;
          }
          case 42: {
            if (person_ == null) {
              Person = new global::PKIo.Person();
            }
            input.ReadMessage(Person);
            break;
          }
          case 50: {
            metaData_.AddEntriesFrom(input, _map_metaData_codec);
            break;
          }
          case 58: {
            Sku = input.ReadString();
            break;
          }
          case 64: {
            OptOut = input.ReadBool();
            break;
          }
          case 80: {
            Status = (global::PKSingleUseCoupons.CouponStatus) input.ReadEnum();
            break;
          }
          case 90: {
            if (expiryDate_ == null) {
              ExpiryDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiryDate);
            break;
          }
          case 98: {
            if (redemptionDetails_ == null) {
              RedemptionDetails = new global::PKSingleUseCoupons.RedemptionDetails();
            }
            input.ReadMessage(RedemptionDetails);
            break;
          }
          case 106: {
            if (passOverrides_ == null) {
              PassOverrides = new global::PKIo.PassOverrides();
            }
            input.ReadMessage(PassOverrides);
            break;
          }
          case 114: {
            if (passMetaData_ == null) {
              PassMetaData = new global::PKIo.Metadata();
            }
            input.ReadMessage(PassMetaData);
            break;
          }
          case 122: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 130: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RedemptionDetails : pb::IMessage<RedemptionDetails> {
    private static readonly pb::MessageParser<RedemptionDetails> _parser = new pb::MessageParser<RedemptionDetails>(() => new RedemptionDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedemptionDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.CouponReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedemptionDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedemptionDetails(RedemptionDetails other) : this() {
      redemptionDate_ = other.redemptionDate_ != null ? other.redemptionDate_.Clone() : null;
      redemptionCode_ = other.redemptionCode_;
      lat_ = other.lat_;
      lon_ = other.lon_;
      alt_ = other.alt_;
      redemptionSource_ = other.redemptionSource_;
      redemptionReference_ = other.redemptionReference_;
      transactionReference_ = other.transactionReference_;
      transactionAmount_ = other.transactionAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedemptionDetails Clone() {
      return new RedemptionDetails(this);
    }

    /// <summary>Field number for the "redemptionDate" field.</summary>
    public const int RedemptionDateFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp redemptionDate_;
    /// <summary>
    /// The date the coupon was redeemed (set by the system when the redeem endpoint is called).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RedemptionDate {
      get { return redemptionDate_; }
      set {
        redemptionDate_ = value;
      }
    }

    /// <summary>Field number for the "redemptionCode" field.</summary>
    public const int RedemptionCodeFieldNumber = 2;
    private string redemptionCode_ = "";
    /// <summary>
    /// Optional field that contains the redemption code provided on redeem (either the fixed one if set, or user provided).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RedemptionCode {
      get { return redemptionCode_; }
      set {
        redemptionCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lat" field.</summary>
    public const int LatFieldNumber = 3;
    private double lat_;
    /// <summary>
    /// Option redemption GPS lat, lon &amp;  alt.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Lat {
      get { return lat_; }
      set {
        lat_ = value;
      }
    }

    /// <summary>Field number for the "lon" field.</summary>
    public const int LonFieldNumber = 4;
    private double lon_;
    /// <summary>
    /// Longitude.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Lon {
      get { return lon_; }
      set {
        lon_ = value;
      }
    }

    /// <summary>Field number for the "alt" field.</summary>
    public const int AltFieldNumber = 5;
    private int alt_;
    /// <summary>
    /// Altitude in metres.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Alt {
      get { return alt_; }
      set {
        alt_ = value;
      }
    }

    /// <summary>Field number for the "redemptionSource" field.</summary>
    public const int RedemptionSourceFieldNumber = 6;
    private string redemptionSource_ = "";
    /// <summary>
    /// Optional redemption user agent, can be used in case where a Merchant uses the PassKit scanning solution combined with their own POS redemption and wants to differentiate the source of redemption.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RedemptionSource {
      get { return redemptionSource_; }
      set {
        redemptionSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "redemptionReference" field.</summary>
    public const int RedemptionReferenceFieldNumber = 7;
    private string redemptionReference_ = "";
    /// <summary>
    /// Optional redemption reference, can be used for staff name, username, POS ID, location ID, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RedemptionReference {
      get { return redemptionReference_; }
      set {
        redemptionReference_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transactionReference" field.</summary>
    public const int TransactionReferenceFieldNumber = 8;
    private string transactionReference_ = "";
    /// <summary>
    /// Optional transaction reference, can be used to consolidate baskets at a later stage via a manual process.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionReference {
      get { return transactionReference_; }
      set {
        transactionReference_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transactionAmount" field.</summary>
    public const int TransactionAmountFieldNumber = 9;
    private double transactionAmount_;
    /// <summary>
    /// Optional total transaction amount.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TransactionAmount {
      get { return transactionAmount_; }
      set {
        transactionAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedemptionDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedemptionDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RedemptionDate, other.RedemptionDate)) return false;
      if (RedemptionCode != other.RedemptionCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lat, other.Lat)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lon, other.Lon)) return false;
      if (Alt != other.Alt) return false;
      if (RedemptionSource != other.RedemptionSource) return false;
      if (RedemptionReference != other.RedemptionReference) return false;
      if (TransactionReference != other.TransactionReference) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TransactionAmount, other.TransactionAmount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (redemptionDate_ != null) hash ^= RedemptionDate.GetHashCode();
      if (RedemptionCode.Length != 0) hash ^= RedemptionCode.GetHashCode();
      if (Lat != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lat);
      if (Lon != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lon);
      if (Alt != 0) hash ^= Alt.GetHashCode();
      if (RedemptionSource.Length != 0) hash ^= RedemptionSource.GetHashCode();
      if (RedemptionReference.Length != 0) hash ^= RedemptionReference.GetHashCode();
      if (TransactionReference.Length != 0) hash ^= TransactionReference.GetHashCode();
      if (TransactionAmount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TransactionAmount);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (redemptionDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RedemptionDate);
      }
      if (RedemptionCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RedemptionCode);
      }
      if (Lat != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Lat);
      }
      if (Lon != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Lon);
      }
      if (Alt != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Alt);
      }
      if (RedemptionSource.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RedemptionSource);
      }
      if (RedemptionReference.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RedemptionReference);
      }
      if (TransactionReference.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TransactionReference);
      }
      if (TransactionAmount != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(TransactionAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (redemptionDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedemptionDate);
      }
      if (RedemptionCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedemptionCode);
      }
      if (Lat != 0D) {
        size += 1 + 8;
      }
      if (Lon != 0D) {
        size += 1 + 8;
      }
      if (Alt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Alt);
      }
      if (RedemptionSource.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedemptionSource);
      }
      if (RedemptionReference.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedemptionReference);
      }
      if (TransactionReference.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionReference);
      }
      if (TransactionAmount != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedemptionDetails other) {
      if (other == null) {
        return;
      }
      if (other.redemptionDate_ != null) {
        if (redemptionDate_ == null) {
          RedemptionDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RedemptionDate.MergeFrom(other.RedemptionDate);
      }
      if (other.RedemptionCode.Length != 0) {
        RedemptionCode = other.RedemptionCode;
      }
      if (other.Lat != 0D) {
        Lat = other.Lat;
      }
      if (other.Lon != 0D) {
        Lon = other.Lon;
      }
      if (other.Alt != 0) {
        Alt = other.Alt;
      }
      if (other.RedemptionSource.Length != 0) {
        RedemptionSource = other.RedemptionSource;
      }
      if (other.RedemptionReference.Length != 0) {
        RedemptionReference = other.RedemptionReference;
      }
      if (other.TransactionReference.Length != 0) {
        TransactionReference = other.TransactionReference;
      }
      if (other.TransactionAmount != 0D) {
        TransactionAmount = other.TransactionAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (redemptionDate_ == null) {
              RedemptionDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RedemptionDate);
            break;
          }
          case 18: {
            RedemptionCode = input.ReadString();
            break;
          }
          case 25: {
            Lat = input.ReadDouble();
            break;
          }
          case 33: {
            Lon = input.ReadDouble();
            break;
          }
          case 40: {
            Alt = input.ReadInt32();
            break;
          }
          case 50: {
            RedemptionSource = input.ReadString();
            break;
          }
          case 58: {
            RedemptionReference = input.ReadString();
            break;
          }
          case 66: {
            TransactionReference = input.ReadString();
            break;
          }
          case 73: {
            TransactionAmount = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExternalIdRequest : pb::IMessage<ExternalIdRequest> {
    private static readonly pb::MessageParser<ExternalIdRequest> _parser = new pb::MessageParser<ExternalIdRequest>(() => new ExternalIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExternalIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.CouponReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalIdRequest(ExternalIdRequest other) : this() {
      couponCampaignId_ = other.couponCampaignId_;
      externalId_ = other.externalId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalIdRequest Clone() {
      return new ExternalIdRequest(this);
    }

    /// <summary>Field number for the "couponCampaignId" field.</summary>
    public const int CouponCampaignIdFieldNumber = 1;
    private string couponCampaignId_ = "";
    /// <summary>
    /// Coupon Campaign ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CouponCampaignId {
      get { return couponCampaignId_; }
      set {
        couponCampaignId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalId" field.</summary>
    public const int ExternalIdFieldNumber = 2;
    private string externalId_ = "";
    /// <summary>
    /// External ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExternalIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExternalIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CouponCampaignId != other.CouponCampaignId) return false;
      if (ExternalId != other.ExternalId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CouponCampaignId.Length != 0) hash ^= CouponCampaignId.GetHashCode();
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CouponCampaignId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CouponCampaignId);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CouponCampaignId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponCampaignId);
      }
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExternalIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.CouponCampaignId.Length != 0) {
        CouponCampaignId = other.CouponCampaignId;
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CouponCampaignId = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListRequestDeprecated : pb::IMessage<ListRequestDeprecated> {
    private static readonly pb::MessageParser<ListRequestDeprecated> _parser = new pb::MessageParser<ListRequestDeprecated>(() => new ListRequestDeprecated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRequestDeprecated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.CouponReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequestDeprecated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequestDeprecated(ListRequestDeprecated other) : this() {
      couponCampaignId_ = other.couponCampaignId_;
      pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequestDeprecated Clone() {
      return new ListRequestDeprecated(this);
    }

    /// <summary>Field number for the "couponCampaignId" field.</summary>
    public const int CouponCampaignIdFieldNumber = 1;
    private string couponCampaignId_ = "";
    /// <summary>
    /// Coupon Campaign ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CouponCampaignId {
      get { return couponCampaignId_; }
      set {
        couponCampaignId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 2;
    private global::PKIo.Pagination pagination_;
    /// <summary>
    /// External ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.Pagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRequestDeprecated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRequestDeprecated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CouponCampaignId != other.CouponCampaignId) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CouponCampaignId.Length != 0) hash ^= CouponCampaignId.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CouponCampaignId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CouponCampaignId);
      }
      if (pagination_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CouponCampaignId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponCampaignId);
      }
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRequestDeprecated other) {
      if (other == null) {
        return;
      }
      if (other.CouponCampaignId.Length != 0) {
        CouponCampaignId = other.CouponCampaignId;
      }
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          Pagination = new global::PKIo.Pagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CouponCampaignId = input.ReadString();
            break;
          }
          case 18: {
            if (pagination_ == null) {
              Pagination = new global::PKIo.Pagination();
            }
            input.ReadMessage(Pagination);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListRequest : pb::IMessage<ListRequest> {
    private static readonly pb::MessageParser<ListRequest> _parser = new pb::MessageParser<ListRequest>(() => new ListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKSingleUseCoupons.CouponReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequest(ListRequest other) : this() {
      couponCampaignId_ = other.couponCampaignId_;
      filters_ = other.filters_ != null ? other.filters_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequest Clone() {
      return new ListRequest(this);
    }

    /// <summary>Field number for the "couponCampaignId" field.</summary>
    public const int CouponCampaignIdFieldNumber = 1;
    private string couponCampaignId_ = "";
    /// <summary>
    /// Coupon Campaign ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CouponCampaignId {
      get { return couponCampaignId_; }
      set {
        couponCampaignId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 2;
    private global::PKIo.Filters filters_;
    /// <summary>
    /// External ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.Filters Filters {
      get { return filters_; }
      set {
        filters_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CouponCampaignId != other.CouponCampaignId) return false;
      if (!object.Equals(Filters, other.Filters)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CouponCampaignId.Length != 0) hash ^= CouponCampaignId.GetHashCode();
      if (filters_ != null) hash ^= Filters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CouponCampaignId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CouponCampaignId);
      }
      if (filters_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Filters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CouponCampaignId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CouponCampaignId);
      }
      if (filters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filters);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRequest other) {
      if (other == null) {
        return;
      }
      if (other.CouponCampaignId.Length != 0) {
        CouponCampaignId = other.CouponCampaignId;
      }
      if (other.filters_ != null) {
        if (filters_ == null) {
          Filters = new global::PKIo.Filters();
        }
        Filters.MergeFrom(other.Filters);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CouponCampaignId = input.ReadString();
            break;
          }
          case 18: {
            if (filters_ == null) {
              Filters = new global::PKIo.Filters();
            }
            input.ReadMessage(Filters);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
