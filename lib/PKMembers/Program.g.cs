// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/member/program.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PKMembers {

  /// <summary>Holder for reflection information generated from io/member/program.proto</summary>
  public static partial class ProgramReflection {

    #region Descriptor
    /// <summary>File descriptor for io/member/program.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProgramReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdpby9tZW1iZXIvcHJvZ3JhbS5wcm90bxIHbWVtYmVycxofZ29vZ2xlL3By",
            "b3RvYnVmL3RpbWVzdGFtcC5wcm90bxoYaW8vY29tbW9uL2NhbGxiYWNrLnBy",
            "b3RvGhxpby9jb21tb24vZGlzdHJpYnV0aW9uLnByb3RvGhxpby9jb21tb24v",
            "bG9jYWxpemF0aW9uLnByb3RvGhdpby9jb21tb24vbWV0cmljcy5wcm90bxoX",
            "aW8vY29tbW9uL3Byb2plY3QucHJvdG8aF2lvL2NvbW1vbi9iaWxsaW5nLnBy",
            "b3RvGixwcm90b2MtZ2VuLXN3YWdnZXIvb3B0aW9ucy9hbm5vdGF0aW9ucy5w",
            "cm90byJNCgpQb2ludHNUeXBlEikKC2JhbGFuY2VUeXBlGAEgASgOMhQubWVt",
            "YmVycy5CYWxhbmNlVHlwZRIUCgxjdXJyZW5jeUNvZGUYAiABKAkiuwcKB1By",
            "b2dyYW0SCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCRIqCg1sb2NhbGl6ZWRO",
            "YW1lGAMgASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEiEKBnN0YXR1cxgEIAMo",
            "DjIRLmlvLlByb2plY3RTdGF0dXMSGAoFcXVvdGEYBSABKAsyCS5pby5RdW90",
            "YRIaChJwYXNzVHlwZUlkZW50aWZpZXIYBiABKAkSNgoUZGlzdHJpYnV0aW9u",
            "U2V0dGluZ3MYByABKAsyGC5pby5EaXN0cmlidXRpb25TZXR0aW5ncxIhChlh",
            "dXRvRGVsZXRlRGF5c0FmdGVyRXhwaXJ5GAggASgNEiQKHGF1dG9SZW1pbmRl",
            "ckRheXNCZWZvcmVFeHBpcnkYCSABKA0SFQoNZXhwaXJ5TWVzc2FnZRgKIAEo",
            "CRIzChZsb2NhbGl6ZWRFeHBpcnlNZXNzYWdlGAsgASgLMhMuaW8uTG9jYWxp",
            "emVkU3RyaW5nEigKIGF1dG9EZWxldGVEYXlzQWZ0ZXJOb3RJbnN0YWxsaW5n",
            "GAwgASgNEjIKCWNhbGxiYWNrcxgOIAMoCzIfLm1lbWJlcnMuUHJvZ3JhbS5D",
            "YWxsYmFja3NFbnRyeRInCgpwb2ludHNUeXBlGBAgASgLMhMubWVtYmVycy5Q",
            "b2ludHNUeXBlEjAKE3NlY29uZGFyeVBvaW50c1R5cGUYESABKAsyEy5tZW1i",
            "ZXJzLlBvaW50c1R5cGUSHAoHbWV0cmljcxgTIAEoCzILLmlvLk1ldHJpY3MS",
            "FgoObWV0YUZpZWxkc0xpc3QYFCADKAkSKwoHY3JlYXRlZBgVIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoHdXBkYXRlZBgWIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASOgoUcHJvZmlsZUltYWdlU2V0dGlu",
            "Z3MYFyABKA4yHC5tZW1iZXJzLlByb2ZpbGVJbWFnZVNldHRpbmcaPgoOQ2Fs",
            "bGJhY2tzRW50cnkSCwoDa2V5GAEgASgNEhsKBXZhbHVlGAIgASgLMgwuaW8u",
            "Q2FsbGJhY2s6AjgBOnOSQXAKbioHUHJvZ3JhbTJTTWVtYmVyc2hpcCBQcm9n",
            "cmFtcyBhbGxvdyBhIGNvbXBhbnkgdG8gY29udHJvbCB0aGUgYnVzaW5lc3Mg",
            "bG9naWMgb2YgdGhlaXIgcHJvZ3JhbS7SAQRuYW1l0gEGc3RhdHVzSgQIDRAO",
            "SgQIEhATIm0KElByb2dyYW1Db3B5UmVxdWVzdBIKCgJpZBgBIAEoCRIMCgRu",
            "YW1lGAIgASgJEiEKBnN0YXR1cxgDIAMoDjIRLmlvLlByb2plY3RTdGF0dXMS",
            "GgoScGFzc1R5cGVJZGVudGlmaWVyGAQgASgJIjoKFExpc3RQcm9ncmFtc1Jl",
            "c3BvbnNlEiIKCHByb2dyYW1zGAEgAygLMhAubWVtYmVycy5Qcm9ncmFtIiMK",
            "E0dldE1ldGFLZXlzUmVzcG9uc2USDAoEa2V5cxgBIAMoCSqPAQoeUHJvZ3Jh",
            "bUF1dG9VcERvd25HcmFkZVRpZXJUeXBlEhYKElVQRE9XTkdSQURFX1BPSU5U",
            "UxAAEiAKHFVQRE9XTkdSQURFX1NFQ09OREFSWV9QT0lOVFMQARIbChdVUERP",
            "V05HUkFERV9USUVSX1BPSU5UUxACEhYKElVQRE9XTkdSQURFX1ZJU0lUUxAD",
            "Km0KC0JhbGFuY2VUeXBlEhcKE0JBTEFOQ0VfVFlQRV9TVFJJTkcQABIUChBC",
            "QUxBTkNFX1RZUEVfSU5UEAESFwoTQkFMQU5DRV9UWVBFX0RPVUJMRRACEhYK",
            "EkJBTEFOQ0VfVFlQRV9NT05FWRADKmUKE1Byb2ZpbGVJbWFnZVNldHRpbmcS",
            "FgoSUFJPRklMRV9JTUFHRV9OT05FEAASGgoWUFJPRklMRV9JTUFHRV9PUFRJ",
            "T05BTBABEhoKFlBST0ZJTEVfSU1BR0VfUkVRVUlSRUQQAiqOAwoSUHJvdG9j",
            "b2xQYXNzRmllbGRzEiIKHlBST1RPQ09MX01FTUJFUlNISVBfRE9fTk9UX1VT",
            "RRAAEh4KGlBST1RPQ09MX01FTUJFUlNISVBfTlVNQkVSEAESHwobUFJPVE9D",
            "T0xfTUVNQkVSU0hJUF9ERVRBSUxTEAISIQodUFJPVE9DT0xfTUVNQkVSU0hJ",
            "UF9USUVSX05BTUUQAxIoCiRQUk9UT0NPTF9NRU1CRVJTSElQX1RJRVJfSU5G",
            "T1JNQVRJT04QBBIeChpQUk9UT0NPTF9NRU1CRVJTSElQX1BPSU5UUxAFEigK",
            "JFBST1RPQ09MX01FTUJFUlNISVBfU0VDT05EQVJZX1BPSU5UUxAGEiwKKFBS",
            "T1RPQ09MX01FTUJFUlNISVBfR0VORVJJQ19QUk9HUkFNX0lORk8QBxIhCh1Q",
            "Uk9UT0NPTF9NRU1CRVJTSElQX0xPQ0FUSU9OUxAIEisKJ1BST1RPQ09MX01F",
            "TUJFUlNISVBfTEFURVNUX1RSQU5TQUNUSU9OUxAJQlMKF2lvLnBhc3NraXQu",
            "UEtpby5NZW1iZXJzWixzdGFzaC5wYXNza2l0LmNvbS9pby9tb2RlbC9zZGsv",
            "Z28vaW8vbWVtYmVyc6oCCVBLTWVtYmVyc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::PKIo.CallbackReflection.Descriptor, global::PKIo.DistributionReflection.Descriptor, global::PKIo.LocalizationReflection.Descriptor, global::PKIo.MetricsReflection.Descriptor, global::PKIo.ProjectReflection.Descriptor, global::PKIo.BillingReflection.Descriptor, global::Grpc.Gateway.ProtocGenSwagger.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PKMembers.ProgramAutoUpDownGradeTierType), typeof(global::PKMembers.BalanceType), typeof(global::PKMembers.ProfileImageSetting), typeof(global::PKMembers.ProtocolPassFields), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PKMembers.PointsType), global::PKMembers.PointsType.Parser, new[]{ "BalanceType", "CurrencyCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKMembers.Program), global::PKMembers.Program.Parser, new[]{ "Id", "Name", "LocalizedName", "Status", "Quota", "PassTypeIdentifier", "DistributionSettings", "AutoDeleteDaysAfterExpiry", "AutoReminderDaysBeforeExpiry", "ExpiryMessage", "LocalizedExpiryMessage", "AutoDeleteDaysAfterNotInstalling", "Callbacks", "PointsType", "SecondaryPointsType", "Metrics", "MetaFieldsList", "Created", "Updated", "ProfileImageSettings" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKMembers.ProgramCopyRequest), global::PKMembers.ProgramCopyRequest.Parser, new[]{ "Id", "Name", "Status", "PassTypeIdentifier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKMembers.ListProgramsResponse), global::PKMembers.ListProgramsResponse.Parser, new[]{ "Programs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKMembers.GetMetaKeysResponse), global::PKMembers.GetMetaKeysResponse.Parser, new[]{ "Keys" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ProgramAutoUpDownGradeTierType {
    /// <summary>
    /// Auto up / down grades based on points.
    /// </summary>
    [pbr::OriginalName("UPDOWNGRADE_POINTS")] UpdowngradePoints = 0,
    /// <summary>
    /// Auto up / down grades based on secondary points.
    /// </summary>
    [pbr::OriginalName("UPDOWNGRADE_SECONDARY_POINTS")] UpdowngradeSecondaryPoints = 1,
    /// <summary>
    /// Auto up / down grades based on tier points.
    /// </summary>
    [pbr::OriginalName("UPDOWNGRADE_TIER_POINTS")] UpdowngradeTierPoints = 2,
    /// <summary>
    /// Auto up / down grades based on # of visits.
    /// </summary>
    [pbr::OriginalName("UPDOWNGRADE_VISITS")] UpdowngradeVisits = 3,
  }

  public enum BalanceType {
    [pbr::OriginalName("BALANCE_TYPE_STRING")] String = 0,
    [pbr::OriginalName("BALANCE_TYPE_INT")] Int = 1,
    [pbr::OriginalName("BALANCE_TYPE_DOUBLE")] Double = 2,
    [pbr::OriginalName("BALANCE_TYPE_MONEY")] Money = 3,
  }

  public enum ProfileImageSetting {
    [pbr::OriginalName("PROFILE_IMAGE_NONE")] ProfileImageNone = 0,
    [pbr::OriginalName("PROFILE_IMAGE_OPTIONAL")] ProfileImageOptional = 1,
    [pbr::OriginalName("PROFILE_IMAGE_REQUIRED")] ProfileImageRequired = 2,
  }

  /// <summary>
  /// Pass fields that are protocol specific.
  /// </summary>
  public enum ProtocolPassFields {
    [pbr::OriginalName("PROTOCOL_MEMBERSHIP_DO_NOT_USE")] ProtocolMembershipDoNotUse = 0,
    [pbr::OriginalName("PROTOCOL_MEMBERSHIP_NUMBER")] ProtocolMembershipNumber = 1,
    [pbr::OriginalName("PROTOCOL_MEMBERSHIP_DETAILS")] ProtocolMembershipDetails = 2,
    [pbr::OriginalName("PROTOCOL_MEMBERSHIP_TIER_NAME")] ProtocolMembershipTierName = 3,
    [pbr::OriginalName("PROTOCOL_MEMBERSHIP_TIER_INFORMATION")] ProtocolMembershipTierInformation = 4,
    [pbr::OriginalName("PROTOCOL_MEMBERSHIP_POINTS")] ProtocolMembershipPoints = 5,
    [pbr::OriginalName("PROTOCOL_MEMBERSHIP_SECONDARY_POINTS")] ProtocolMembershipSecondaryPoints = 6,
    [pbr::OriginalName("PROTOCOL_MEMBERSHIP_GENERIC_PROGRAM_INFO")] ProtocolMembershipGenericProgramInfo = 7,
    [pbr::OriginalName("PROTOCOL_MEMBERSHIP_LOCATIONS")] ProtocolMembershipLocations = 8,
    [pbr::OriginalName("PROTOCOL_MEMBERSHIP_LATEST_TRANSACTIONS")] ProtocolMembershipLatestTransactions = 9,
  }

  #endregion

  #region Messages
  public sealed partial class PointsType : pb::IMessage<PointsType> {
    private static readonly pb::MessageParser<PointsType> _parser = new pb::MessageParser<PointsType>(() => new PointsType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PointsType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKMembers.ProgramReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PointsType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PointsType(PointsType other) : this() {
      balanceType_ = other.balanceType_;
      currencyCode_ = other.currencyCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PointsType Clone() {
      return new PointsType(this);
    }

    /// <summary>Field number for the "balanceType" field.</summary>
    public const int BalanceTypeFieldNumber = 1;
    private global::PKMembers.BalanceType balanceType_ = global::PKMembers.BalanceType.String;
    /// <summary>
    /// The balance type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKMembers.BalanceType BalanceType {
      get { return balanceType_; }
      set {
        balanceType_ = value;
      }
    }

    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 2;
    private string currencyCode_ = "";
    /// <summary>
    /// The currency code; only needs to be provided if balance type equals BALANCE_TYPE_MONEY.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PointsType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PointsType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BalanceType != other.BalanceType) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BalanceType != global::PKMembers.BalanceType.String) hash ^= BalanceType.GetHashCode();
      if (CurrencyCode.Length != 0) hash ^= CurrencyCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BalanceType != global::PKMembers.BalanceType.String) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BalanceType);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CurrencyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BalanceType != global::PKMembers.BalanceType.String) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BalanceType);
      }
      if (CurrencyCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PointsType other) {
      if (other == null) {
        return;
      }
      if (other.BalanceType != global::PKMembers.BalanceType.String) {
        BalanceType = other.BalanceType;
      }
      if (other.CurrencyCode.Length != 0) {
        CurrencyCode = other.CurrencyCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BalanceType = (global::PKMembers.BalanceType) input.ReadEnum();
            break;
          }
          case 18: {
            CurrencyCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The Program Details
  /// </summary>
  public sealed partial class Program : pb::IMessage<Program> {
    private static readonly pb::MessageParser<Program> _parser = new pb::MessageParser<Program>(() => new Program());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Program> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKMembers.ProgramReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Program() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Program(Program other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      localizedName_ = other.localizedName_ != null ? other.localizedName_.Clone() : null;
      status_ = other.status_.Clone();
      quota_ = other.quota_ != null ? other.quota_.Clone() : null;
      passTypeIdentifier_ = other.passTypeIdentifier_;
      distributionSettings_ = other.distributionSettings_ != null ? other.distributionSettings_.Clone() : null;
      autoDeleteDaysAfterExpiry_ = other.autoDeleteDaysAfterExpiry_;
      autoReminderDaysBeforeExpiry_ = other.autoReminderDaysBeforeExpiry_;
      expiryMessage_ = other.expiryMessage_;
      localizedExpiryMessage_ = other.localizedExpiryMessage_ != null ? other.localizedExpiryMessage_.Clone() : null;
      autoDeleteDaysAfterNotInstalling_ = other.autoDeleteDaysAfterNotInstalling_;
      callbacks_ = other.callbacks_.Clone();
      pointsType_ = other.pointsType_ != null ? other.pointsType_.Clone() : null;
      secondaryPointsType_ = other.secondaryPointsType_ != null ? other.secondaryPointsType_.Clone() : null;
      metrics_ = other.metrics_ != null ? other.metrics_.Clone() : null;
      metaFieldsList_ = other.metaFieldsList_.Clone();
      created_ = other.created_ != null ? other.created_.Clone() : null;
      updated_ = other.updated_ != null ? other.updated_.Clone() : null;
      profileImageSettings_ = other.profileImageSettings_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Program Clone() {
      return new Program(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// PassKit generated program id (22 characters).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of the membership programs; will be shown on the enrolment page (if set) and issuer name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedName" field.</summary>
    public const int LocalizedNameFieldNumber = 3;
    private global::PKIo.LocalizedString localizedName_;
    /// <summary>
    /// Localized name of the membership program.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedName {
      get { return localizedName_; }
      set {
        localizedName_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private static readonly pb::FieldCodec<global::PKIo.ProjectStatus> _repeated_status_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::PKIo.ProjectStatus) x);
    private readonly pbc::RepeatedField<global::PKIo.ProjectStatus> status_ = new pbc::RepeatedField<global::PKIo.ProjectStatus>();
    /// <summary>
    /// The program status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PKIo.ProjectStatus> Status {
      get { return status_; }
    }

    /// <summary>Field number for the "quota" field.</summary>
    public const int QuotaFieldNumber = 5;
    private global::PKIo.Quota quota_;
    /// <summary>
    /// The project quota.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.Quota Quota {
      get { return quota_; }
      set {
        quota_ = value;
      }
    }

    /// <summary>Field number for the "passTypeIdentifier" field.</summary>
    public const int PassTypeIdentifierFieldNumber = 6;
    private string passTypeIdentifier_ = "";
    /// <summary>
    /// Leave empty for draft programs. Needs to be set for programs where status contains PROJECT_PUBLISHED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PassTypeIdentifier {
      get { return passTypeIdentifier_; }
      set {
        passTypeIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "distributionSettings" field.</summary>
    public const int DistributionSettingsFieldNumber = 7;
    private global::PKIo.DistributionSettings distributionSettings_;
    /// <summary>
    /// Contains the email &amp; sms distribution settings for the program.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.DistributionSettings DistributionSettings {
      get { return distributionSettings_; }
      set {
        distributionSettings_ = value;
      }
    }

    /// <summary>Field number for the "autoDeleteDaysAfterExpiry" field.</summary>
    public const int AutoDeleteDaysAfterExpiryFieldNumber = 8;
    private uint autoDeleteDaysAfterExpiry_;
    /// <summary>
    /// Auto deletes the member after `autoDeleteDaysAfterExpiry` days.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AutoDeleteDaysAfterExpiry {
      get { return autoDeleteDaysAfterExpiry_; }
      set {
        autoDeleteDaysAfterExpiry_ = value;
      }
    }

    /// <summary>Field number for the "autoReminderDaysBeforeExpiry" field.</summary>
    public const int AutoReminderDaysBeforeExpiryFieldNumber = 9;
    private uint autoReminderDaysBeforeExpiry_;
    /// <summary>
    /// Sets how many days before expiry to send a reminder lockscreen message to the member.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AutoReminderDaysBeforeExpiry {
      get { return autoReminderDaysBeforeExpiry_; }
      set {
        autoReminderDaysBeforeExpiry_ = value;
      }
    }

    /// <summary>Field number for the "expiryMessage" field.</summary>
    public const int ExpiryMessageFieldNumber = 10;
    private string expiryMessage_ = "";
    /// <summary>
    /// The message to send to the user `autoReminderDaysBeforeExpiry` days before expiry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpiryMessage {
      get { return expiryMessage_; }
      set {
        expiryMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedExpiryMessage" field.</summary>
    public const int LocalizedExpiryMessageFieldNumber = 11;
    private global::PKIo.LocalizedString localizedExpiryMessage_;
    /// <summary>
    /// Localized expiry message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedExpiryMessage {
      get { return localizedExpiryMessage_; }
      set {
        localizedExpiryMessage_ = value;
      }
    }

    /// <summary>Field number for the "autoDeleteDaysAfterNotInstalling" field.</summary>
    public const int AutoDeleteDaysAfterNotInstallingFieldNumber = 12;
    private uint autoDeleteDaysAfterNotInstalling_;
    /// <summary>
    /// Auto deletes the member `autoDeleteDaysAfterNotInstalling` days after the card has not been installed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AutoDeleteDaysAfterNotInstalling {
      get { return autoDeleteDaysAfterNotInstalling_; }
      set {
        autoDeleteDaysAfterNotInstalling_ = value;
      }
    }

    /// <summary>Field number for the "callbacks" field.</summary>
    public const int CallbacksFieldNumber = 14;
    private static readonly pbc::MapField<uint, global::PKIo.Callback>.Codec _map_callbacks_codec
        = new pbc::MapField<uint, global::PKIo.Callback>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::PKIo.Callback.Parser), 114);
    private readonly pbc::MapField<uint, global::PKIo.Callback> callbacks_ = new pbc::MapField<uint, global::PKIo.Callback>();
    /// <summary>
    /// Callbacks that are defined on program events. The key is the CallbackEvent ENUM.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<uint, global::PKIo.Callback> Callbacks {
      get { return callbacks_; }
    }

    /// <summary>Field number for the "pointsType" field.</summary>
    public const int PointsTypeFieldNumber = 16;
    private global::PKMembers.PointsType pointsType_;
    /// <summary>
    /// Points format for primary points.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKMembers.PointsType PointsType {
      get { return pointsType_; }
      set {
        pointsType_ = value;
      }
    }

    /// <summary>Field number for the "secondaryPointsType" field.</summary>
    public const int SecondaryPointsTypeFieldNumber = 17;
    private global::PKMembers.PointsType secondaryPointsType_;
    /// <summary>
    /// Points format for secondary points.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKMembers.PointsType SecondaryPointsType {
      get { return secondaryPointsType_; }
      set {
        secondaryPointsType_ = value;
      }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 19;
    private global::PKIo.Metrics metrics_;
    /// <summary>
    /// Issued, installed, uninstalled and invalidated counts. Metrics are not writable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.Metrics Metrics {
      get { return metrics_; }
      set {
        metrics_ = value;
      }
    }

    /// <summary>Field number for the "metaFieldsList" field.</summary>
    public const int MetaFieldsListFieldNumber = 20;
    private static readonly pb::FieldCodec<string> _repeated_metaFieldsList_codec
        = pb::FieldCodec.ForString(162);
    private readonly pbc::RepeatedField<string> metaFieldsList_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of dynamic fields which can be used to filter members.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MetaFieldsList {
      get { return metaFieldsList_; }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 21;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// The date the program was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 22;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updated_;
    /// <summary>
    /// The date the program was updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    /// <summary>Field number for the "profileImageSettings" field.</summary>
    public const int ProfileImageSettingsFieldNumber = 23;
    private global::PKMembers.ProfileImageSetting profileImageSettings_ = global::PKMembers.ProfileImageSetting.ProfileImageNone;
    /// <summary>
    /// Indicates if the program requires member profile images on enrol.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKMembers.ProfileImageSetting ProfileImageSettings {
      get { return profileImageSettings_; }
      set {
        profileImageSettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Program);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Program other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(LocalizedName, other.LocalizedName)) return false;
      if(!status_.Equals(other.status_)) return false;
      if (!object.Equals(Quota, other.Quota)) return false;
      if (PassTypeIdentifier != other.PassTypeIdentifier) return false;
      if (!object.Equals(DistributionSettings, other.DistributionSettings)) return false;
      if (AutoDeleteDaysAfterExpiry != other.AutoDeleteDaysAfterExpiry) return false;
      if (AutoReminderDaysBeforeExpiry != other.AutoReminderDaysBeforeExpiry) return false;
      if (ExpiryMessage != other.ExpiryMessage) return false;
      if (!object.Equals(LocalizedExpiryMessage, other.LocalizedExpiryMessage)) return false;
      if (AutoDeleteDaysAfterNotInstalling != other.AutoDeleteDaysAfterNotInstalling) return false;
      if (!Callbacks.Equals(other.Callbacks)) return false;
      if (!object.Equals(PointsType, other.PointsType)) return false;
      if (!object.Equals(SecondaryPointsType, other.SecondaryPointsType)) return false;
      if (!object.Equals(Metrics, other.Metrics)) return false;
      if(!metaFieldsList_.Equals(other.metaFieldsList_)) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (!object.Equals(Updated, other.Updated)) return false;
      if (ProfileImageSettings != other.ProfileImageSettings) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (localizedName_ != null) hash ^= LocalizedName.GetHashCode();
      hash ^= status_.GetHashCode();
      if (quota_ != null) hash ^= Quota.GetHashCode();
      if (PassTypeIdentifier.Length != 0) hash ^= PassTypeIdentifier.GetHashCode();
      if (distributionSettings_ != null) hash ^= DistributionSettings.GetHashCode();
      if (AutoDeleteDaysAfterExpiry != 0) hash ^= AutoDeleteDaysAfterExpiry.GetHashCode();
      if (AutoReminderDaysBeforeExpiry != 0) hash ^= AutoReminderDaysBeforeExpiry.GetHashCode();
      if (ExpiryMessage.Length != 0) hash ^= ExpiryMessage.GetHashCode();
      if (localizedExpiryMessage_ != null) hash ^= LocalizedExpiryMessage.GetHashCode();
      if (AutoDeleteDaysAfterNotInstalling != 0) hash ^= AutoDeleteDaysAfterNotInstalling.GetHashCode();
      hash ^= Callbacks.GetHashCode();
      if (pointsType_ != null) hash ^= PointsType.GetHashCode();
      if (secondaryPointsType_ != null) hash ^= SecondaryPointsType.GetHashCode();
      if (metrics_ != null) hash ^= Metrics.GetHashCode();
      hash ^= metaFieldsList_.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (updated_ != null) hash ^= Updated.GetHashCode();
      if (ProfileImageSettings != global::PKMembers.ProfileImageSetting.ProfileImageNone) hash ^= ProfileImageSettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (localizedName_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LocalizedName);
      }
      status_.WriteTo(output, _repeated_status_codec);
      if (quota_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Quota);
      }
      if (PassTypeIdentifier.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PassTypeIdentifier);
      }
      if (distributionSettings_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DistributionSettings);
      }
      if (AutoDeleteDaysAfterExpiry != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(AutoDeleteDaysAfterExpiry);
      }
      if (AutoReminderDaysBeforeExpiry != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(AutoReminderDaysBeforeExpiry);
      }
      if (ExpiryMessage.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ExpiryMessage);
      }
      if (localizedExpiryMessage_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LocalizedExpiryMessage);
      }
      if (AutoDeleteDaysAfterNotInstalling != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(AutoDeleteDaysAfterNotInstalling);
      }
      callbacks_.WriteTo(output, _map_callbacks_codec);
      if (pointsType_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(PointsType);
      }
      if (secondaryPointsType_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(SecondaryPointsType);
      }
      if (metrics_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(Metrics);
      }
      metaFieldsList_.WriteTo(output, _repeated_metaFieldsList_codec);
      if (created_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Updated);
      }
      if (ProfileImageSettings != global::PKMembers.ProfileImageSetting.ProfileImageNone) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) ProfileImageSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (localizedName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedName);
      }
      size += status_.CalculateSize(_repeated_status_codec);
      if (quota_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quota);
      }
      if (PassTypeIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PassTypeIdentifier);
      }
      if (distributionSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DistributionSettings);
      }
      if (AutoDeleteDaysAfterExpiry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AutoDeleteDaysAfterExpiry);
      }
      if (AutoReminderDaysBeforeExpiry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AutoReminderDaysBeforeExpiry);
      }
      if (ExpiryMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpiryMessage);
      }
      if (localizedExpiryMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedExpiryMessage);
      }
      if (AutoDeleteDaysAfterNotInstalling != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AutoDeleteDaysAfterNotInstalling);
      }
      size += callbacks_.CalculateSize(_map_callbacks_codec);
      if (pointsType_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PointsType);
      }
      if (secondaryPointsType_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecondaryPointsType);
      }
      if (metrics_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Metrics);
      }
      size += metaFieldsList_.CalculateSize(_repeated_metaFieldsList_codec);
      if (created_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (updated_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Updated);
      }
      if (ProfileImageSettings != global::PKMembers.ProfileImageSetting.ProfileImageNone) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ProfileImageSettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Program other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.localizedName_ != null) {
        if (localizedName_ == null) {
          LocalizedName = new global::PKIo.LocalizedString();
        }
        LocalizedName.MergeFrom(other.LocalizedName);
      }
      status_.Add(other.status_);
      if (other.quota_ != null) {
        if (quota_ == null) {
          Quota = new global::PKIo.Quota();
        }
        Quota.MergeFrom(other.Quota);
      }
      if (other.PassTypeIdentifier.Length != 0) {
        PassTypeIdentifier = other.PassTypeIdentifier;
      }
      if (other.distributionSettings_ != null) {
        if (distributionSettings_ == null) {
          DistributionSettings = new global::PKIo.DistributionSettings();
        }
        DistributionSettings.MergeFrom(other.DistributionSettings);
      }
      if (other.AutoDeleteDaysAfterExpiry != 0) {
        AutoDeleteDaysAfterExpiry = other.AutoDeleteDaysAfterExpiry;
      }
      if (other.AutoReminderDaysBeforeExpiry != 0) {
        AutoReminderDaysBeforeExpiry = other.AutoReminderDaysBeforeExpiry;
      }
      if (other.ExpiryMessage.Length != 0) {
        ExpiryMessage = other.ExpiryMessage;
      }
      if (other.localizedExpiryMessage_ != null) {
        if (localizedExpiryMessage_ == null) {
          LocalizedExpiryMessage = new global::PKIo.LocalizedString();
        }
        LocalizedExpiryMessage.MergeFrom(other.LocalizedExpiryMessage);
      }
      if (other.AutoDeleteDaysAfterNotInstalling != 0) {
        AutoDeleteDaysAfterNotInstalling = other.AutoDeleteDaysAfterNotInstalling;
      }
      callbacks_.Add(other.callbacks_);
      if (other.pointsType_ != null) {
        if (pointsType_ == null) {
          PointsType = new global::PKMembers.PointsType();
        }
        PointsType.MergeFrom(other.PointsType);
      }
      if (other.secondaryPointsType_ != null) {
        if (secondaryPointsType_ == null) {
          SecondaryPointsType = new global::PKMembers.PointsType();
        }
        SecondaryPointsType.MergeFrom(other.SecondaryPointsType);
      }
      if (other.metrics_ != null) {
        if (metrics_ == null) {
          Metrics = new global::PKIo.Metrics();
        }
        Metrics.MergeFrom(other.Metrics);
      }
      metaFieldsList_.Add(other.metaFieldsList_);
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      if (other.updated_ != null) {
        if (updated_ == null) {
          Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Updated.MergeFrom(other.Updated);
      }
      if (other.ProfileImageSettings != global::PKMembers.ProfileImageSetting.ProfileImageNone) {
        ProfileImageSettings = other.ProfileImageSettings;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (localizedName_ == null) {
              LocalizedName = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedName);
            break;
          }
          case 34:
          case 32: {
            status_.AddEntriesFrom(input, _repeated_status_codec);
            break;
          }
          case 42: {
            if (quota_ == null) {
              Quota = new global::PKIo.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
          case 50: {
            PassTypeIdentifier = input.ReadString();
            break;
          }
          case 58: {
            if (distributionSettings_ == null) {
              DistributionSettings = new global::PKIo.DistributionSettings();
            }
            input.ReadMessage(DistributionSettings);
            break;
          }
          case 64: {
            AutoDeleteDaysAfterExpiry = input.ReadUInt32();
            break;
          }
          case 72: {
            AutoReminderDaysBeforeExpiry = input.ReadUInt32();
            break;
          }
          case 82: {
            ExpiryMessage = input.ReadString();
            break;
          }
          case 90: {
            if (localizedExpiryMessage_ == null) {
              LocalizedExpiryMessage = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedExpiryMessage);
            break;
          }
          case 96: {
            AutoDeleteDaysAfterNotInstalling = input.ReadUInt32();
            break;
          }
          case 114: {
            callbacks_.AddEntriesFrom(input, _map_callbacks_codec);
            break;
          }
          case 130: {
            if (pointsType_ == null) {
              PointsType = new global::PKMembers.PointsType();
            }
            input.ReadMessage(PointsType);
            break;
          }
          case 138: {
            if (secondaryPointsType_ == null) {
              SecondaryPointsType = new global::PKMembers.PointsType();
            }
            input.ReadMessage(SecondaryPointsType);
            break;
          }
          case 154: {
            if (metrics_ == null) {
              Metrics = new global::PKIo.Metrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
          case 162: {
            metaFieldsList_.AddEntriesFrom(input, _repeated_metaFieldsList_codec);
            break;
          }
          case 170: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 178: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
          case 184: {
            ProfileImageSettings = (global::PKMembers.ProfileImageSetting) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Contains payload for copying a program
  /// </summary>
  public sealed partial class ProgramCopyRequest : pb::IMessage<ProgramCopyRequest> {
    private static readonly pb::MessageParser<ProgramCopyRequest> _parser = new pb::MessageParser<ProgramCopyRequest>(() => new ProgramCopyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProgramCopyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKMembers.ProgramReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgramCopyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgramCopyRequest(ProgramCopyRequest other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      status_ = other.status_.Clone();
      passTypeIdentifier_ = other.passTypeIdentifier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgramCopyRequest Clone() {
      return new ProgramCopyRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// uuid of the program to copy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// optional name for the new program.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private static readonly pb::FieldCodec<global::PKIo.ProjectStatus> _repeated_status_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::PKIo.ProjectStatus) x);
    private readonly pbc::RepeatedField<global::PKIo.ProjectStatus> status_ = new pbc::RepeatedField<global::PKIo.ProjectStatus>();
    /// <summary>
    /// Status to set the copied program to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PKIo.ProjectStatus> Status {
      get { return status_; }
    }

    /// <summary>Field number for the "passTypeIdentifier" field.</summary>
    public const int PassTypeIdentifierFieldNumber = 4;
    private string passTypeIdentifier_ = "";
    /// <summary>
    /// Can optionally be provided if setting status to published (requires a prod cert).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PassTypeIdentifier {
      get { return passTypeIdentifier_; }
      set {
        passTypeIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProgramCopyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProgramCopyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if(!status_.Equals(other.status_)) return false;
      if (PassTypeIdentifier != other.PassTypeIdentifier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= status_.GetHashCode();
      if (PassTypeIdentifier.Length != 0) hash ^= PassTypeIdentifier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      status_.WriteTo(output, _repeated_status_codec);
      if (PassTypeIdentifier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PassTypeIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += status_.CalculateSize(_repeated_status_codec);
      if (PassTypeIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PassTypeIdentifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProgramCopyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      status_.Add(other.status_);
      if (other.PassTypeIdentifier.Length != 0) {
        PassTypeIdentifier = other.PassTypeIdentifier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            status_.AddEntriesFrom(input, _repeated_status_codec);
            break;
          }
          case 34: {
            PassTypeIdentifier = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Contains an array of programs.
  /// </summary>
  public sealed partial class ListProgramsResponse : pb::IMessage<ListProgramsResponse> {
    private static readonly pb::MessageParser<ListProgramsResponse> _parser = new pb::MessageParser<ListProgramsResponse>(() => new ListProgramsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListProgramsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKMembers.ProgramReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListProgramsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListProgramsResponse(ListProgramsResponse other) : this() {
      programs_ = other.programs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListProgramsResponse Clone() {
      return new ListProgramsResponse(this);
    }

    /// <summary>Field number for the "programs" field.</summary>
    public const int ProgramsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PKMembers.Program> _repeated_programs_codec
        = pb::FieldCodec.ForMessage(10, global::PKMembers.Program.Parser);
    private readonly pbc::RepeatedField<global::PKMembers.Program> programs_ = new pbc::RepeatedField<global::PKMembers.Program>();
    /// <summary>
    /// An array of programs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PKMembers.Program> Programs {
      get { return programs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListProgramsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListProgramsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!programs_.Equals(other.programs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= programs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      programs_.WriteTo(output, _repeated_programs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += programs_.CalculateSize(_repeated_programs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListProgramsResponse other) {
      if (other == null) {
        return;
      }
      programs_.Add(other.programs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            programs_.AddEntriesFrom(input, _repeated_programs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMetaKeysResponse : pb::IMessage<GetMetaKeysResponse> {
    private static readonly pb::MessageParser<GetMetaKeysResponse> _parser = new pb::MessageParser<GetMetaKeysResponse>(() => new GetMetaKeysResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMetaKeysResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKMembers.ProgramReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetaKeysResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetaKeysResponse(GetMetaKeysResponse other) : this() {
      keys_ = other.keys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetaKeysResponse Clone() {
      return new GetMetaKeysResponse(this);
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_keys_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> keys_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// An array of distinct meta keys.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Keys {
      get { return keys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMetaKeysResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMetaKeysResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!keys_.Equals(other.keys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= keys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      keys_.WriteTo(output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMetaKeysResponse other) {
      if (other == null) {
        return;
      }
      keys_.Add(other.keys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
