// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/common/distribution.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PKIo {

  /// <summary>Holder for reflection information generated from io/common/distribution.proto</summary>
  public static partial class DistributionReflection {

    #region Descriptor
    /// <summary>File descriptor for io/common/distribution.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DistributionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chxpby9jb21tb24vZGlzdHJpYnV0aW9uLnByb3RvEgJpbxocaW8vY29tbW9u",
            "L2xvY2FsaXphdGlvbi5wcm90bxoZaW8vY29tbW9uL3Byb3RvY29scy5wcm90",
            "bxoscHJvdG9jLWdlbi1zd2FnZ2VyL29wdGlvbnMvYW5ub3RhdGlvbnMucHJv",
            "dG8iZAoYRW1haWxEaXN0cmlidXRpb25SZXF1ZXN0EgoKAmlkGAEgASgJEiIK",
            "CHByb3RvY29sGAIgASgOMhAuaW8uUGFzc1Byb3RvY29sEhgKEGFsdGVybmF0",
            "aXZlRW1haWwYAyABKAkimwEKFERpc3RyaWJ1dGlvblNldHRpbmdzEjUKFGRp",
            "c3RyaWJ1dGlvbkNoYW5uZWxzGAEgAygOMhcuaW8uRGlzdHJpYnV0aW9uQ2hh",
            "bm5lbBInCgx3ZWxjb21lRW1haWwYAiABKAsyES5pby5FbWFpbFRlbXBsYXRl",
            "EiMKCndlbGNvbWVTbXMYAyABKAsyDy5pby5TbXNUZW1wbGF0ZSLrBAoNRW1h",
            "aWxUZW1wbGF0ZRIPCgdzdWJqZWN0GAEgASgJEi0KEGxvY2FsaXplZFN1Ympl",
            "Y3QYAiABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcSFwoPYm9keVRleHRDb250",
            "ZW50GAMgASgJEjUKGGxvY2FsaXplZEJvZHlUZXh0Q29udGVudBgEIAEoCzIT",
            "LmlvLkxvY2FsaXplZFN0cmluZxIXCg9ib2R5SHRtbENvbnRlbnQYBSABKAkS",
            "NQoYbG9jYWxpemVkQm9keUh0bWxDb250ZW50GAYgASgLMhMuaW8uTG9jYWxp",
            "emVkU3RyaW5nEi0KDWNvbmZpZ3VyYXRpb24YByABKAsyFi5pby5FbWFpbENv",
            "bmZpZ3VyYXRpb24SEgoKYnV0dG9uVGV4dBgIIAEoCRIXCg9idXR0b25UZXh0",
            "Q29sb3IYCSABKAkSHQoVYnV0dG9uQmFja2dyb3VuZENvbG9yGAogASgJEhoK",
            "EmJ1dHRvbkJvcmRlclJhZGl1cxgLIAEoCRIZChFmb290ZXJUZXh0Q29udGVu",
            "dBgMIAEoCRI3Chpsb2NhbGl6ZWRGb290ZXJUZXh0Q29udGVudBgNIAEoCzIT",
            "LmlvLkxvY2FsaXplZFN0cmluZxIZChFmb290ZXJIdG1sQ29udGVudBgOIAEo",
            "CRI3Chpsb2NhbGl6ZWRGb290ZXJIdG1sQ29udGVudBgPIAEoCzITLmlvLkxv",
            "Y2FsaXplZFN0cmluZxIeChZtZXNzYWdlQmFja2dyb3VuZENvbG9yGBAgASgJ",
            "EhsKE3BhZ2VCYWNrZ3JvdW5kQ29sb3IYESABKAkiYwoSRW1haWxDb25maWd1",
            "cmF0aW9uEhEKCWVtYWlsRnJvbRgBIAEoCRIVCg1lbWFpbEZyb21OYW1lGAIg",
            "ASgJEiMKG0VtYWlsRnJvbVZlcmlmaWVkRm9yU2VuZGluZxgDIAEoCCJhCgtT",
            "bXNUZW1wbGF0ZRIWCgdjb250ZW50GAEgASgJQgWSQQJ4RhI0ChBsb2NhbGl6",
            "ZWRDb250ZW50GAIgASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nQgWSQQJ4RkoE",
            "CAMQBCpOChNEaXN0cmlidXRpb25DaGFubmVsEhMKD05PX0RJU1RSSUJVVElP",
            "ThAAEhEKDUNIQU5ORUxfRU1BSUwQARIPCgtDSEFOTkVMX1NNUxACQj4KD2lv",
            "LnBhc3NraXQuUEtpb1okc3Rhc2gucGFzc2tpdC5jb20vaW8vbW9kZWwvc2Rr",
            "L2dvL2lvqgIEUEtJb2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PKIo.LocalizationReflection.Descriptor, global::PKIo.ProtocolsReflection.Descriptor, global::Grpc.Gateway.ProtocGenSwagger.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PKIo.DistributionChannel), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.EmailDistributionRequest), global::PKIo.EmailDistributionRequest.Parser, new[]{ "Id", "Protocol", "AlternativeEmail" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.DistributionSettings), global::PKIo.DistributionSettings.Parser, new[]{ "DistributionChannels", "WelcomeEmail", "WelcomeSms" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.EmailTemplate), global::PKIo.EmailTemplate.Parser, new[]{ "Subject", "LocalizedSubject", "BodyTextContent", "LocalizedBodyTextContent", "BodyHtmlContent", "LocalizedBodyHtmlContent", "Configuration", "ButtonText", "ButtonTextColor", "ButtonBackgroundColor", "ButtonBorderRadius", "FooterTextContent", "LocalizedFooterTextContent", "FooterHtmlContent", "LocalizedFooterHtmlContent", "MessageBackgroundColor", "PageBackgroundColor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.EmailConfiguration), global::PKIo.EmailConfiguration.Parser, new[]{ "EmailFrom", "EmailFromName", "EmailFromVerifiedForSending" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.SmsTemplate), global::PKIo.SmsTemplate.Parser, new[]{ "Content", "LocalizedContent" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum DistributionChannel {
    [pbr::OriginalName("NO_DISTRIBUTION")] NoDistribution = 0,
    /// <summary>
    /// Unique pass link is distributed via email (will use default PK email template if no custom Email Template is provided)
    /// </summary>
    [pbr::OriginalName("CHANNEL_EMAIL")] ChannelEmail = 1,
    /// <summary>
    /// Unique pass link is distributed via SMS (will use default PK SMS template if no custom SMS Template is provided)
    /// </summary>
    [pbr::OriginalName("CHANNEL_SMS")] ChannelSms = 2,
  }

  #endregion

  #region Messages
  public sealed partial class EmailDistributionRequest : pb::IMessage<EmailDistributionRequest> {
    private static readonly pb::MessageParser<EmailDistributionRequest> _parser = new pb::MessageParser<EmailDistributionRequest>(() => new EmailDistributionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmailDistributionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.DistributionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailDistributionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailDistributionRequest(EmailDistributionRequest other) : this() {
      id_ = other.id_;
      protocol_ = other.protocol_;
      alternativeEmail_ = other.alternativeEmail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailDistributionRequest Clone() {
      return new EmailDistributionRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 2;
    private global::PKIo.PassProtocol protocol_ = global::PKIo.PassProtocol.DoNotUse;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.PassProtocol Protocol {
      get { return protocol_; }
      set {
        protocol_ = value;
      }
    }

    /// <summary>Field number for the "alternativeEmail" field.</summary>
    public const int AlternativeEmailFieldNumber = 3;
    private string alternativeEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AlternativeEmail {
      get { return alternativeEmail_; }
      set {
        alternativeEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmailDistributionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmailDistributionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Protocol != other.Protocol) return false;
      if (AlternativeEmail != other.AlternativeEmail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Protocol != global::PKIo.PassProtocol.DoNotUse) hash ^= Protocol.GetHashCode();
      if (AlternativeEmail.Length != 0) hash ^= AlternativeEmail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Protocol != global::PKIo.PassProtocol.DoNotUse) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Protocol);
      }
      if (AlternativeEmail.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AlternativeEmail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Protocol != global::PKIo.PassProtocol.DoNotUse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
      }
      if (AlternativeEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlternativeEmail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmailDistributionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Protocol != global::PKIo.PassProtocol.DoNotUse) {
        Protocol = other.Protocol;
      }
      if (other.AlternativeEmail.Length != 0) {
        AlternativeEmail = other.AlternativeEmail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Protocol = (global::PKIo.PassProtocol) input.ReadEnum();
            break;
          }
          case 26: {
            AlternativeEmail = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DistributionSettings can be used by protocol top level elements to define the email / sms-es
  /// </summary>
  public sealed partial class DistributionSettings : pb::IMessage<DistributionSettings> {
    private static readonly pb::MessageParser<DistributionSettings> _parser = new pb::MessageParser<DistributionSettings>(() => new DistributionSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DistributionSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.DistributionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DistributionSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DistributionSettings(DistributionSettings other) : this() {
      distributionChannels_ = other.distributionChannels_.Clone();
      welcomeEmail_ = other.welcomeEmail_ != null ? other.welcomeEmail_.Clone() : null;
      welcomeSms_ = other.welcomeSms_ != null ? other.welcomeSms_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DistributionSettings Clone() {
      return new DistributionSettings(this);
    }

    /// <summary>Field number for the "distributionChannels" field.</summary>
    public const int DistributionChannelsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PKIo.DistributionChannel> _repeated_distributionChannels_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::PKIo.DistributionChannel) x);
    private readonly pbc::RepeatedField<global::PKIo.DistributionChannel> distributionChannels_ = new pbc::RepeatedField<global::PKIo.DistributionChannel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PKIo.DistributionChannel> DistributionChannels {
      get { return distributionChannels_; }
    }

    /// <summary>Field number for the "welcomeEmail" field.</summary>
    public const int WelcomeEmailFieldNumber = 2;
    private global::PKIo.EmailTemplate welcomeEmail_;
    /// <summary>
    /// Welcome email settings
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.EmailTemplate WelcomeEmail {
      get { return welcomeEmail_; }
      set {
        welcomeEmail_ = value;
      }
    }

    /// <summary>Field number for the "welcomeSms" field.</summary>
    public const int WelcomeSmsFieldNumber = 3;
    private global::PKIo.SmsTemplate welcomeSms_;
    /// <summary>
    /// Welcome SMS settings
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.SmsTemplate WelcomeSms {
      get { return welcomeSms_; }
      set {
        welcomeSms_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DistributionSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DistributionSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!distributionChannels_.Equals(other.distributionChannels_)) return false;
      if (!object.Equals(WelcomeEmail, other.WelcomeEmail)) return false;
      if (!object.Equals(WelcomeSms, other.WelcomeSms)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= distributionChannels_.GetHashCode();
      if (welcomeEmail_ != null) hash ^= WelcomeEmail.GetHashCode();
      if (welcomeSms_ != null) hash ^= WelcomeSms.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      distributionChannels_.WriteTo(output, _repeated_distributionChannels_codec);
      if (welcomeEmail_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WelcomeEmail);
      }
      if (welcomeSms_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WelcomeSms);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += distributionChannels_.CalculateSize(_repeated_distributionChannels_codec);
      if (welcomeEmail_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WelcomeEmail);
      }
      if (welcomeSms_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WelcomeSms);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DistributionSettings other) {
      if (other == null) {
        return;
      }
      distributionChannels_.Add(other.distributionChannels_);
      if (other.welcomeEmail_ != null) {
        if (welcomeEmail_ == null) {
          WelcomeEmail = new global::PKIo.EmailTemplate();
        }
        WelcomeEmail.MergeFrom(other.WelcomeEmail);
      }
      if (other.welcomeSms_ != null) {
        if (welcomeSms_ == null) {
          WelcomeSms = new global::PKIo.SmsTemplate();
        }
        WelcomeSms.MergeFrom(other.WelcomeSms);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            distributionChannels_.AddEntriesFrom(input, _repeated_distributionChannels_codec);
            break;
          }
          case 18: {
            if (welcomeEmail_ == null) {
              WelcomeEmail = new global::PKIo.EmailTemplate();
            }
            input.ReadMessage(WelcomeEmail);
            break;
          }
          case 26: {
            if (welcomeSms_ == null) {
              WelcomeSms = new global::PKIo.SmsTemplate();
            }
            input.ReadMessage(WelcomeSms);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// EmailTemplate contains details for sending an email to a customer.
  /// Uses the default PassKit email provider and sending credentials
  /// </summary>
  public sealed partial class EmailTemplate : pb::IMessage<EmailTemplate> {
    private static readonly pb::MessageParser<EmailTemplate> _parser = new pb::MessageParser<EmailTemplate>(() => new EmailTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmailTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.DistributionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailTemplate(EmailTemplate other) : this() {
      subject_ = other.subject_;
      localizedSubject_ = other.localizedSubject_ != null ? other.localizedSubject_.Clone() : null;
      bodyTextContent_ = other.bodyTextContent_;
      localizedBodyTextContent_ = other.localizedBodyTextContent_ != null ? other.localizedBodyTextContent_.Clone() : null;
      bodyHtmlContent_ = other.bodyHtmlContent_;
      localizedBodyHtmlContent_ = other.localizedBodyHtmlContent_ != null ? other.localizedBodyHtmlContent_.Clone() : null;
      configuration_ = other.configuration_ != null ? other.configuration_.Clone() : null;
      buttonText_ = other.buttonText_;
      buttonTextColor_ = other.buttonTextColor_;
      buttonBackgroundColor_ = other.buttonBackgroundColor_;
      buttonBorderRadius_ = other.buttonBorderRadius_;
      footerTextContent_ = other.footerTextContent_;
      localizedFooterTextContent_ = other.localizedFooterTextContent_ != null ? other.localizedFooterTextContent_.Clone() : null;
      footerHtmlContent_ = other.footerHtmlContent_;
      localizedFooterHtmlContent_ = other.localizedFooterHtmlContent_ != null ? other.localizedFooterHtmlContent_.Clone() : null;
      messageBackgroundColor_ = other.messageBackgroundColor_;
      pageBackgroundColor_ = other.pageBackgroundColor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailTemplate Clone() {
      return new EmailTemplate(this);
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 1;
    private string subject_ = "";
    /// <summary>
    /// Subject of the email. Can contain any of the fields from fields array: ${DISPLAY_NAME}, ${EMAIL_ADDRESS}, etc..
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subject_; }
      set {
        subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedSubject" field.</summary>
    public const int LocalizedSubjectFieldNumber = 2;
    private global::PKIo.LocalizedString localizedSubject_;
    /// <summary>
    /// Localized subject of the email. Can contain any of the fields from fields array: ${DISPLAY_NAME}, ${EMAIL_ADDRESS}, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedSubject {
      get { return localizedSubject_; }
      set {
        localizedSubject_ = value;
      }
    }

    /// <summary>Field number for the "bodyTextContent" field.</summary>
    public const int BodyTextContentFieldNumber = 3;
    private string bodyTextContent_ = "";
    /// <summary>
    /// Text content of the email (for email clients that don't support HTML). The body text is rendered above pass install url text. Can contain any of the fields from fields array: ${DISPLAY_NAME}, ${EMAIL_ADDRESS}, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BodyTextContent {
      get { return bodyTextContent_; }
      set {
        bodyTextContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedBodyTextContent" field.</summary>
    public const int LocalizedBodyTextContentFieldNumber = 4;
    private global::PKIo.LocalizedString localizedBodyTextContent_;
    /// <summary>
    /// Localized text content of the email (for email clients that don't support HTML). The body text is rendered above pass install url text. Can contain any of the fields from fields array: ${DISPLAY_NAME}, ${EMAIL_ADDRESS}, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedBodyTextContent {
      get { return localizedBodyTextContent_; }
      set {
        localizedBodyTextContent_ = value;
      }
    }

    /// <summary>Field number for the "bodyHtmlContent" field.</summary>
    public const int BodyHtmlContentFieldNumber = 5;
    private string bodyHtmlContent_ = "";
    /// <summary>
    /// Content for HTML email rendered above the pass install button. Can contain any of the fields from fields array: ${DISPLAY_NAME}, ${EMAIL_ADDRESS}, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BodyHtmlContent {
      get { return bodyHtmlContent_; }
      set {
        bodyHtmlContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedBodyHtmlContent" field.</summary>
    public const int LocalizedBodyHtmlContentFieldNumber = 6;
    private global::PKIo.LocalizedString localizedBodyHtmlContent_;
    /// <summary>
    /// Localized content for HTML email. Can contain any of the fields from fields array: ${DISPLAY_NAME}, ${EMAIL_ADDRESS}, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedBodyHtmlContent {
      get { return localizedBodyHtmlContent_; }
      set {
        localizedBodyHtmlContent_ = value;
      }
    }

    /// <summary>Field number for the "configuration" field.</summary>
    public const int ConfigurationFieldNumber = 7;
    private global::PKIo.EmailConfiguration configuration_;
    /// <summary>
    /// 7 is reserved for custom email SMTP configuration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.EmailConfiguration Configuration {
      get { return configuration_; }
      set {
        configuration_ = value;
      }
    }

    /// <summary>Field number for the "buttonText" field.</summary>
    public const int ButtonTextFieldNumber = 8;
    private string buttonText_ = "";
    /// <summary>
    /// Text of the pass install button.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ButtonText {
      get { return buttonText_; }
      set {
        buttonText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "buttonTextColor" field.</summary>
    public const int ButtonTextColorFieldNumber = 9;
    private string buttonTextColor_ = "";
    /// <summary>
    /// Text color of the pass install button.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ButtonTextColor {
      get { return buttonTextColor_; }
      set {
        buttonTextColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "buttonBackgroundColor" field.</summary>
    public const int ButtonBackgroundColorFieldNumber = 10;
    private string buttonBackgroundColor_ = "";
    /// <summary>
    /// Color of the pass install button.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ButtonBackgroundColor {
      get { return buttonBackgroundColor_; }
      set {
        buttonBackgroundColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "buttonBorderRadius" field.</summary>
    public const int ButtonBorderRadiusFieldNumber = 11;
    private string buttonBorderRadius_ = "";
    /// <summary>
    /// Radius of the pass install button. The unit can be px or %. Default is px.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ButtonBorderRadius {
      get { return buttonBorderRadius_; }
      set {
        buttonBorderRadius_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "footerTextContent" field.</summary>
    public const int FooterTextContentFieldNumber = 12;
    private string footerTextContent_ = "";
    /// <summary>
    /// Footer text content (for email clients that don't support HTML). The footer text is rendered below the pass install url text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FooterTextContent {
      get { return footerTextContent_; }
      set {
        footerTextContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedFooterTextContent" field.</summary>
    public const int LocalizedFooterTextContentFieldNumber = 13;
    private global::PKIo.LocalizedString localizedFooterTextContent_;
    /// <summary>
    /// Localized footer text content (for email clients that don't support HTML). The footer text is rendered below the pass install url text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedFooterTextContent {
      get { return localizedFooterTextContent_; }
      set {
        localizedFooterTextContent_ = value;
      }
    }

    /// <summary>Field number for the "footerHtmlContent" field.</summary>
    public const int FooterHtmlContentFieldNumber = 14;
    private string footerHtmlContent_ = "";
    /// <summary>
    /// Footer HTML content rendered below the pass install button.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FooterHtmlContent {
      get { return footerHtmlContent_; }
      set {
        footerHtmlContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedFooterHtmlContent" field.</summary>
    public const int LocalizedFooterHtmlContentFieldNumber = 15;
    private global::PKIo.LocalizedString localizedFooterHtmlContent_;
    /// <summary>
    /// Localized content for HTML footer content which is rendered below the pass install button.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedFooterHtmlContent {
      get { return localizedFooterHtmlContent_; }
      set {
        localizedFooterHtmlContent_ = value;
      }
    }

    /// <summary>Field number for the "messageBackgroundColor" field.</summary>
    public const int MessageBackgroundColorFieldNumber = 16;
    private string messageBackgroundColor_ = "";
    /// <summary>
    /// Background color for the message content section.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MessageBackgroundColor {
      get { return messageBackgroundColor_; }
      set {
        messageBackgroundColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pageBackgroundColor" field.</summary>
    public const int PageBackgroundColorFieldNumber = 17;
    private string pageBackgroundColor_ = "";
    /// <summary>
    /// Background color for the margin space surrounding the message content. This setting is relevant for PC viewers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageBackgroundColor {
      get { return pageBackgroundColor_; }
      set {
        pageBackgroundColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmailTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmailTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subject != other.Subject) return false;
      if (!object.Equals(LocalizedSubject, other.LocalizedSubject)) return false;
      if (BodyTextContent != other.BodyTextContent) return false;
      if (!object.Equals(LocalizedBodyTextContent, other.LocalizedBodyTextContent)) return false;
      if (BodyHtmlContent != other.BodyHtmlContent) return false;
      if (!object.Equals(LocalizedBodyHtmlContent, other.LocalizedBodyHtmlContent)) return false;
      if (!object.Equals(Configuration, other.Configuration)) return false;
      if (ButtonText != other.ButtonText) return false;
      if (ButtonTextColor != other.ButtonTextColor) return false;
      if (ButtonBackgroundColor != other.ButtonBackgroundColor) return false;
      if (ButtonBorderRadius != other.ButtonBorderRadius) return false;
      if (FooterTextContent != other.FooterTextContent) return false;
      if (!object.Equals(LocalizedFooterTextContent, other.LocalizedFooterTextContent)) return false;
      if (FooterHtmlContent != other.FooterHtmlContent) return false;
      if (!object.Equals(LocalizedFooterHtmlContent, other.LocalizedFooterHtmlContent)) return false;
      if (MessageBackgroundColor != other.MessageBackgroundColor) return false;
      if (PageBackgroundColor != other.PageBackgroundColor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Subject.Length != 0) hash ^= Subject.GetHashCode();
      if (localizedSubject_ != null) hash ^= LocalizedSubject.GetHashCode();
      if (BodyTextContent.Length != 0) hash ^= BodyTextContent.GetHashCode();
      if (localizedBodyTextContent_ != null) hash ^= LocalizedBodyTextContent.GetHashCode();
      if (BodyHtmlContent.Length != 0) hash ^= BodyHtmlContent.GetHashCode();
      if (localizedBodyHtmlContent_ != null) hash ^= LocalizedBodyHtmlContent.GetHashCode();
      if (configuration_ != null) hash ^= Configuration.GetHashCode();
      if (ButtonText.Length != 0) hash ^= ButtonText.GetHashCode();
      if (ButtonTextColor.Length != 0) hash ^= ButtonTextColor.GetHashCode();
      if (ButtonBackgroundColor.Length != 0) hash ^= ButtonBackgroundColor.GetHashCode();
      if (ButtonBorderRadius.Length != 0) hash ^= ButtonBorderRadius.GetHashCode();
      if (FooterTextContent.Length != 0) hash ^= FooterTextContent.GetHashCode();
      if (localizedFooterTextContent_ != null) hash ^= LocalizedFooterTextContent.GetHashCode();
      if (FooterHtmlContent.Length != 0) hash ^= FooterHtmlContent.GetHashCode();
      if (localizedFooterHtmlContent_ != null) hash ^= LocalizedFooterHtmlContent.GetHashCode();
      if (MessageBackgroundColor.Length != 0) hash ^= MessageBackgroundColor.GetHashCode();
      if (PageBackgroundColor.Length != 0) hash ^= PageBackgroundColor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Subject.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Subject);
      }
      if (localizedSubject_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LocalizedSubject);
      }
      if (BodyTextContent.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BodyTextContent);
      }
      if (localizedBodyTextContent_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocalizedBodyTextContent);
      }
      if (BodyHtmlContent.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BodyHtmlContent);
      }
      if (localizedBodyHtmlContent_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LocalizedBodyHtmlContent);
      }
      if (configuration_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Configuration);
      }
      if (ButtonText.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ButtonText);
      }
      if (ButtonTextColor.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ButtonTextColor);
      }
      if (ButtonBackgroundColor.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ButtonBackgroundColor);
      }
      if (ButtonBorderRadius.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ButtonBorderRadius);
      }
      if (FooterTextContent.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(FooterTextContent);
      }
      if (localizedFooterTextContent_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(LocalizedFooterTextContent);
      }
      if (FooterHtmlContent.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(FooterHtmlContent);
      }
      if (localizedFooterHtmlContent_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(LocalizedFooterHtmlContent);
      }
      if (MessageBackgroundColor.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(MessageBackgroundColor);
      }
      if (PageBackgroundColor.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(PageBackgroundColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Subject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (localizedSubject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedSubject);
      }
      if (BodyTextContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BodyTextContent);
      }
      if (localizedBodyTextContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedBodyTextContent);
      }
      if (BodyHtmlContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BodyHtmlContent);
      }
      if (localizedBodyHtmlContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedBodyHtmlContent);
      }
      if (configuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Configuration);
      }
      if (ButtonText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ButtonText);
      }
      if (ButtonTextColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ButtonTextColor);
      }
      if (ButtonBackgroundColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ButtonBackgroundColor);
      }
      if (ButtonBorderRadius.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ButtonBorderRadius);
      }
      if (FooterTextContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FooterTextContent);
      }
      if (localizedFooterTextContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedFooterTextContent);
      }
      if (FooterHtmlContent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FooterHtmlContent);
      }
      if (localizedFooterHtmlContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedFooterHtmlContent);
      }
      if (MessageBackgroundColor.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MessageBackgroundColor);
      }
      if (PageBackgroundColor.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PageBackgroundColor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmailTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Subject.Length != 0) {
        Subject = other.Subject;
      }
      if (other.localizedSubject_ != null) {
        if (localizedSubject_ == null) {
          LocalizedSubject = new global::PKIo.LocalizedString();
        }
        LocalizedSubject.MergeFrom(other.LocalizedSubject);
      }
      if (other.BodyTextContent.Length != 0) {
        BodyTextContent = other.BodyTextContent;
      }
      if (other.localizedBodyTextContent_ != null) {
        if (localizedBodyTextContent_ == null) {
          LocalizedBodyTextContent = new global::PKIo.LocalizedString();
        }
        LocalizedBodyTextContent.MergeFrom(other.LocalizedBodyTextContent);
      }
      if (other.BodyHtmlContent.Length != 0) {
        BodyHtmlContent = other.BodyHtmlContent;
      }
      if (other.localizedBodyHtmlContent_ != null) {
        if (localizedBodyHtmlContent_ == null) {
          LocalizedBodyHtmlContent = new global::PKIo.LocalizedString();
        }
        LocalizedBodyHtmlContent.MergeFrom(other.LocalizedBodyHtmlContent);
      }
      if (other.configuration_ != null) {
        if (configuration_ == null) {
          Configuration = new global::PKIo.EmailConfiguration();
        }
        Configuration.MergeFrom(other.Configuration);
      }
      if (other.ButtonText.Length != 0) {
        ButtonText = other.ButtonText;
      }
      if (other.ButtonTextColor.Length != 0) {
        ButtonTextColor = other.ButtonTextColor;
      }
      if (other.ButtonBackgroundColor.Length != 0) {
        ButtonBackgroundColor = other.ButtonBackgroundColor;
      }
      if (other.ButtonBorderRadius.Length != 0) {
        ButtonBorderRadius = other.ButtonBorderRadius;
      }
      if (other.FooterTextContent.Length != 0) {
        FooterTextContent = other.FooterTextContent;
      }
      if (other.localizedFooterTextContent_ != null) {
        if (localizedFooterTextContent_ == null) {
          LocalizedFooterTextContent = new global::PKIo.LocalizedString();
        }
        LocalizedFooterTextContent.MergeFrom(other.LocalizedFooterTextContent);
      }
      if (other.FooterHtmlContent.Length != 0) {
        FooterHtmlContent = other.FooterHtmlContent;
      }
      if (other.localizedFooterHtmlContent_ != null) {
        if (localizedFooterHtmlContent_ == null) {
          LocalizedFooterHtmlContent = new global::PKIo.LocalizedString();
        }
        LocalizedFooterHtmlContent.MergeFrom(other.LocalizedFooterHtmlContent);
      }
      if (other.MessageBackgroundColor.Length != 0) {
        MessageBackgroundColor = other.MessageBackgroundColor;
      }
      if (other.PageBackgroundColor.Length != 0) {
        PageBackgroundColor = other.PageBackgroundColor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Subject = input.ReadString();
            break;
          }
          case 18: {
            if (localizedSubject_ == null) {
              LocalizedSubject = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedSubject);
            break;
          }
          case 26: {
            BodyTextContent = input.ReadString();
            break;
          }
          case 34: {
            if (localizedBodyTextContent_ == null) {
              LocalizedBodyTextContent = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedBodyTextContent);
            break;
          }
          case 42: {
            BodyHtmlContent = input.ReadString();
            break;
          }
          case 50: {
            if (localizedBodyHtmlContent_ == null) {
              LocalizedBodyHtmlContent = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedBodyHtmlContent);
            break;
          }
          case 58: {
            if (configuration_ == null) {
              Configuration = new global::PKIo.EmailConfiguration();
            }
            input.ReadMessage(Configuration);
            break;
          }
          case 66: {
            ButtonText = input.ReadString();
            break;
          }
          case 74: {
            ButtonTextColor = input.ReadString();
            break;
          }
          case 82: {
            ButtonBackgroundColor = input.ReadString();
            break;
          }
          case 90: {
            ButtonBorderRadius = input.ReadString();
            break;
          }
          case 98: {
            FooterTextContent = input.ReadString();
            break;
          }
          case 106: {
            if (localizedFooterTextContent_ == null) {
              LocalizedFooterTextContent = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedFooterTextContent);
            break;
          }
          case 114: {
            FooterHtmlContent = input.ReadString();
            break;
          }
          case 122: {
            if (localizedFooterHtmlContent_ == null) {
              LocalizedFooterHtmlContent = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedFooterHtmlContent);
            break;
          }
          case 130: {
            MessageBackgroundColor = input.ReadString();
            break;
          }
          case 138: {
            PageBackgroundColor = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmailConfiguration : pb::IMessage<EmailConfiguration> {
    private static readonly pb::MessageParser<EmailConfiguration> _parser = new pb::MessageParser<EmailConfiguration>(() => new EmailConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmailConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.DistributionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailConfiguration(EmailConfiguration other) : this() {
      emailFrom_ = other.emailFrom_;
      emailFromName_ = other.emailFromName_;
      emailFromVerifiedForSending_ = other.emailFromVerifiedForSending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailConfiguration Clone() {
      return new EmailConfiguration(this);
    }

    /// <summary>Field number for the "emailFrom" field.</summary>
    public const int EmailFromFieldNumber = 1;
    private string emailFrom_ = "";
    /// <summary>
    /// Sender's email address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EmailFrom {
      get { return emailFrom_; }
      set {
        emailFrom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "emailFromName" field.</summary>
    public const int EmailFromNameFieldNumber = 2;
    private string emailFromName_ = "";
    /// <summary>
    /// Sender's company / organization name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EmailFromName {
      get { return emailFromName_; }
      set {
        emailFromName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EmailFromVerifiedForSending" field.</summary>
    public const int EmailFromVerifiedForSendingFieldNumber = 3;
    private bool emailFromVerifiedForSending_;
    /// <summary>
    /// Indicates that PassKit is authorized to send from the emailFrom address (either via AWS or Google Cloud)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EmailFromVerifiedForSending {
      get { return emailFromVerifiedForSending_; }
      set {
        emailFromVerifiedForSending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmailConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmailConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EmailFrom != other.EmailFrom) return false;
      if (EmailFromName != other.EmailFromName) return false;
      if (EmailFromVerifiedForSending != other.EmailFromVerifiedForSending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EmailFrom.Length != 0) hash ^= EmailFrom.GetHashCode();
      if (EmailFromName.Length != 0) hash ^= EmailFromName.GetHashCode();
      if (EmailFromVerifiedForSending != false) hash ^= EmailFromVerifiedForSending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EmailFrom.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EmailFrom);
      }
      if (EmailFromName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EmailFromName);
      }
      if (EmailFromVerifiedForSending != false) {
        output.WriteRawTag(24);
        output.WriteBool(EmailFromVerifiedForSending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EmailFrom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailFrom);
      }
      if (EmailFromName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailFromName);
      }
      if (EmailFromVerifiedForSending != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmailConfiguration other) {
      if (other == null) {
        return;
      }
      if (other.EmailFrom.Length != 0) {
        EmailFrom = other.EmailFrom;
      }
      if (other.EmailFromName.Length != 0) {
        EmailFromName = other.EmailFromName;
      }
      if (other.EmailFromVerifiedForSending != false) {
        EmailFromVerifiedForSending = other.EmailFromVerifiedForSending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EmailFrom = input.ReadString();
            break;
          }
          case 18: {
            EmailFromName = input.ReadString();
            break;
          }
          case 24: {
            EmailFromVerifiedForSending = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SMS contains details for a sending an sms to customers.
  /// Uses the default PassKit SMS provider and sending credentials.
  /// </summary>
  public sealed partial class SmsTemplate : pb::IMessage<SmsTemplate> {
    private static readonly pb::MessageParser<SmsTemplate> _parser = new pb::MessageParser<SmsTemplate>(() => new SmsTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SmsTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.DistributionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmsTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmsTemplate(SmsTemplate other) : this() {
      content_ = other.content_;
      localizedContent_ = other.localizedContent_ != null ? other.localizedContent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmsTemplate Clone() {
      return new SmsTemplate(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    private string content_ = "";
    /// <summary>
    /// content of the SMS; needs to be limited to 70 unicode characters. Can contain any of the fields from fields array: ${DISPLAY_NAME}, ${EMAIL_ADDRESS}, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedContent" field.</summary>
    public const int LocalizedContentFieldNumber = 2;
    private global::PKIo.LocalizedString localizedContent_;
    /// <summary>
    /// localized content of the SMS; needs to be limited to 70 unicode characters. Can contain any of the fields from fields array: ${DISPLAY_NAME}, ${EMAIL_ADDRESS}, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.LocalizedString LocalizedContent {
      get { return localizedContent_; }
      set {
        localizedContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SmsTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SmsTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if (!object.Equals(LocalizedContent, other.LocalizedContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (localizedContent_ != null) hash ^= LocalizedContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Content.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Content);
      }
      if (localizedContent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LocalizedContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (localizedContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SmsTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.localizedContent_ != null) {
        if (localizedContent_ == null) {
          LocalizedContent = new global::PKIo.LocalizedString();
        }
        LocalizedContent.MergeFrom(other.LocalizedContent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadString();
            break;
          }
          case 18: {
            if (localizedContent_ == null) {
              LocalizedContent = new global::PKIo.LocalizedString();
            }
            input.ReadMessage(LocalizedContent);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
