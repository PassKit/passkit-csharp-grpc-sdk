// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/common/job.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PKIo {

  /// <summary>Holder for reflection information generated from io/common/job.proto</summary>
  public static partial class JobReflection {

    #region Descriptor
    /// <summary>File descriptor for io/common/job.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static JobReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNpby9jb21tb24vam9iLnByb3RvEgJpbxoZaW8vY29tbW9uL3Byb3RvY29s",
            "cy5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byK3AwoD",
            "Sm9iEgoKAmlkGAEgASgJEhAKCHVzZXJuYW1lGAIgASgJEiIKCHByb3RvY29s",
            "GAMgASgOMhAuaW8uUGFzc1Byb3RvY29sEh0KBnN0YXR1cxgEIAEoDjINLmlv",
            "LkpvYlN0YXR1cxIZCgR0eXBlGAUgASgOMgsuaW8uSm9iVHlwZRIeCghzY2hl",
            "ZHVsZRgGIAEoCzIMLmlvLlNjaGVkdWxlEisKB2NyZWF0ZWQYByABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEisKB3VwZGF0ZWQYCCABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGZpcnN0UnVuGAkgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghmaW5hbFJ1bhgKIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoHbmV4dFJ1bhgLIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoHbGFzdFJ1bhgMIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBKBAgNEA4ingIKDENvbXBsZXRl",
            "ZEpvYhIKCgJpZBgBIAEoCRILCgNjaWQYAiABKAkSCwoDdWlkGAMgASgJEiIK",
            "CHByb3RvY29sGAQgASgOMhAuaW8uUGFzc1Byb3RvY29sEhkKBHR5cGUYBSAB",
            "KA4yCy5pby5Kb2JUeXBlEh0KBnN0YXR1cxgGIAEoDjINLmlvLkpvYlN0YXR1",
            "cxIPCgdkZXRhaWxzGAcgASgJEi0KCWNvbXBsZXRlZBgIIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5UaW1lc3RhbXASNAoSY29tcGxldGVkQ3N2SW1wb3J0GAkg",
            "ASgLMhYuaW8uQ29tcGxldGVkQ3N2SW1wb3J0SABCFAoSQ29tcGxldGVkSm9i",
            "T3V0cHV0IiUKEkNvbXBsZXRlZENzdkltcG9ydBIPCgdmaWxlVXJsGAEgASgJ",
            "IqUBCghTY2hlZHVsZRIXCg9jcm9uVGFiU2NoZWR1bGUYASABKAkSEQoJcmVw",
            "ZWF0aW5nGAIgASgIEhAKCHRpbWV6b25lGAMgASgJEi0KCXN0YXJ0VGltZRgE",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoIcnVuVW50aWwY",
            "BSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIloKEENzdkltcG9y",
            "dFJlcXVlc3QSDwoHY2xhc3NJZBgBIAEoCRIiCghwcm90b2NvbBgCIAEoDjIQ",
            "LmlvLlBhc3NQcm90b2NvbBIRCglmaWxlQnl0ZXMYAyABKAwqcQoJSm9iU3Rh",
            "dHVzEhEKDUpPQl9TQ0hFRFVMRUQQABIPCgtKT0JfUlVOTklORxABEg4KCkpP",
            "Ql9QQVVTRUQQAhIRCg1KT0JfQ09NUExFVEVEEAMSHQoZSk9CX0NPTVBMRVRF",
            "RF9XSVRIX0VSUk9SUxAEKjEKB0pvYlR5cGUSEgoOSk9CX0NTVl9JTVBPUlQQ",
            "ABISCg5KT0JfQ1NWX0VYUE9SVBABQj4KD2lvLnBhc3NraXQuUEtpb1okc3Rh",
            "c2gucGFzc2tpdC5jb20vaW8vbW9kZWwvc2RrL2dvL2lvqgIEUEtJb2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PKIo.ProtocolsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PKIo.JobStatus), typeof(global::PKIo.JobType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.Job), global::PKIo.Job.Parser, new[]{ "Id", "Username", "Protocol", "Status", "Type", "Schedule", "Created", "Updated", "FirstRun", "FinalRun", "NextRun", "LastRun" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.CompletedJob), global::PKIo.CompletedJob.Parser, new[]{ "Id", "Cid", "Uid", "Protocol", "Type", "Status", "Details", "Completed", "CompletedCsvImport" }, new[]{ "CompletedJobOutput" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.CompletedCsvImport), global::PKIo.CompletedCsvImport.Parser, new[]{ "FileUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.Schedule), global::PKIo.Schedule.Parser, new[]{ "CronTabSchedule", "Repeating", "Timezone", "StartTime", "RunUntil" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.CsvImportRequest), global::PKIo.CsvImportRequest.Parser, new[]{ "ClassId", "Protocol", "FileBytes" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum JobStatus {
    [pbr::OriginalName("JOB_SCHEDULED")] JobScheduled = 0,
    [pbr::OriginalName("JOB_RUNNING")] JobRunning = 1,
    [pbr::OriginalName("JOB_PAUSED")] JobPaused = 2,
    [pbr::OriginalName("JOB_COMPLETED")] JobCompleted = 3,
    [pbr::OriginalName("JOB_COMPLETED_WITH_ERRORS")] JobCompletedWithErrors = 4,
  }

  public enum JobType {
    [pbr::OriginalName("JOB_CSV_IMPORT")] JobCsvImport = 0,
    [pbr::OriginalName("JOB_CSV_EXPORT")] JobCsvExport = 1,
  }

  #endregion

  #region Messages
  public sealed partial class Job : pb::IMessage<Job> {
    private static readonly pb::MessageParser<Job> _parser = new pb::MessageParser<Job>(() => new Job());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Job> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.JobReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Job() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Job(Job other) : this() {
      id_ = other.id_;
      username_ = other.username_;
      protocol_ = other.protocol_;
      status_ = other.status_;
      type_ = other.type_;
      schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
      created_ = other.created_ != null ? other.created_.Clone() : null;
      updated_ = other.updated_ != null ? other.updated_.Clone() : null;
      firstRun_ = other.firstRun_ != null ? other.firstRun_.Clone() : null;
      finalRun_ = other.finalRun_ != null ? other.finalRun_.Clone() : null;
      nextRun_ = other.nextRun_ != null ? other.nextRun_.Clone() : null;
      lastRun_ = other.lastRun_ != null ? other.lastRun_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Job Clone() {
      return new Job(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Auto generated 22 char identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    /// <summary>
    /// The username of the user that requested the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 3;
    private global::PKIo.PassProtocol protocol_ = global::PKIo.PassProtocol.DoNotUse;
    /// <summary>
    /// The protocol of the associated resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.PassProtocol Protocol {
      get { return protocol_; }
      set {
        protocol_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::PKIo.JobStatus status_ = global::PKIo.JobStatus.JobScheduled;
    /// <summary>
    /// The status of the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.JobStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::PKIo.JobType type_ = global::PKIo.JobType.JobCsvImport;
    /// <summary>
    /// The type of job running.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.JobType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 6;
    private global::PKIo.Schedule schedule_;
    /// <summary>
    /// Defines the recurrence schedule of the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.Schedule Schedule {
      get { return schedule_; }
      set {
        schedule_ = value;
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// The date the job was created in the PassKit system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updated_;
    /// <summary>
    /// The date the job was updated in the PassKit system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    /// <summary>Field number for the "firstRun" field.</summary>
    public const int FirstRunFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp firstRun_;
    /// <summary>
    /// The date the job will run for the first time in the PassKit system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FirstRun {
      get { return firstRun_; }
      set {
        firstRun_ = value;
      }
    }

    /// <summary>Field number for the "finalRun" field.</summary>
    public const int FinalRunFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp finalRun_;
    /// <summary>
    /// The date the job will run for the last time in the PassKit system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FinalRun {
      get { return finalRun_; }
      set {
        finalRun_ = value;
      }
    }

    /// <summary>Field number for the "nextRun" field.</summary>
    public const int NextRunFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp nextRun_;
    /// <summary>
    /// The date the job will run next in the PassKit system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp NextRun {
      get { return nextRun_; }
      set {
        nextRun_ = value;
      }
    }

    /// <summary>Field number for the "lastRun" field.</summary>
    public const int LastRunFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastRun_;
    /// <summary>
    /// The date the job was last run in the PassKit system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastRun {
      get { return lastRun_; }
      set {
        lastRun_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Job);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Job other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Username != other.Username) return false;
      if (Protocol != other.Protocol) return false;
      if (Status != other.Status) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(Schedule, other.Schedule)) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (!object.Equals(Updated, other.Updated)) return false;
      if (!object.Equals(FirstRun, other.FirstRun)) return false;
      if (!object.Equals(FinalRun, other.FinalRun)) return false;
      if (!object.Equals(NextRun, other.NextRun)) return false;
      if (!object.Equals(LastRun, other.LastRun)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Protocol != global::PKIo.PassProtocol.DoNotUse) hash ^= Protocol.GetHashCode();
      if (Status != global::PKIo.JobStatus.JobScheduled) hash ^= Status.GetHashCode();
      if (Type != global::PKIo.JobType.JobCsvImport) hash ^= Type.GetHashCode();
      if (schedule_ != null) hash ^= Schedule.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (updated_ != null) hash ^= Updated.GetHashCode();
      if (firstRun_ != null) hash ^= FirstRun.GetHashCode();
      if (finalRun_ != null) hash ^= FinalRun.GetHashCode();
      if (nextRun_ != null) hash ^= NextRun.GetHashCode();
      if (lastRun_ != null) hash ^= LastRun.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Protocol != global::PKIo.PassProtocol.DoNotUse) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Protocol);
      }
      if (Status != global::PKIo.JobStatus.JobScheduled) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (Type != global::PKIo.JobType.JobCsvImport) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (schedule_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Schedule);
      }
      if (created_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Updated);
      }
      if (firstRun_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(FirstRun);
      }
      if (finalRun_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(FinalRun);
      }
      if (nextRun_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(NextRun);
      }
      if (lastRun_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(LastRun);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Protocol != global::PKIo.PassProtocol.DoNotUse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
      }
      if (Status != global::PKIo.JobStatus.JobScheduled) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Type != global::PKIo.JobType.JobCsvImport) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (schedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
      }
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (updated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Updated);
      }
      if (firstRun_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FirstRun);
      }
      if (finalRun_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinalRun);
      }
      if (nextRun_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextRun);
      }
      if (lastRun_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastRun);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Job other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Protocol != global::PKIo.PassProtocol.DoNotUse) {
        Protocol = other.Protocol;
      }
      if (other.Status != global::PKIo.JobStatus.JobScheduled) {
        Status = other.Status;
      }
      if (other.Type != global::PKIo.JobType.JobCsvImport) {
        Type = other.Type;
      }
      if (other.schedule_ != null) {
        if (schedule_ == null) {
          Schedule = new global::PKIo.Schedule();
        }
        Schedule.MergeFrom(other.Schedule);
      }
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      if (other.updated_ != null) {
        if (updated_ == null) {
          Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Updated.MergeFrom(other.Updated);
      }
      if (other.firstRun_ != null) {
        if (firstRun_ == null) {
          FirstRun = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FirstRun.MergeFrom(other.FirstRun);
      }
      if (other.finalRun_ != null) {
        if (finalRun_ == null) {
          FinalRun = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FinalRun.MergeFrom(other.FinalRun);
      }
      if (other.nextRun_ != null) {
        if (nextRun_ == null) {
          NextRun = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        NextRun.MergeFrom(other.NextRun);
      }
      if (other.lastRun_ != null) {
        if (lastRun_ == null) {
          LastRun = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastRun.MergeFrom(other.LastRun);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 24: {
            Protocol = (global::PKIo.PassProtocol) input.ReadEnum();
            break;
          }
          case 32: {
            Status = (global::PKIo.JobStatus) input.ReadEnum();
            break;
          }
          case 40: {
            Type = (global::PKIo.JobType) input.ReadEnum();
            break;
          }
          case 50: {
            if (schedule_ == null) {
              Schedule = new global::PKIo.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
          case 58: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 66: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
          case 74: {
            if (firstRun_ == null) {
              FirstRun = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FirstRun);
            break;
          }
          case 82: {
            if (finalRun_ == null) {
              FinalRun = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FinalRun);
            break;
          }
          case 90: {
            if (nextRun_ == null) {
              NextRun = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NextRun);
            break;
          }
          case 98: {
            if (lastRun_ == null) {
              LastRun = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastRun);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompletedJob : pb::IMessage<CompletedJob> {
    private static readonly pb::MessageParser<CompletedJob> _parser = new pb::MessageParser<CompletedJob>(() => new CompletedJob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompletedJob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.JobReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletedJob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletedJob(CompletedJob other) : this() {
      id_ = other.id_;
      cid_ = other.cid_;
      uid_ = other.uid_;
      protocol_ = other.protocol_;
      type_ = other.type_;
      status_ = other.status_;
      details_ = other.details_;
      completed_ = other.completed_ != null ? other.completed_.Clone() : null;
      switch (other.CompletedJobOutputCase) {
        case CompletedJobOutputOneofCase.CompletedCsvImport:
          CompletedCsvImport = other.CompletedCsvImport.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletedJob Clone() {
      return new CompletedJob(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Auto generated 22 char identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 2;
    private string cid_ = "";
    /// <summary>
    /// The company id of the user that requested the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cid {
      get { return cid_; }
      set {
        cid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private string uid_ = "";
    /// <summary>
    /// The user id of the user that requested the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 4;
    private global::PKIo.PassProtocol protocol_ = global::PKIo.PassProtocol.DoNotUse;
    /// <summary>
    /// The protocol of the associated resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.PassProtocol Protocol {
      get { return protocol_; }
      set {
        protocol_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::PKIo.JobType type_ = global::PKIo.JobType.JobCsvImport;
    /// <summary>
    /// The type of job completed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.JobType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private global::PKIo.JobStatus status_ = global::PKIo.JobStatus.JobScheduled;
    /// <summary>
    /// The status of the completed Job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.JobStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 7;
    private string details_ = "";
    /// <summary>
    /// Any details about the Job that are relevant to the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Details {
      get { return details_; }
      set {
        details_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "completed" field.</summary>
    public const int CompletedFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp completed_;
    /// <summary>
    /// The date the job was completed in the PassKit system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    /// <summary>Field number for the "completedCsvImport" field.</summary>
    public const int CompletedCsvImportFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.CompletedCsvImport CompletedCsvImport {
      get { return completedJobOutputCase_ == CompletedJobOutputOneofCase.CompletedCsvImport ? (global::PKIo.CompletedCsvImport) completedJobOutput_ : null; }
      set {
        completedJobOutput_ = value;
        completedJobOutputCase_ = value == null ? CompletedJobOutputOneofCase.None : CompletedJobOutputOneofCase.CompletedCsvImport;
      }
    }

    private object completedJobOutput_;
    /// <summary>Enum of possible cases for the "CompletedJobOutput" oneof.</summary>
    public enum CompletedJobOutputOneofCase {
      None = 0,
      CompletedCsvImport = 9,
    }
    private CompletedJobOutputOneofCase completedJobOutputCase_ = CompletedJobOutputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletedJobOutputOneofCase CompletedJobOutputCase {
      get { return completedJobOutputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompletedJobOutput() {
      completedJobOutputCase_ = CompletedJobOutputOneofCase.None;
      completedJobOutput_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompletedJob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompletedJob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Cid != other.Cid) return false;
      if (Uid != other.Uid) return false;
      if (Protocol != other.Protocol) return false;
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      if (Details != other.Details) return false;
      if (!object.Equals(Completed, other.Completed)) return false;
      if (!object.Equals(CompletedCsvImport, other.CompletedCsvImport)) return false;
      if (CompletedJobOutputCase != other.CompletedJobOutputCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Cid.Length != 0) hash ^= Cid.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Protocol != global::PKIo.PassProtocol.DoNotUse) hash ^= Protocol.GetHashCode();
      if (Type != global::PKIo.JobType.JobCsvImport) hash ^= Type.GetHashCode();
      if (Status != global::PKIo.JobStatus.JobScheduled) hash ^= Status.GetHashCode();
      if (Details.Length != 0) hash ^= Details.GetHashCode();
      if (completed_ != null) hash ^= Completed.GetHashCode();
      if (completedJobOutputCase_ == CompletedJobOutputOneofCase.CompletedCsvImport) hash ^= CompletedCsvImport.GetHashCode();
      hash ^= (int) completedJobOutputCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Cid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cid);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (Protocol != global::PKIo.PassProtocol.DoNotUse) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Protocol);
      }
      if (Type != global::PKIo.JobType.JobCsvImport) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (Status != global::PKIo.JobStatus.JobScheduled) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (Details.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Details);
      }
      if (completed_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Completed);
      }
      if (completedJobOutputCase_ == CompletedJobOutputOneofCase.CompletedCsvImport) {
        output.WriteRawTag(74);
        output.WriteMessage(CompletedCsvImport);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Cid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cid);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Protocol != global::PKIo.PassProtocol.DoNotUse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
      }
      if (Type != global::PKIo.JobType.JobCsvImport) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Status != global::PKIo.JobStatus.JobScheduled) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Details.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Details);
      }
      if (completed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Completed);
      }
      if (completedJobOutputCase_ == CompletedJobOutputOneofCase.CompletedCsvImport) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompletedCsvImport);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompletedJob other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Cid.Length != 0) {
        Cid = other.Cid;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Protocol != global::PKIo.PassProtocol.DoNotUse) {
        Protocol = other.Protocol;
      }
      if (other.Type != global::PKIo.JobType.JobCsvImport) {
        Type = other.Type;
      }
      if (other.Status != global::PKIo.JobStatus.JobScheduled) {
        Status = other.Status;
      }
      if (other.Details.Length != 0) {
        Details = other.Details;
      }
      if (other.completed_ != null) {
        if (completed_ == null) {
          Completed = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Completed.MergeFrom(other.Completed);
      }
      switch (other.CompletedJobOutputCase) {
        case CompletedJobOutputOneofCase.CompletedCsvImport:
          if (CompletedCsvImport == null) {
            CompletedCsvImport = new global::PKIo.CompletedCsvImport();
          }
          CompletedCsvImport.MergeFrom(other.CompletedCsvImport);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Cid = input.ReadString();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
          case 32: {
            Protocol = (global::PKIo.PassProtocol) input.ReadEnum();
            break;
          }
          case 40: {
            Type = (global::PKIo.JobType) input.ReadEnum();
            break;
          }
          case 48: {
            Status = (global::PKIo.JobStatus) input.ReadEnum();
            break;
          }
          case 58: {
            Details = input.ReadString();
            break;
          }
          case 66: {
            if (completed_ == null) {
              Completed = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Completed);
            break;
          }
          case 74: {
            global::PKIo.CompletedCsvImport subBuilder = new global::PKIo.CompletedCsvImport();
            if (completedJobOutputCase_ == CompletedJobOutputOneofCase.CompletedCsvImport) {
              subBuilder.MergeFrom(CompletedCsvImport);
            }
            input.ReadMessage(subBuilder);
            CompletedCsvImport = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompletedCsvImport : pb::IMessage<CompletedCsvImport> {
    private static readonly pb::MessageParser<CompletedCsvImport> _parser = new pb::MessageParser<CompletedCsvImport>(() => new CompletedCsvImport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompletedCsvImport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.JobReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletedCsvImport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletedCsvImport(CompletedCsvImport other) : this() {
      fileUrl_ = other.fileUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompletedCsvImport Clone() {
      return new CompletedCsvImport(this);
    }

    /// <summary>Field number for the "fileUrl" field.</summary>
    public const int FileUrlFieldNumber = 1;
    private string fileUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileUrl {
      get { return fileUrl_; }
      set {
        fileUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompletedCsvImport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompletedCsvImport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileUrl != other.FileUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileUrl.Length != 0) hash ^= FileUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FileUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompletedCsvImport other) {
      if (other == null) {
        return;
      }
      if (other.FileUrl.Length != 0) {
        FileUrl = other.FileUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Schedule : pb::IMessage<Schedule> {
    private static readonly pb::MessageParser<Schedule> _parser = new pb::MessageParser<Schedule>(() => new Schedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Schedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.JobReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule(Schedule other) : this() {
      cronTabSchedule_ = other.cronTabSchedule_;
      repeating_ = other.repeating_;
      timezone_ = other.timezone_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      runUntil_ = other.runUntil_ != null ? other.runUntil_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule Clone() {
      return new Schedule(this);
    }

    /// <summary>Field number for the "cronTabSchedule" field.</summary>
    public const int CronTabScheduleFieldNumber = 1;
    private string cronTabSchedule_ = "";
    /// <summary>
    /// Defines the recurrence of the job in cronTab format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CronTabSchedule {
      get { return cronTabSchedule_; }
      set {
        cronTabSchedule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "repeating" field.</summary>
    public const int RepeatingFieldNumber = 2;
    private bool repeating_;
    /// <summary>
    /// If the job repeats.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Repeating {
      get { return repeating_; }
      set {
        repeating_ = value;
      }
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 3;
    private string timezone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Timezone {
      get { return timezone_; }
      set {
        timezone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The time the job should start.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "runUntil" field.</summary>
    public const int RunUntilFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp runUntil_;
    /// <summary>
    /// Optional time when the job will stop.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RunUntil {
      get { return runUntil_; }
      set {
        runUntil_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Schedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Schedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CronTabSchedule != other.CronTabSchedule) return false;
      if (Repeating != other.Repeating) return false;
      if (Timezone != other.Timezone) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(RunUntil, other.RunUntil)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CronTabSchedule.Length != 0) hash ^= CronTabSchedule.GetHashCode();
      if (Repeating != false) hash ^= Repeating.GetHashCode();
      if (Timezone.Length != 0) hash ^= Timezone.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (runUntil_ != null) hash ^= RunUntil.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CronTabSchedule.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CronTabSchedule);
      }
      if (Repeating != false) {
        output.WriteRawTag(16);
        output.WriteBool(Repeating);
      }
      if (Timezone.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Timezone);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (runUntil_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RunUntil);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CronTabSchedule.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CronTabSchedule);
      }
      if (Repeating != false) {
        size += 1 + 1;
      }
      if (Timezone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timezone);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (runUntil_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RunUntil);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Schedule other) {
      if (other == null) {
        return;
      }
      if (other.CronTabSchedule.Length != 0) {
        CronTabSchedule = other.CronTabSchedule;
      }
      if (other.Repeating != false) {
        Repeating = other.Repeating;
      }
      if (other.Timezone.Length != 0) {
        Timezone = other.Timezone;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.runUntil_ != null) {
        if (runUntil_ == null) {
          RunUntil = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RunUntil.MergeFrom(other.RunUntil);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CronTabSchedule = input.ReadString();
            break;
          }
          case 16: {
            Repeating = input.ReadBool();
            break;
          }
          case 26: {
            Timezone = input.ReadString();
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (runUntil_ == null) {
              RunUntil = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RunUntil);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CsvImportRequest : pb::IMessage<CsvImportRequest> {
    private static readonly pb::MessageParser<CsvImportRequest> _parser = new pb::MessageParser<CsvImportRequest>(() => new CsvImportRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CsvImportRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.JobReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CsvImportRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CsvImportRequest(CsvImportRequest other) : this() {
      classId_ = other.classId_;
      protocol_ = other.protocol_;
      fileBytes_ = other.fileBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CsvImportRequest Clone() {
      return new CsvImportRequest(this);
    }

    /// <summary>Field number for the "classId" field.</summary>
    public const int ClassIdFieldNumber = 1;
    private string classId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClassId {
      get { return classId_; }
      set {
        classId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 2;
    private global::PKIo.PassProtocol protocol_ = global::PKIo.PassProtocol.DoNotUse;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.PassProtocol Protocol {
      get { return protocol_; }
      set {
        protocol_ = value;
      }
    }

    /// <summary>Field number for the "fileBytes" field.</summary>
    public const int FileBytesFieldNumber = 3;
    private pb::ByteString fileBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileBytes {
      get { return fileBytes_; }
      set {
        fileBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CsvImportRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CsvImportRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClassId != other.ClassId) return false;
      if (Protocol != other.Protocol) return false;
      if (FileBytes != other.FileBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClassId.Length != 0) hash ^= ClassId.GetHashCode();
      if (Protocol != global::PKIo.PassProtocol.DoNotUse) hash ^= Protocol.GetHashCode();
      if (FileBytes.Length != 0) hash ^= FileBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClassId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClassId);
      }
      if (Protocol != global::PKIo.PassProtocol.DoNotUse) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Protocol);
      }
      if (FileBytes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(FileBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClassId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClassId);
      }
      if (Protocol != global::PKIo.PassProtocol.DoNotUse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
      }
      if (FileBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CsvImportRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClassId.Length != 0) {
        ClassId = other.ClassId;
      }
      if (other.Protocol != global::PKIo.PassProtocol.DoNotUse) {
        Protocol = other.Protocol;
      }
      if (other.FileBytes.Length != 0) {
        FileBytes = other.FileBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClassId = input.ReadString();
            break;
          }
          case 16: {
            Protocol = (global::PKIo.PassProtocol) input.ReadEnum();
            break;
          }
          case 26: {
            FileBytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
