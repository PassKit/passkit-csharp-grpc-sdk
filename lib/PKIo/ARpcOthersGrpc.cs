// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/core/a_rpc_others.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace PKIo {
  public static partial class Users
  {
    static readonly string __ServiceName = "io.Users";

    static readonly grpc::Marshaller<global::PKIo.NewUser> __Marshaller_io_NewUser = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.NewUser.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.NewUserResponse> __Marshaller_io_NewUserResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.NewUserResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.JWT> __Marshaller_io_JWT = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.JWT.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.Id> __Marshaller_io_Id = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.Id.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.Boolean> __Marshaller_io_Boolean = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.Boolean.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.GetUserResponse> __Marshaller_io_GetUserResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.GetUserResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.Credentials> __Marshaller_io_Credentials = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.Credentials.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.Username> __Marshaller_io_Username = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.Username.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.PasswordResetInput> __Marshaller_io_PasswordResetInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.PasswordResetInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.Pagination> __Marshaller_io_Pagination = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.Pagination.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.Project> __Marshaller_io_Project = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.Project.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.ProjectByShortCodeResult> __Marshaller_io_ProjectByShortCodeResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.ProjectByShortCodeResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.ProjectStatusFilter> __Marshaller_io_ProjectStatusFilter = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.ProjectStatusFilter.Parser.ParseFrom);

    static readonly grpc::Method<global::PKIo.NewUser, global::PKIo.NewUserResponse> __Method_createUser = new grpc::Method<global::PKIo.NewUser, global::PKIo.NewUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "createUser",
        __Marshaller_io_NewUser,
        __Marshaller_io_NewUserResponse);

    static readonly grpc::Method<global::PKIo.NewUser, global::PKIo.JWT> __Method_newUser = new grpc::Method<global::PKIo.NewUser, global::PKIo.JWT>(
        grpc::MethodType.Unary,
        __ServiceName,
        "newUser",
        __Marshaller_io_NewUser,
        __Marshaller_io_JWT);

    static readonly grpc::Method<global::PKIo.Id, global::PKIo.Boolean> __Method_verify = new grpc::Method<global::PKIo.Id, global::PKIo.Boolean>(
        grpc::MethodType.Unary,
        __ServiceName,
        "verify",
        __Marshaller_io_Id,
        __Marshaller_io_Boolean);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PKIo.Boolean> __Method_resendVerificationEmail = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PKIo.Boolean>(
        grpc::MethodType.Unary,
        __ServiceName,
        "resendVerificationEmail",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_io_Boolean);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PKIo.GetUserResponse> __Method_getUser = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::PKIo.GetUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getUser",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_io_GetUserResponse);

    static readonly grpc::Method<global::PKIo.Credentials, global::PKIo.JWT> __Method_login = new grpc::Method<global::PKIo.Credentials, global::PKIo.JWT>(
        grpc::MethodType.Unary,
        __ServiceName,
        "login",
        __Marshaller_io_Credentials,
        __Marshaller_io_JWT);

    static readonly grpc::Method<global::PKIo.Credentials, global::Google.Protobuf.WellKnownTypes.Empty> __Method_resetPassword = new grpc::Method<global::PKIo.Credentials, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "resetPassword",
        __Marshaller_io_Credentials,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PKIo.Username, global::Google.Protobuf.WellKnownTypes.Empty> __Method_sendPasswordResetLink = new grpc::Method<global::PKIo.Username, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "sendPasswordResetLink",
        __Marshaller_io_Username,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PKIo.PasswordResetInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_changePassword = new grpc::Method<global::PKIo.PasswordResetInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "changePassword",
        __Marshaller_io_PasswordResetInput,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PKIo.Pagination, global::PKIo.Project> __Method_getProjectsForUserQuery = new grpc::Method<global::PKIo.Pagination, global::PKIo.Project>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getProjectsForUserQuery",
        __Marshaller_io_Pagination,
        __Marshaller_io_Project);

    static readonly grpc::Method<global::PKIo.Pagination, global::PKIo.Project> __Method_getProjectsQuery = new grpc::Method<global::PKIo.Pagination, global::PKIo.Project>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getProjectsQuery",
        __Marshaller_io_Pagination,
        __Marshaller_io_Project);

    static readonly grpc::Method<global::PKIo.Id, global::PKIo.Project> __Method_getProjectByUuid = new grpc::Method<global::PKIo.Id, global::PKIo.Project>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getProjectByUuid",
        __Marshaller_io_Id,
        __Marshaller_io_Project);

    static readonly grpc::Method<global::PKIo.Id, global::PKIo.ProjectByShortCodeResult> __Method_getProjectAndTemplateByShortCode = new grpc::Method<global::PKIo.Id, global::PKIo.ProjectByShortCodeResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getProjectAndTemplateByShortCode",
        __Marshaller_io_Id,
        __Marshaller_io_ProjectByShortCodeResult);

    static readonly grpc::Method<global::PKIo.ProjectStatusFilter, global::PKIo.Project> __Method_getProjectsForUser = new grpc::Method<global::PKIo.ProjectStatusFilter, global::PKIo.Project>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getProjectsForUser",
        __Marshaller_io_ProjectStatusFilter,
        __Marshaller_io_Project);

    static readonly grpc::Method<global::PKIo.ProjectStatusFilter, global::PKIo.Project> __Method_getProjects = new grpc::Method<global::PKIo.ProjectStatusFilter, global::PKIo.Project>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getProjects",
        __Marshaller_io_ProjectStatusFilter,
        __Marshaller_io_Project);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PKIo.ARpcOthersReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Users</summary>
    public partial class UsersClient : grpc::ClientBase<UsersClient>
    {
      /// <summary>Creates a new client for Users</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public UsersClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Users that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public UsersClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected UsersClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected UsersClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::PKIo.NewUserResponse createUser(global::PKIo.NewUser request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.NewUserResponse createUser(global::PKIo.NewUser request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_createUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.NewUserResponse> createUserAsync(global::PKIo.NewUser request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.NewUserResponse> createUserAsync(global::PKIo.NewUser request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_createUser, null, options, request);
      }
      public virtual global::PKIo.JWT newUser(global::PKIo.NewUser request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return newUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.JWT newUser(global::PKIo.NewUser request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_newUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.JWT> newUserAsync(global::PKIo.NewUser request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return newUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.JWT> newUserAsync(global::PKIo.NewUser request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_newUser, null, options, request);
      }
      public virtual global::PKIo.Boolean verify(global::PKIo.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return verify(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.Boolean verify(global::PKIo.Id request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_verify, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Boolean> verifyAsync(global::PKIo.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return verifyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Boolean> verifyAsync(global::PKIo.Id request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_verify, null, options, request);
      }
      public virtual global::PKIo.Boolean resendVerificationEmail(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return resendVerificationEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.Boolean resendVerificationEmail(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_resendVerificationEmail, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Boolean> resendVerificationEmailAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return resendVerificationEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Boolean> resendVerificationEmailAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_resendVerificationEmail, null, options, request);
      }
      public virtual global::PKIo.GetUserResponse getUser(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.GetUserResponse getUser(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.GetUserResponse> getUserAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.GetUserResponse> getUserAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getUser, null, options, request);
      }
      public virtual global::PKIo.JWT login(global::PKIo.Credentials request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return login(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.JWT login(global::PKIo.Credentials request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_login, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.JWT> loginAsync(global::PKIo.Credentials request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return loginAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.JWT> loginAsync(global::PKIo.Credentials request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_login, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty resetPassword(global::PKIo.Credentials request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return resetPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty resetPassword(global::PKIo.Credentials request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_resetPassword, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> resetPasswordAsync(global::PKIo.Credentials request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return resetPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> resetPasswordAsync(global::PKIo.Credentials request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_resetPassword, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty sendPasswordResetLink(global::PKIo.Username request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return sendPasswordResetLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty sendPasswordResetLink(global::PKIo.Username request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_sendPasswordResetLink, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> sendPasswordResetLinkAsync(global::PKIo.Username request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return sendPasswordResetLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> sendPasswordResetLinkAsync(global::PKIo.Username request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_sendPasswordResetLink, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty changePassword(global::PKIo.PasswordResetInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return changePassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty changePassword(global::PKIo.PasswordResetInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_changePassword, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> changePasswordAsync(global::PKIo.PasswordResetInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return changePasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> changePasswordAsync(global::PKIo.PasswordResetInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_changePassword, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.Project> getProjectsForUserQuery(global::PKIo.Pagination request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getProjectsForUserQuery(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.Project> getProjectsForUserQuery(global::PKIo.Pagination request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getProjectsForUserQuery, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.Project> getProjectsQuery(global::PKIo.Pagination request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getProjectsQuery(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.Project> getProjectsQuery(global::PKIo.Pagination request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getProjectsQuery, null, options, request);
      }
      public virtual global::PKIo.Project getProjectByUuid(global::PKIo.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getProjectByUuid(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.Project getProjectByUuid(global::PKIo.Id request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getProjectByUuid, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Project> getProjectByUuidAsync(global::PKIo.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getProjectByUuidAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Project> getProjectByUuidAsync(global::PKIo.Id request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getProjectByUuid, null, options, request);
      }
      public virtual global::PKIo.ProjectByShortCodeResult getProjectAndTemplateByShortCode(global::PKIo.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getProjectAndTemplateByShortCode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.ProjectByShortCodeResult getProjectAndTemplateByShortCode(global::PKIo.Id request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getProjectAndTemplateByShortCode, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.ProjectByShortCodeResult> getProjectAndTemplateByShortCodeAsync(global::PKIo.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getProjectAndTemplateByShortCodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.ProjectByShortCodeResult> getProjectAndTemplateByShortCodeAsync(global::PKIo.Id request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getProjectAndTemplateByShortCode, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.Project> getProjectsForUser(global::PKIo.ProjectStatusFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getProjectsForUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.Project> getProjectsForUser(global::PKIo.ProjectStatusFilter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getProjectsForUser, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.Project> getProjects(global::PKIo.ProjectStatusFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getProjects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.Project> getProjects(global::PKIo.ProjectStatusFilter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getProjects, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override UsersClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UsersClient(configuration);
      }
    }

  }
  public static partial class Messages
  {
    static readonly string __ServiceName = "io.Messages";

    static readonly grpc::Marshaller<global::PKIo.Message> __Marshaller_io_Message = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.Message.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.Id> __Marshaller_io_Id = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.Id.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.Pagination> __Marshaller_io_Pagination = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.Pagination.Parser.ParseFrom);

    static readonly grpc::Method<global::PKIo.Message, global::PKIo.Id> __Method_sendMessage = new grpc::Method<global::PKIo.Message, global::PKIo.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "sendMessage",
        __Marshaller_io_Message,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PKIo.Pagination, global::PKIo.Message> __Method_getMessages = new grpc::Method<global::PKIo.Pagination, global::PKIo.Message>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getMessages",
        __Marshaller_io_Pagination,
        __Marshaller_io_Message);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PKIo.ARpcOthersReflection.Descriptor.Services[1]; }
    }

    /// <summary>Client for Messages</summary>
    public partial class MessagesClient : grpc::ClientBase<MessagesClient>
    {
      /// <summary>Creates a new client for Messages</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MessagesClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Messages that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MessagesClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MessagesClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MessagesClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::PKIo.Id sendMessage(global::PKIo.Message request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return sendMessage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.Id sendMessage(global::PKIo.Message request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_sendMessage, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Id> sendMessageAsync(global::PKIo.Message request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return sendMessageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Id> sendMessageAsync(global::PKIo.Message request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_sendMessage, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.Message> getMessages(global::PKIo.Pagination request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getMessages(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.Message> getMessages(global::PKIo.Pagination request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getMessages, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MessagesClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MessagesClient(configuration);
      }
    }

  }
  public static partial class Distribution
  {
    static readonly string __ServiceName = "io.Distribution";

    static readonly grpc::Marshaller<global::PKIo.EmailDistributionRequest> __Marshaller_io_EmailDistributionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.EmailDistributionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::PKIo.EmailDistributionRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_sendWelcomeEmail = new grpc::Method<global::PKIo.EmailDistributionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "sendWelcomeEmail",
        __Marshaller_io_EmailDistributionRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PKIo.ARpcOthersReflection.Descriptor.Services[2]; }
    }

    /// <summary>Client for Distribution</summary>
    public partial class DistributionClient : grpc::ClientBase<DistributionClient>
    {
      /// <summary>Creates a new client for Distribution</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DistributionClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Distribution that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DistributionClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DistributionClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DistributionClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Google.Protobuf.WellKnownTypes.Empty sendWelcomeEmail(global::PKIo.EmailDistributionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return sendWelcomeEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty sendWelcomeEmail(global::PKIo.EmailDistributionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_sendWelcomeEmail, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> sendWelcomeEmailAsync(global::PKIo.EmailDistributionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return sendWelcomeEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> sendWelcomeEmailAsync(global::PKIo.EmailDistributionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_sendWelcomeEmail, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DistributionClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DistributionClient(configuration);
      }
    }

  }
  public static partial class Jobs
  {
    static readonly string __ServiceName = "io.Jobs";

    static readonly grpc::Marshaller<global::PKIo.CsvImportRequest> __Marshaller_io_CsvImportRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.CsvImportRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.Id> __Marshaller_io_Id = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.Id.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.Pagination> __Marshaller_io_Pagination = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.Pagination.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.Job> __Marshaller_io_Job = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.Job.Parser.ParseFrom);

    static readonly grpc::Method<global::PKIo.CsvImportRequest, global::PKIo.Id> __Method_importCsv = new grpc::Method<global::PKIo.CsvImportRequest, global::PKIo.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "importCsv",
        __Marshaller_io_CsvImportRequest,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PKIo.Pagination, global::PKIo.Job> __Method_getJobs = new grpc::Method<global::PKIo.Pagination, global::PKIo.Job>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getJobs",
        __Marshaller_io_Pagination,
        __Marshaller_io_Job);

    static readonly grpc::Method<global::PKIo.Id, global::PKIo.Job> __Method_getJob = new grpc::Method<global::PKIo.Id, global::PKIo.Job>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getJob",
        __Marshaller_io_Id,
        __Marshaller_io_Job);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PKIo.ARpcOthersReflection.Descriptor.Services[3]; }
    }

    /// <summary>Client for Jobs</summary>
    public partial class JobsClient : grpc::ClientBase<JobsClient>
    {
      /// <summary>Creates a new client for Jobs</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public JobsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Jobs that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public JobsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected JobsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected JobsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::PKIo.Id importCsv(global::PKIo.CsvImportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return importCsv(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.Id importCsv(global::PKIo.CsvImportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_importCsv, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Id> importCsvAsync(global::PKIo.CsvImportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return importCsvAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Id> importCsvAsync(global::PKIo.CsvImportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_importCsv, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.Job> getJobs(global::PKIo.Pagination request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.Job> getJobs(global::PKIo.Pagination request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getJobs, null, options, request);
      }
      public virtual global::PKIo.Job getJob(global::PKIo.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.Job getJob(global::PKIo.Id request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getJob, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Job> getJobAsync(global::PKIo.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Job> getJobAsync(global::PKIo.Id request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getJob, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override JobsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new JobsClient(configuration);
      }
    }

  }
  public static partial class Integrations
  {
    static readonly string __ServiceName = "io.Integrations";

    static readonly grpc::Marshaller<global::PKIo.IntegrationConfigs> __Marshaller_io_IntegrationConfigs = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.IntegrationConfigs.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.Id> __Marshaller_io_Id = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.Id.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.ProtocolIdInput> __Marshaller_io_ProtocolIdInput = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.ProtocolIdInput.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.SinkSubscription> __Marshaller_io_SinkSubscription = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.SinkSubscription.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.SubscriptionRequest> __Marshaller_io_SubscriptionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.SubscriptionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PKIo.ListRequest> __Marshaller_io_ListRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PKIo.ListRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::PKIo.IntegrationConfigs, global::PKIo.Id> __Method_createIntegrations = new grpc::Method<global::PKIo.IntegrationConfigs, global::PKIo.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "createIntegrations",
        __Marshaller_io_IntegrationConfigs,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PKIo.ProtocolIdInput, global::PKIo.IntegrationConfigs> __Method_getIntegrations = new grpc::Method<global::PKIo.ProtocolIdInput, global::PKIo.IntegrationConfigs>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getIntegrations",
        __Marshaller_io_ProtocolIdInput,
        __Marshaller_io_IntegrationConfigs);

    static readonly grpc::Method<global::PKIo.IntegrationConfigs, global::PKIo.Id> __Method_updateIntegrations = new grpc::Method<global::PKIo.IntegrationConfigs, global::PKIo.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updateIntegrations",
        __Marshaller_io_IntegrationConfigs,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PKIo.ProtocolIdInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_deleteIntegrations = new grpc::Method<global::PKIo.ProtocolIdInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "deleteIntegrations",
        __Marshaller_io_ProtocolIdInput,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PKIo.SinkSubscription, global::PKIo.Id> __Method_createSinkSubscription = new grpc::Method<global::PKIo.SinkSubscription, global::PKIo.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "createSinkSubscription",
        __Marshaller_io_SinkSubscription,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PKIo.SubscriptionRequest, global::PKIo.SinkSubscription> __Method_getSinkSubscription = new grpc::Method<global::PKIo.SubscriptionRequest, global::PKIo.SinkSubscription>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getSinkSubscription",
        __Marshaller_io_SubscriptionRequest,
        __Marshaller_io_SinkSubscription);

    static readonly grpc::Method<global::PKIo.ListRequest, global::PKIo.SinkSubscription> __Method_listSinkSubscriptions = new grpc::Method<global::PKIo.ListRequest, global::PKIo.SinkSubscription>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "listSinkSubscriptions",
        __Marshaller_io_ListRequest,
        __Marshaller_io_SinkSubscription);

    static readonly grpc::Method<global::PKIo.SinkSubscription, global::PKIo.Id> __Method_updateSinkSubscription = new grpc::Method<global::PKIo.SinkSubscription, global::PKIo.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updateSinkSubscription",
        __Marshaller_io_SinkSubscription,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PKIo.SubscriptionRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_deleteSinkSubscription = new grpc::Method<global::PKIo.SubscriptionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "deleteSinkSubscription",
        __Marshaller_io_SubscriptionRequest,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PKIo.Id, global::PKIo.SinkSubscription> __Method_getSampleSubscriptionEvent = new grpc::Method<global::PKIo.Id, global::PKIo.SinkSubscription>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getSampleSubscriptionEvent",
        __Marshaller_io_Id,
        __Marshaller_io_SinkSubscription);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PKIo.ARpcOthersReflection.Descriptor.Services[4]; }
    }

    /// <summary>Client for Integrations</summary>
    public partial class IntegrationsClient : grpc::ClientBase<IntegrationsClient>
    {
      /// <summary>Creates a new client for Integrations</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public IntegrationsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Integrations that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public IntegrationsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected IntegrationsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected IntegrationsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::PKIo.Id createIntegrations(global::PKIo.IntegrationConfigs request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createIntegrations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.Id createIntegrations(global::PKIo.IntegrationConfigs request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_createIntegrations, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Id> createIntegrationsAsync(global::PKIo.IntegrationConfigs request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createIntegrationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Id> createIntegrationsAsync(global::PKIo.IntegrationConfigs request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_createIntegrations, null, options, request);
      }
      public virtual global::PKIo.IntegrationConfigs getIntegrations(global::PKIo.ProtocolIdInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getIntegrations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.IntegrationConfigs getIntegrations(global::PKIo.ProtocolIdInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getIntegrations, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.IntegrationConfigs> getIntegrationsAsync(global::PKIo.ProtocolIdInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getIntegrationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.IntegrationConfigs> getIntegrationsAsync(global::PKIo.ProtocolIdInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getIntegrations, null, options, request);
      }
      public virtual global::PKIo.Id updateIntegrations(global::PKIo.IntegrationConfigs request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateIntegrations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.Id updateIntegrations(global::PKIo.IntegrationConfigs request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updateIntegrations, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Id> updateIntegrationsAsync(global::PKIo.IntegrationConfigs request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateIntegrationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Id> updateIntegrationsAsync(global::PKIo.IntegrationConfigs request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updateIntegrations, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteIntegrations(global::PKIo.ProtocolIdInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteIntegrations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteIntegrations(global::PKIo.ProtocolIdInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_deleteIntegrations, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteIntegrationsAsync(global::PKIo.ProtocolIdInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteIntegrationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteIntegrationsAsync(global::PKIo.ProtocolIdInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_deleteIntegrations, null, options, request);
      }
      public virtual global::PKIo.Id createSinkSubscription(global::PKIo.SinkSubscription request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createSinkSubscription(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.Id createSinkSubscription(global::PKIo.SinkSubscription request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_createSinkSubscription, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Id> createSinkSubscriptionAsync(global::PKIo.SinkSubscription request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createSinkSubscriptionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Id> createSinkSubscriptionAsync(global::PKIo.SinkSubscription request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_createSinkSubscription, null, options, request);
      }
      public virtual global::PKIo.SinkSubscription getSinkSubscription(global::PKIo.SubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getSinkSubscription(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.SinkSubscription getSinkSubscription(global::PKIo.SubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getSinkSubscription, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.SinkSubscription> getSinkSubscriptionAsync(global::PKIo.SubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getSinkSubscriptionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.SinkSubscription> getSinkSubscriptionAsync(global::PKIo.SubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getSinkSubscription, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.SinkSubscription> listSinkSubscriptions(global::PKIo.ListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return listSinkSubscriptions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PKIo.SinkSubscription> listSinkSubscriptions(global::PKIo.ListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_listSinkSubscriptions, null, options, request);
      }
      public virtual global::PKIo.Id updateSinkSubscription(global::PKIo.SinkSubscription request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateSinkSubscription(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.Id updateSinkSubscription(global::PKIo.SinkSubscription request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updateSinkSubscription, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Id> updateSinkSubscriptionAsync(global::PKIo.SinkSubscription request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateSinkSubscriptionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.Id> updateSinkSubscriptionAsync(global::PKIo.SinkSubscription request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updateSinkSubscription, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteSinkSubscription(global::PKIo.SubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteSinkSubscription(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteSinkSubscription(global::PKIo.SubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_deleteSinkSubscription, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteSinkSubscriptionAsync(global::PKIo.SubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteSinkSubscriptionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteSinkSubscriptionAsync(global::PKIo.SubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_deleteSinkSubscription, null, options, request);
      }
      public virtual global::PKIo.SinkSubscription getSampleSubscriptionEvent(global::PKIo.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getSampleSubscriptionEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PKIo.SinkSubscription getSampleSubscriptionEvent(global::PKIo.Id request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getSampleSubscriptionEvent, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.SinkSubscription> getSampleSubscriptionEventAsync(global::PKIo.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getSampleSubscriptionEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PKIo.SinkSubscription> getSampleSubscriptionEventAsync(global::PKIo.Id request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getSampleSubscriptionEvent, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override IntegrationsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new IntegrationsClient(configuration);
      }
    }

  }
}
#endregion
