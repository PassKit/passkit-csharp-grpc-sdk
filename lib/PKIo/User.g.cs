// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/user/user.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PKIo {

  /// <summary>Holder for reflection information generated from io/user/user.proto</summary>
  public static partial class UserReflection {

    #region Descriptor
    /// <summary>File descriptor for io/user/user.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJpby91c2VyL3VzZXIucHJvdG8SAmlvGh9nb29nbGUvcHJvdG9idWYvdGlt",
            "ZXN0YW1wLnByb3RvGhhpby9jb21tb24vcGVyc29uYWwucHJvdG8ilQEKD05l",
            "d1VzZXJSZXNwb25zZRIOCgZ1c2VySWQYASABKAkSEQoJY29tcGFueUlkGAIg",
            "ASgJEhAKCHVzZXJuYW1lGAMgASgJEhQKDGVtYWlsQWRkcmVzcxgEIAEoCRIO",
            "CgZzZWNyZXQYBSABKAkSEwoLY2VydGlmaWNhdGUYBiABKAkSEgoKcHJpdmF0",
            "ZUtleRgHIAEoCSK7AQoHTmV3VXNlchIQCgh1c2VybmFtZRgBIAEoCRIQCghw",
            "YXNzd29yZBgCIAEoCRIUCgxlbWFpbEFkZHJlc3MYAyABKAkSEQoJc2VuZEVt",
            "YWlsGAQgASgIEhMKC2NvbXBhbnlOYW1lGAUgASgJEhQKDG1vYmlsZU51bWJl",
            "chgGIAEoCRIVCg10d29GYWN0b3JBdXRoGAcgASgIEg8KB2lzT3duZXIYCCAB",
            "KAgSEAoIcmVhZE9ubHkYCSABKAgioAEKD0dldFVzZXJSZXNwb25zZRINCgVl",
            "bWFpbBgBIAEoCRIQCgh1c2VybmFtZRgCIAEoCRIRCgljb21wYW55SWQYAyAB",
            "KAkSEwoLY29tcGFueU5hbWUYBCABKAkSFQoNY29tcGFueVN0YXR1cxgFIAEo",
            "BBItCgljcmVhdGVkQXQYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wImkKC0JpbGxpbmdNZXRhEhMKC2NvbXBhbnlOYW1lGAEgASgJEg0KBXRh",
            "eElkGAIgASgJEhEKCXJlZmVyZW5jZRgDIAEoCRIjCg5iaWxsaW5nQWRkcmVz",
            "cxgEIAEoCzILLmlvLkFkZHJlc3MiMQoLQ3JlZGVudGlhbHMSEAoIdXNlcm5h",
            "bWUYASABKAkSEAoIcGFzc3dvcmQYAiABKAkiFAoDSldUEg0KBXRva2VuGAEg",
            "ASgJImoKElBhc3N3b3JkUmVzZXRJbnB1dBIKCgJpZBgBIAEoCRIXCg9yZWdp",
            "c3RlcmVkRW1haWwYAiABKAkSEwoLbmV3UGFzc3dvcmQYAyABKAkSGgoSY29u",
            "ZmlybU5ld1Bhc3N3b3JkGAQgASgJIhwKCFVzZXJuYW1lEhAKCHVzZXJuYW1l",
            "GAEgASgJQj4KD2lvLnBhc3NraXQuUEtpb1okc3Rhc2gucGFzc2tpdC5jb20v",
            "aW8vbW9kZWwvc2RrL2dvL2lvqgIEUEtJb2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::PKIo.PersonalReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.NewUserResponse), global::PKIo.NewUserResponse.Parser, new[]{ "UserId", "CompanyId", "Username", "EmailAddress", "Secret", "Certificate", "PrivateKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.NewUser), global::PKIo.NewUser.Parser, new[]{ "Username", "Password", "EmailAddress", "SendEmail", "CompanyName", "MobileNumber", "TwoFactorAuth", "IsOwner", "ReadOnly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.GetUserResponse), global::PKIo.GetUserResponse.Parser, new[]{ "Email", "Username", "CompanyId", "CompanyName", "CompanyStatus", "CreatedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.BillingMeta), global::PKIo.BillingMeta.Parser, new[]{ "CompanyName", "TaxId", "Reference", "BillingAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.Credentials), global::PKIo.Credentials.Parser, new[]{ "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.JWT), global::PKIo.JWT.Parser, new[]{ "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.PasswordResetInput), global::PKIo.PasswordResetInput.Parser, new[]{ "Id", "RegisteredEmail", "NewPassword", "ConfirmNewPassword" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PKIo.Username), global::PKIo.Username.Parser, new[]{ "Username_" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class NewUserResponse : pb::IMessage<NewUserResponse> {
    private static readonly pb::MessageParser<NewUserResponse> _parser = new pb::MessageParser<NewUserResponse>(() => new NewUserResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewUserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.UserReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUserResponse(NewUserResponse other) : this() {
      userId_ = other.userId_;
      companyId_ = other.companyId_;
      username_ = other.username_;
      emailAddress_ = other.emailAddress_;
      secret_ = other.secret_;
      certificate_ = other.certificate_;
      privateKey_ = other.privateKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUserResponse Clone() {
      return new NewUserResponse(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyId" field.</summary>
    public const int CompanyIdFieldNumber = 2;
    private string companyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 3;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "emailAddress" field.</summary>
    public const int EmailAddressFieldNumber = 4;
    private string emailAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EmailAddress {
      get { return emailAddress_; }
      set {
        emailAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 5;
    private string secret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Secret {
      get { return secret_; }
      set {
        secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "certificate" field.</summary>
    public const int CertificateFieldNumber = 6;
    private string certificate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Certificate {
      get { return certificate_; }
      set {
        certificate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "privateKey" field.</summary>
    public const int PrivateKeyFieldNumber = 7;
    private string privateKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewUserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewUserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (CompanyId != other.CompanyId) return false;
      if (Username != other.Username) return false;
      if (EmailAddress != other.EmailAddress) return false;
      if (Secret != other.Secret) return false;
      if (Certificate != other.Certificate) return false;
      if (PrivateKey != other.PrivateKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (EmailAddress.Length != 0) hash ^= EmailAddress.GetHashCode();
      if (Secret.Length != 0) hash ^= Secret.GetHashCode();
      if (Certificate.Length != 0) hash ^= Certificate.GetHashCode();
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyId);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (EmailAddress.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EmailAddress);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Secret);
      }
      if (Certificate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Certificate);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PrivateKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (EmailAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailAddress);
      }
      if (Secret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
      }
      if (Certificate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Certificate);
      }
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivateKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewUserResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.EmailAddress.Length != 0) {
        EmailAddress = other.EmailAddress;
      }
      if (other.Secret.Length != 0) {
        Secret = other.Secret;
      }
      if (other.Certificate.Length != 0) {
        Certificate = other.Certificate;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            CompanyId = input.ReadString();
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
          case 34: {
            EmailAddress = input.ReadString();
            break;
          }
          case 42: {
            Secret = input.ReadString();
            break;
          }
          case 50: {
            Certificate = input.ReadString();
            break;
          }
          case 58: {
            PrivateKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewUser : pb::IMessage<NewUser> {
    private static readonly pb::MessageParser<NewUser> _parser = new pb::MessageParser<NewUser>(() => new NewUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.UserReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUser(NewUser other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      emailAddress_ = other.emailAddress_;
      sendEmail_ = other.sendEmail_;
      companyName_ = other.companyName_;
      mobileNumber_ = other.mobileNumber_;
      twoFactorAuth_ = other.twoFactorAuth_;
      isOwner_ = other.isOwner_;
      readOnly_ = other.readOnly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUser Clone() {
      return new NewUser(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "emailAddress" field.</summary>
    public const int EmailAddressFieldNumber = 3;
    private string emailAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EmailAddress {
      get { return emailAddress_; }
      set {
        emailAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sendEmail" field.</summary>
    public const int SendEmailFieldNumber = 4;
    private bool sendEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SendEmail {
      get { return sendEmail_; }
      set {
        sendEmail_ = value;
      }
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 5;
    private string companyName_ = "";
    /// <summary>
    /// If a company name is provided, then a new company will be created, otherwise, the user will inherit the company
    /// of the parent.  Only system admin users can create new companies.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mobileNumber" field.</summary>
    public const int MobileNumberFieldNumber = 6;
    private string mobileNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MobileNumber {
      get { return mobileNumber_; }
      set {
        mobileNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "twoFactorAuth" field.</summary>
    public const int TwoFactorAuthFieldNumber = 7;
    private bool twoFactorAuth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TwoFactorAuth {
      get { return twoFactorAuth_; }
      set {
        twoFactorAuth_ = value;
      }
    }

    /// <summary>Field number for the "isOwner" field.</summary>
    public const int IsOwnerFieldNumber = 8;
    private bool isOwner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOwner {
      get { return isOwner_; }
      set {
        isOwner_ = value;
      }
    }

    /// <summary>Field number for the "readOnly" field.</summary>
    public const int ReadOnlyFieldNumber = 9;
    private bool readOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReadOnly {
      get { return readOnly_; }
      set {
        readOnly_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if (EmailAddress != other.EmailAddress) return false;
      if (SendEmail != other.SendEmail) return false;
      if (CompanyName != other.CompanyName) return false;
      if (MobileNumber != other.MobileNumber) return false;
      if (TwoFactorAuth != other.TwoFactorAuth) return false;
      if (IsOwner != other.IsOwner) return false;
      if (ReadOnly != other.ReadOnly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (EmailAddress.Length != 0) hash ^= EmailAddress.GetHashCode();
      if (SendEmail != false) hash ^= SendEmail.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (MobileNumber.Length != 0) hash ^= MobileNumber.GetHashCode();
      if (TwoFactorAuth != false) hash ^= TwoFactorAuth.GetHashCode();
      if (IsOwner != false) hash ^= IsOwner.GetHashCode();
      if (ReadOnly != false) hash ^= ReadOnly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (EmailAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EmailAddress);
      }
      if (SendEmail != false) {
        output.WriteRawTag(32);
        output.WriteBool(SendEmail);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CompanyName);
      }
      if (MobileNumber.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MobileNumber);
      }
      if (TwoFactorAuth != false) {
        output.WriteRawTag(56);
        output.WriteBool(TwoFactorAuth);
      }
      if (IsOwner != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsOwner);
      }
      if (ReadOnly != false) {
        output.WriteRawTag(72);
        output.WriteBool(ReadOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (EmailAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailAddress);
      }
      if (SendEmail != false) {
        size += 1 + 1;
      }
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (MobileNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MobileNumber);
      }
      if (TwoFactorAuth != false) {
        size += 1 + 1;
      }
      if (IsOwner != false) {
        size += 1 + 1;
      }
      if (ReadOnly != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewUser other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.EmailAddress.Length != 0) {
        EmailAddress = other.EmailAddress;
      }
      if (other.SendEmail != false) {
        SendEmail = other.SendEmail;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.MobileNumber.Length != 0) {
        MobileNumber = other.MobileNumber;
      }
      if (other.TwoFactorAuth != false) {
        TwoFactorAuth = other.TwoFactorAuth;
      }
      if (other.IsOwner != false) {
        IsOwner = other.IsOwner;
      }
      if (other.ReadOnly != false) {
        ReadOnly = other.ReadOnly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            EmailAddress = input.ReadString();
            break;
          }
          case 32: {
            SendEmail = input.ReadBool();
            break;
          }
          case 42: {
            CompanyName = input.ReadString();
            break;
          }
          case 50: {
            MobileNumber = input.ReadString();
            break;
          }
          case 56: {
            TwoFactorAuth = input.ReadBool();
            break;
          }
          case 64: {
            IsOwner = input.ReadBool();
            break;
          }
          case 72: {
            ReadOnly = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// response used by getUser
  /// </summary>
  public sealed partial class GetUserResponse : pb::IMessage<GetUserResponse> {
    private static readonly pb::MessageParser<GetUserResponse> _parser = new pb::MessageParser<GetUserResponse>(() => new GetUserResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.UserReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserResponse(GetUserResponse other) : this() {
      email_ = other.email_;
      username_ = other.username_;
      companyId_ = other.companyId_;
      companyName_ = other.companyName_;
      companyStatus_ = other.companyStatus_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserResponse Clone() {
      return new GetUserResponse(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyId" field.</summary>
    public const int CompanyIdFieldNumber = 3;
    private string companyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 4;
    private string companyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyStatus" field.</summary>
    public const int CompanyStatusFieldNumber = 5;
    private ulong companyStatus_;
    /// <summary>
    /// used for checking production, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CompanyStatus {
      get { return companyStatus_; }
      set {
        companyStatus_ = value;
      }
    }

    /// <summary>Field number for the "createdAt" field.</summary>
    public const int CreatedAtFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (Username != other.Username) return false;
      if (CompanyId != other.CompanyId) return false;
      if (CompanyName != other.CompanyName) return false;
      if (CompanyStatus != other.CompanyStatus) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (CompanyStatus != 0UL) hash ^= CompanyStatus.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyId);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CompanyName);
      }
      if (CompanyStatus != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CompanyStatus);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (CompanyStatus != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CompanyStatus);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserResponse other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.CompanyStatus != 0UL) {
        CompanyStatus = other.CompanyStatus;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            CompanyId = input.ReadString();
            break;
          }
          case 34: {
            CompanyName = input.ReadString();
            break;
          }
          case 40: {
            CompanyStatus = input.ReadUInt64();
            break;
          }
          case 50: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BillingMeta : pb::IMessage<BillingMeta> {
    private static readonly pb::MessageParser<BillingMeta> _parser = new pb::MessageParser<BillingMeta>(() => new BillingMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BillingMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.UserReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingMeta(BillingMeta other) : this() {
      companyName_ = other.companyName_;
      taxId_ = other.taxId_;
      reference_ = other.reference_;
      billingAddress_ = other.billingAddress_ != null ? other.billingAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingMeta Clone() {
      return new BillingMeta(this);
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 1;
    private string companyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taxId" field.</summary>
    public const int TaxIdFieldNumber = 2;
    private string taxId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaxId {
      get { return taxId_; }
      set {
        taxId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reference" field.</summary>
    public const int ReferenceFieldNumber = 3;
    private string reference_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reference {
      get { return reference_; }
      set {
        reference_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "billingAddress" field.</summary>
    public const int BillingAddressFieldNumber = 4;
    private global::PKIo.Address billingAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PKIo.Address BillingAddress {
      get { return billingAddress_; }
      set {
        billingAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BillingMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BillingMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyName != other.CompanyName) return false;
      if (TaxId != other.TaxId) return false;
      if (Reference != other.Reference) return false;
      if (!object.Equals(BillingAddress, other.BillingAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (TaxId.Length != 0) hash ^= TaxId.GetHashCode();
      if (Reference.Length != 0) hash ^= Reference.GetHashCode();
      if (billingAddress_ != null) hash ^= BillingAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyName);
      }
      if (TaxId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaxId);
      }
      if (Reference.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Reference);
      }
      if (billingAddress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BillingAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (TaxId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaxId);
      }
      if (Reference.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reference);
      }
      if (billingAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BillingAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BillingMeta other) {
      if (other == null) {
        return;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.TaxId.Length != 0) {
        TaxId = other.TaxId;
      }
      if (other.Reference.Length != 0) {
        Reference = other.Reference;
      }
      if (other.billingAddress_ != null) {
        if (billingAddress_ == null) {
          BillingAddress = new global::PKIo.Address();
        }
        BillingAddress.MergeFrom(other.BillingAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyName = input.ReadString();
            break;
          }
          case 18: {
            TaxId = input.ReadString();
            break;
          }
          case 26: {
            Reference = input.ReadString();
            break;
          }
          case 34: {
            if (billingAddress_ == null) {
              BillingAddress = new global::PKIo.Address();
            }
            input.ReadMessage(BillingAddress);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Credentials : pb::IMessage<Credentials> {
    private static readonly pb::MessageParser<Credentials> _parser = new pb::MessageParser<Credentials>(() => new Credentials());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Credentials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.UserReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Credentials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Credentials(Credentials other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Credentials Clone() {
      return new Credentials(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Credentials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Credentials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Credentials other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JWT : pb::IMessage<JWT> {
    private static readonly pb::MessageParser<JWT> _parser = new pb::MessageParser<JWT>(() => new JWT());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JWT> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.UserReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JWT() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JWT(JWT other) : this() {
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JWT Clone() {
      return new JWT(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JWT);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JWT other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JWT other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PasswordResetInput : pb::IMessage<PasswordResetInput> {
    private static readonly pb::MessageParser<PasswordResetInput> _parser = new pb::MessageParser<PasswordResetInput>(() => new PasswordResetInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PasswordResetInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.UserReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PasswordResetInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PasswordResetInput(PasswordResetInput other) : this() {
      id_ = other.id_;
      registeredEmail_ = other.registeredEmail_;
      newPassword_ = other.newPassword_;
      confirmNewPassword_ = other.confirmNewPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PasswordResetInput Clone() {
      return new PasswordResetInput(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registeredEmail" field.</summary>
    public const int RegisteredEmailFieldNumber = 2;
    private string registeredEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegisteredEmail {
      get { return registeredEmail_; }
      set {
        registeredEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "newPassword" field.</summary>
    public const int NewPasswordFieldNumber = 3;
    private string newPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewPassword {
      get { return newPassword_; }
      set {
        newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "confirmNewPassword" field.</summary>
    public const int ConfirmNewPasswordFieldNumber = 4;
    private string confirmNewPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfirmNewPassword {
      get { return confirmNewPassword_; }
      set {
        confirmNewPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PasswordResetInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PasswordResetInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RegisteredEmail != other.RegisteredEmail) return false;
      if (NewPassword != other.NewPassword) return false;
      if (ConfirmNewPassword != other.ConfirmNewPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (RegisteredEmail.Length != 0) hash ^= RegisteredEmail.GetHashCode();
      if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
      if (ConfirmNewPassword.Length != 0) hash ^= ConfirmNewPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (RegisteredEmail.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegisteredEmail);
      }
      if (NewPassword.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NewPassword);
      }
      if (ConfirmNewPassword.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ConfirmNewPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (RegisteredEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegisteredEmail);
      }
      if (NewPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
      }
      if (ConfirmNewPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfirmNewPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PasswordResetInput other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.RegisteredEmail.Length != 0) {
        RegisteredEmail = other.RegisteredEmail;
      }
      if (other.NewPassword.Length != 0) {
        NewPassword = other.NewPassword;
      }
      if (other.ConfirmNewPassword.Length != 0) {
        ConfirmNewPassword = other.ConfirmNewPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            RegisteredEmail = input.ReadString();
            break;
          }
          case 26: {
            NewPassword = input.ReadString();
            break;
          }
          case 34: {
            ConfirmNewPassword = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Username : pb::IMessage<Username> {
    private static readonly pb::MessageParser<Username> _parser = new pb::MessageParser<Username>(() => new Username());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Username> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PKIo.UserReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Username() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Username(Username other) : this() {
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Username Clone() {
      return new Username(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int Username_FieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username_ {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Username);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Username other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username_ != other.Username_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username_.Length != 0) hash ^= Username_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Username other) {
      if (other == null) {
        return;
      }
      if (other.Username_.Length != 0) {
        Username_ = other.Username_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
