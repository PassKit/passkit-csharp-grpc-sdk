// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/member/program.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PassKitGrpcSDK.Members {

  /// <summary>Holder for reflection information generated from io/member/program.proto</summary>
  public static partial class ProgramReflection {

    #region Descriptor
    /// <summary>File descriptor for io/member/program.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProgramReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdpby9tZW1iZXIvcHJvZ3JhbS5wcm90bxIHbWVtYmVycxofZ29vZ2xlL3By",
            "b3RvYnVmL3RpbWVzdGFtcC5wcm90bxocaW8vY29tbW9uL2Rpc3RyaWJ1dGlv",
            "bi5wcm90bxocaW8vY29tbW9uL2xvY2FsaXphdGlvbi5wcm90bxoXaW8vY29t",
            "bW9uL21ldHJpY3MucHJvdG8aF2lvL2NvbW1vbi9wcm9qZWN0LnByb3RvGhdp",
            "by9jb21tb24vYmlsbGluZy5wcm90bxoucHJvdG9jLWdlbi1vcGVuYXBpdjIv",
            "b3B0aW9ucy9hbm5vdGF0aW9ucy5wcm90byJNCgpQb2ludHNUeXBlEikKC2Jh",
            "bGFuY2VUeXBlGAEgASgOMhQubWVtYmVycy5CYWxhbmNlVHlwZRIUCgxjdXJy",
            "ZW5jeUNvZGUYAiABKAkiiQgKB1Byb2dyYW0SCgoCaWQYASABKAkSDAoEbmFt",
            "ZRgCIAEoCRIqCg1sb2NhbGl6ZWROYW1lGAMgASgLMhMuaW8uTG9jYWxpemVk",
            "U3RyaW5nEiEKBnN0YXR1cxgEIAMoDjIRLmlvLlByb2plY3RTdGF0dXMSGAoF",
            "cXVvdGEYBSABKAsyCS5pby5RdW90YRIaChJwYXNzVHlwZUlkZW50aWZpZXIY",
            "BiABKAkSNgoUZGlzdHJpYnV0aW9uU2V0dGluZ3MYByABKAsyGC5pby5EaXN0",
            "cmlidXRpb25TZXR0aW5ncxIhChlhdXRvRGVsZXRlRGF5c0FmdGVyRXhwaXJ5",
            "GAggASgNEiQKHGF1dG9SZW1pbmRlckRheXNCZWZvcmVFeHBpcnkYCSABKA0S",
            "FQoNZXhwaXJ5TWVzc2FnZRgKIAEoCRIzChZsb2NhbGl6ZWRFeHBpcnlNZXNz",
            "YWdlGAsgASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEigKIGF1dG9EZWxldGVE",
            "YXlzQWZ0ZXJOb3RJbnN0YWxsaW5nGAwgASgNEicKCnBvaW50c1R5cGUYECAB",
            "KAsyEy5tZW1iZXJzLlBvaW50c1R5cGUSMAoTc2Vjb25kYXJ5UG9pbnRzVHlw",
            "ZRgRIAEoCzITLm1lbWJlcnMuUG9pbnRzVHlwZRIcCgdtZXRyaWNzGBMgASgL",
            "MgsuaW8uTWV0cmljcxIWCg5tZXRhRmllbGRzTGlzdBgUIAMoCRIrCgdjcmVh",
            "dGVkGBUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIrCgd1cGRh",
            "dGVkGBYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI6ChRwcm9m",
            "aWxlSW1hZ2VTZXR0aW5ncxgXIAEoDjIcLm1lbWJlcnMuUHJvZmlsZUltYWdl",
            "U2V0dGluZxJACh1hcHBseUZpZWxkVG9FeHRlcm5hbElkT25FbnJvbBgYIAEo",
            "CzIZLm1lbWJlcnMuQ3VzdG9tRXh0ZXJuYWxJZBI7ChRldmVudENhcHR1cmVT",
            "ZXR0aW5ncxgZIAEoCzIdLm1lbWJlcnMuRXZlbnRDYXB0dXJlU2V0dGluZ3MS",
            "OwoUcGFzc1JlY292ZXJ5U2V0dGluZ3MYGiABKAsyHS5tZW1iZXJzLlBhc3NS",
            "ZWNvdmVyeVNldHRpbmdzOnOSQXAKbioHUHJvZ3JhbTJTTWVtYmVyc2hpcCBQ",
            "cm9ncmFtcyBhbGxvdyBhIGNvbXBhbnkgdG8gY29udHJvbCB0aGUgYnVzaW5l",
            "c3MgbG9naWMgb2YgdGhlaXIgcHJvZ3JhbS7SAQRuYW1l0gEGc3RhdHVzSgQI",
            "DRAOSgQIDhAPSgQIEhATIvwBChRFdmVudENhcHR1cmVTZXR0aW5ncxJhChpl",
            "dmVudERhdGFSZXRlbnRpb25TZXR0aW5ncxgBIAMoCzI9Lm1lbWJlcnMuRXZl",
            "bnRDYXB0dXJlU2V0dGluZ3MuRXZlbnREYXRhUmV0ZW50aW9uU2V0dGluZ3NF",
            "bnRyeRIdChVzbXNDb25maXJtVXBvbkNoZWNrSW4YAiABKAgSHwoXZW1haWxD",
            "b25maXJtVXBvbkNoZWNrSW4YAyABKAgaQQofRXZlbnREYXRhUmV0ZW50aW9u",
            "U2V0dGluZ3NFbnRyeRILCgNrZXkYASABKA0SDQoFdmFsdWUYAiABKA06AjgB",
            "Im0KElByb2dyYW1Db3B5UmVxdWVzdBIKCgJpZBgBIAEoCRIMCgRuYW1lGAIg",
            "ASgJEiEKBnN0YXR1cxgDIAMoDjIRLmlvLlByb2plY3RTdGF0dXMSGgoScGFz",
            "c1R5cGVJZGVudGlmaWVyGAQgASgJIjoKFExpc3RQcm9ncmFtc1Jlc3BvbnNl",
            "EiIKCHByb2dyYW1zGAEgAygLMhAubWVtYmVycy5Qcm9ncmFtIiMKE0dldE1l",
            "dGFLZXlzUmVzcG9uc2USDAoEa2V5cxgBIAMoCSJBChBDdXN0b21FeHRlcm5h",
            "bElkEhcKD2ZpZWxkVW5pcXVlTmFtZRgBIAEoCRIUCgxlcnJvck1lc3NhZ2UY",
            "AiABKAkihwEKFFBhc3NSZWNvdmVyeVNldHRpbmdzEg8KB2VuYWJsZWQYASAB",
            "KAgSLgoIZGVsaXZlcnkYAiABKA4yHC5tZW1iZXJzLlJlY292ZXJQYXNzRGVs",
            "aXZlcnkSFwoPZXJyb3JQYWdlSGVhZGVyGAMgASgJEhUKDWVycm9yUGFnZUJv",
            "ZHkYBCABKAkqjwEKHlByb2dyYW1BdXRvVXBEb3duR3JhZGVUaWVyVHlwZRIW",
            "ChJVUERPV05HUkFERV9QT0lOVFMQABIgChxVUERPV05HUkFERV9TRUNPTkRB",
            "UllfUE9JTlRTEAESGwoXVVBET1dOR1JBREVfVElFUl9QT0lOVFMQAhIWChJV",
            "UERPV05HUkFERV9WSVNJVFMQAyptCgtCYWxhbmNlVHlwZRIXChNCQUxBTkNF",
            "X1RZUEVfU1RSSU5HEAASFAoQQkFMQU5DRV9UWVBFX0lOVBABEhcKE0JBTEFO",
            "Q0VfVFlQRV9ET1VCTEUQAhIWChJCQUxBTkNFX1RZUEVfTU9ORVkQAyplChNQ",
            "cm9maWxlSW1hZ2VTZXR0aW5nEhYKElBST0ZJTEVfSU1BR0VfTk9ORRAAEhoK",
            "FlBST0ZJTEVfSU1BR0VfT1BUSU9OQUwQARIaChZQUk9GSUxFX0lNQUdFX1JF",
            "UVVJUkVEEAIqUgoTUmVjb3ZlclBhc3NEZWxpdmVyeRIVChFERUxJVkVSWV9S",
            "RURJUkVDVBAAEhIKDkRFTElWRVJZX0VNQUlMEAESEAoMREVMSVZFUllfU01T",
            "EAJCYQoYY29tLnBhc3NraXQuZ3JwYy5NZW1iZXJzWixzdGFzaC5wYXNza2l0",
            "LmNvbS9pby9tb2RlbC9zZGsvZ28vaW8vbWVtYmVyc6oCFlBhc3NLaXRHcnBj",
            "U0RLLk1lbWJlcnNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::PassKitGrpcSDK.DistributionReflection.Descriptor, global::PassKitGrpcSDK.LocalizationReflection.Descriptor, global::PassKitGrpcSDK.MetricsReflection.Descriptor, global::PassKitGrpcSDK.ProjectReflection.Descriptor, global::PassKitGrpcSDK.BillingReflection.Descriptor, global::PassKitGrpcSDK.Gateway.ProtocGenOpenapiv2.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PassKitGrpcSDK.Members.ProgramAutoUpDownGradeTierType), typeof(global::PassKitGrpcSDK.Members.BalanceType), typeof(global::PassKitGrpcSDK.Members.ProfileImageSetting), typeof(global::PassKitGrpcSDK.Members.RecoverPassDelivery), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.PointsType), global::PassKitGrpcSDK.Members.PointsType.Parser, new[]{ "BalanceType", "CurrencyCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.Program), global::PassKitGrpcSDK.Members.Program.Parser, new[]{ "Id", "Name", "LocalizedName", "Status", "Quota", "PassTypeIdentifier", "DistributionSettings", "AutoDeleteDaysAfterExpiry", "AutoReminderDaysBeforeExpiry", "ExpiryMessage", "LocalizedExpiryMessage", "AutoDeleteDaysAfterNotInstalling", "PointsType", "SecondaryPointsType", "Metrics", "MetaFieldsList", "Created", "Updated", "ProfileImageSettings", "ApplyFieldToExternalIdOnEnrol", "EventCaptureSettings", "PassRecoverySettings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.EventCaptureSettings), global::PassKitGrpcSDK.Members.EventCaptureSettings.Parser, new[]{ "EventDataRetentionSettings", "SmsConfirmUponCheckIn", "EmailConfirmUponCheckIn" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.ProgramCopyRequest), global::PassKitGrpcSDK.Members.ProgramCopyRequest.Parser, new[]{ "Id", "Name", "Status", "PassTypeIdentifier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.ListProgramsResponse), global::PassKitGrpcSDK.Members.ListProgramsResponse.Parser, new[]{ "Programs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.GetMetaKeysResponse), global::PassKitGrpcSDK.Members.GetMetaKeysResponse.Parser, new[]{ "Keys" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.CustomExternalId), global::PassKitGrpcSDK.Members.CustomExternalId.Parser, new[]{ "FieldUniqueName", "ErrorMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.PassRecoverySettings), global::PassKitGrpcSDK.Members.PassRecoverySettings.Parser, new[]{ "Enabled", "Delivery", "ErrorPageHeader", "ErrorPageBody" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ProgramAutoUpDownGradeTierType {
    /// <summary>
    /// Auto up / down grades based on points.
    /// </summary>
    [pbr::OriginalName("UPDOWNGRADE_POINTS")] UpdowngradePoints = 0,
    /// <summary>
    /// Auto up / down grades based on secondary points.
    /// </summary>
    [pbr::OriginalName("UPDOWNGRADE_SECONDARY_POINTS")] UpdowngradeSecondaryPoints = 1,
    /// <summary>
    /// Auto up / down grades based on tier points.
    /// </summary>
    [pbr::OriginalName("UPDOWNGRADE_TIER_POINTS")] UpdowngradeTierPoints = 2,
    /// <summary>
    /// Auto up / down grades based on # of visits.
    /// </summary>
    [pbr::OriginalName("UPDOWNGRADE_VISITS")] UpdowngradeVisits = 3,
  }

  public enum BalanceType {
    [pbr::OriginalName("BALANCE_TYPE_STRING")] String = 0,
    [pbr::OriginalName("BALANCE_TYPE_INT")] Int = 1,
    [pbr::OriginalName("BALANCE_TYPE_DOUBLE")] Double = 2,
    [pbr::OriginalName("BALANCE_TYPE_MONEY")] Money = 3,
  }

  public enum ProfileImageSetting {
    [pbr::OriginalName("PROFILE_IMAGE_NONE")] ProfileImageNone = 0,
    [pbr::OriginalName("PROFILE_IMAGE_OPTIONAL")] ProfileImageOptional = 1,
    [pbr::OriginalName("PROFILE_IMAGE_REQUIRED")] ProfileImageRequired = 2,
  }

  /// <summary>
  /// Defines what medium we deliver the recovered pass.
  /// </summary>
  public enum RecoverPassDelivery {
    /// <summary>
    /// redirect to pass url.
    /// </summary>
    [pbr::OriginalName("DELIVERY_REDIRECT")] DeliveryRedirect = 0,
    /// <summary>
    /// email user (resend welcome email)
    /// </summary>
    [pbr::OriginalName("DELIVERY_EMAIL")] DeliveryEmail = 1,
    /// <summary>
    /// sms to users phone
    /// </summary>
    [pbr::OriginalName("DELIVERY_SMS")] DeliverySms = 2,
  }

  #endregion

  #region Messages
  public sealed partial class PointsType : pb::IMessage<PointsType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PointsType> _parser = new pb::MessageParser<PointsType>(() => new PointsType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PointsType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.ProgramReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PointsType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PointsType(PointsType other) : this() {
      balanceType_ = other.balanceType_;
      currencyCode_ = other.currencyCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PointsType Clone() {
      return new PointsType(this);
    }

    /// <summary>Field number for the "balanceType" field.</summary>
    public const int BalanceTypeFieldNumber = 1;
    private global::PassKitGrpcSDK.Members.BalanceType balanceType_ = global::PassKitGrpcSDK.Members.BalanceType.String;
    /// <summary>
    /// The balance type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Members.BalanceType BalanceType {
      get { return balanceType_; }
      set {
        balanceType_ = value;
      }
    }

    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 2;
    private string currencyCode_ = "";
    /// <summary>
    /// The currency code; only needs to be provided if balance type equals BALANCE_TYPE_MONEY.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PointsType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PointsType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BalanceType != other.BalanceType) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BalanceType != global::PassKitGrpcSDK.Members.BalanceType.String) hash ^= BalanceType.GetHashCode();
      if (CurrencyCode.Length != 0) hash ^= CurrencyCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BalanceType != global::PassKitGrpcSDK.Members.BalanceType.String) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BalanceType);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CurrencyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BalanceType != global::PassKitGrpcSDK.Members.BalanceType.String) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BalanceType);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CurrencyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BalanceType != global::PassKitGrpcSDK.Members.BalanceType.String) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BalanceType);
      }
      if (CurrencyCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PointsType other) {
      if (other == null) {
        return;
      }
      if (other.BalanceType != global::PassKitGrpcSDK.Members.BalanceType.String) {
        BalanceType = other.BalanceType;
      }
      if (other.CurrencyCode.Length != 0) {
        CurrencyCode = other.CurrencyCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BalanceType = (global::PassKitGrpcSDK.Members.BalanceType) input.ReadEnum();
            break;
          }
          case 18: {
            CurrencyCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BalanceType = (global::PassKitGrpcSDK.Members.BalanceType) input.ReadEnum();
            break;
          }
          case 18: {
            CurrencyCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The Program Details
  /// </summary>
  public sealed partial class Program : pb::IMessage<Program>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Program> _parser = new pb::MessageParser<Program>(() => new Program());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Program> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.ProgramReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Program() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Program(Program other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      localizedName_ = other.localizedName_ != null ? other.localizedName_.Clone() : null;
      status_ = other.status_.Clone();
      quota_ = other.quota_ != null ? other.quota_.Clone() : null;
      passTypeIdentifier_ = other.passTypeIdentifier_;
      distributionSettings_ = other.distributionSettings_ != null ? other.distributionSettings_.Clone() : null;
      autoDeleteDaysAfterExpiry_ = other.autoDeleteDaysAfterExpiry_;
      autoReminderDaysBeforeExpiry_ = other.autoReminderDaysBeforeExpiry_;
      expiryMessage_ = other.expiryMessage_;
      localizedExpiryMessage_ = other.localizedExpiryMessage_ != null ? other.localizedExpiryMessage_.Clone() : null;
      autoDeleteDaysAfterNotInstalling_ = other.autoDeleteDaysAfterNotInstalling_;
      pointsType_ = other.pointsType_ != null ? other.pointsType_.Clone() : null;
      secondaryPointsType_ = other.secondaryPointsType_ != null ? other.secondaryPointsType_.Clone() : null;
      metrics_ = other.metrics_ != null ? other.metrics_.Clone() : null;
      metaFieldsList_ = other.metaFieldsList_.Clone();
      created_ = other.created_ != null ? other.created_.Clone() : null;
      updated_ = other.updated_ != null ? other.updated_.Clone() : null;
      profileImageSettings_ = other.profileImageSettings_;
      applyFieldToExternalIdOnEnrol_ = other.applyFieldToExternalIdOnEnrol_ != null ? other.applyFieldToExternalIdOnEnrol_.Clone() : null;
      eventCaptureSettings_ = other.eventCaptureSettings_ != null ? other.eventCaptureSettings_.Clone() : null;
      passRecoverySettings_ = other.passRecoverySettings_ != null ? other.passRecoverySettings_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Program Clone() {
      return new Program(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// PassKit generated program id (22 characters).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of the membership programs; will be shown on the enrolment page (if set) and issuer name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedName" field.</summary>
    public const int LocalizedNameFieldNumber = 3;
    private global::PassKitGrpcSDK.LocalizedString localizedName_;
    /// <summary>
    /// Localized name of the membership program.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.LocalizedString LocalizedName {
      get { return localizedName_; }
      set {
        localizedName_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private static readonly pb::FieldCodec<global::PassKitGrpcSDK.ProjectStatus> _repeated_status_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::PassKitGrpcSDK.ProjectStatus) x);
    private readonly pbc::RepeatedField<global::PassKitGrpcSDK.ProjectStatus> status_ = new pbc::RepeatedField<global::PassKitGrpcSDK.ProjectStatus>();
    /// <summary>
    /// The program status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PassKitGrpcSDK.ProjectStatus> Status {
      get { return status_; }
    }

    /// <summary>Field number for the "quota" field.</summary>
    public const int QuotaFieldNumber = 5;
    private global::PassKitGrpcSDK.Quota quota_;
    /// <summary>
    /// The project quota.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Quota Quota {
      get { return quota_; }
      set {
        quota_ = value;
      }
    }

    /// <summary>Field number for the "passTypeIdentifier" field.</summary>
    public const int PassTypeIdentifierFieldNumber = 6;
    private string passTypeIdentifier_ = "";
    /// <summary>
    /// Leave empty for draft programs. Needs to be set for programs where status contains PROJECT_PUBLISHED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PassTypeIdentifier {
      get { return passTypeIdentifier_; }
      set {
        passTypeIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "distributionSettings" field.</summary>
    public const int DistributionSettingsFieldNumber = 7;
    private global::PassKitGrpcSDK.DistributionSettings distributionSettings_;
    /// <summary>
    /// Contains the email &amp; sms distribution settings for the program.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.DistributionSettings DistributionSettings {
      get { return distributionSettings_; }
      set {
        distributionSettings_ = value;
      }
    }

    /// <summary>Field number for the "autoDeleteDaysAfterExpiry" field.</summary>
    public const int AutoDeleteDaysAfterExpiryFieldNumber = 8;
    private uint autoDeleteDaysAfterExpiry_;
    /// <summary>
    /// Auto deletes the member after `autoDeleteDaysAfterExpiry` days.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AutoDeleteDaysAfterExpiry {
      get { return autoDeleteDaysAfterExpiry_; }
      set {
        autoDeleteDaysAfterExpiry_ = value;
      }
    }

    /// <summary>Field number for the "autoReminderDaysBeforeExpiry" field.</summary>
    public const int AutoReminderDaysBeforeExpiryFieldNumber = 9;
    private uint autoReminderDaysBeforeExpiry_;
    /// <summary>
    /// Sets how many days before expiry to send a reminder lockscreen message to the member.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AutoReminderDaysBeforeExpiry {
      get { return autoReminderDaysBeforeExpiry_; }
      set {
        autoReminderDaysBeforeExpiry_ = value;
      }
    }

    /// <summary>Field number for the "expiryMessage" field.</summary>
    public const int ExpiryMessageFieldNumber = 10;
    private string expiryMessage_ = "";
    /// <summary>
    /// The message to send to the user `autoReminderDaysBeforeExpiry` days before expiry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpiryMessage {
      get { return expiryMessage_; }
      set {
        expiryMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedExpiryMessage" field.</summary>
    public const int LocalizedExpiryMessageFieldNumber = 11;
    private global::PassKitGrpcSDK.LocalizedString localizedExpiryMessage_;
    /// <summary>
    /// Localized expiry message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.LocalizedString LocalizedExpiryMessage {
      get { return localizedExpiryMessage_; }
      set {
        localizedExpiryMessage_ = value;
      }
    }

    /// <summary>Field number for the "autoDeleteDaysAfterNotInstalling" field.</summary>
    public const int AutoDeleteDaysAfterNotInstallingFieldNumber = 12;
    private uint autoDeleteDaysAfterNotInstalling_;
    /// <summary>
    /// Auto deletes the member `autoDeleteDaysAfterNotInstalling` days after the card has not been installed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AutoDeleteDaysAfterNotInstalling {
      get { return autoDeleteDaysAfterNotInstalling_; }
      set {
        autoDeleteDaysAfterNotInstalling_ = value;
      }
    }

    /// <summary>Field number for the "pointsType" field.</summary>
    public const int PointsTypeFieldNumber = 16;
    private global::PassKitGrpcSDK.Members.PointsType pointsType_;
    /// <summary>
    /// Points format for primary points.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Members.PointsType PointsType {
      get { return pointsType_; }
      set {
        pointsType_ = value;
      }
    }

    /// <summary>Field number for the "secondaryPointsType" field.</summary>
    public const int SecondaryPointsTypeFieldNumber = 17;
    private global::PassKitGrpcSDK.Members.PointsType secondaryPointsType_;
    /// <summary>
    /// Points format for secondary points.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Members.PointsType SecondaryPointsType {
      get { return secondaryPointsType_; }
      set {
        secondaryPointsType_ = value;
      }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 19;
    private global::PassKitGrpcSDK.Metrics metrics_;
    /// <summary>
    /// Issued, installed, uninstalled and invalidated counts. Metrics are not writable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Metrics Metrics {
      get { return metrics_; }
      set {
        metrics_ = value;
      }
    }

    /// <summary>Field number for the "metaFieldsList" field.</summary>
    public const int MetaFieldsListFieldNumber = 20;
    private static readonly pb::FieldCodec<string> _repeated_metaFieldsList_codec
        = pb::FieldCodec.ForString(162);
    private readonly pbc::RepeatedField<string> metaFieldsList_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of dynamic fields which can be used to filter members.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MetaFieldsList {
      get { return metaFieldsList_; }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 21;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// The date the program was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 22;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updated_;
    /// <summary>
    /// The date the program was updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    /// <summary>Field number for the "profileImageSettings" field.</summary>
    public const int ProfileImageSettingsFieldNumber = 23;
    private global::PassKitGrpcSDK.Members.ProfileImageSetting profileImageSettings_ = global::PassKitGrpcSDK.Members.ProfileImageSetting.ProfileImageNone;
    /// <summary>
    /// Indicates if the program requires member profile images on enrol.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Members.ProfileImageSetting ProfileImageSettings {
      get { return profileImageSettings_; }
      set {
        profileImageSettings_ = value;
      }
    }

    /// <summary>Field number for the "applyFieldToExternalIdOnEnrol" field.</summary>
    public const int ApplyFieldToExternalIdOnEnrolFieldNumber = 24;
    private global::PassKitGrpcSDK.Members.CustomExternalId applyFieldToExternalIdOnEnrol_;
    /// <summary>
    /// Auto generate the external id from member object field. e.g. if you set person.emailAddress, then member's email address will be used as a value of external id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Members.CustomExternalId ApplyFieldToExternalIdOnEnrol {
      get { return applyFieldToExternalIdOnEnrol_; }
      set {
        applyFieldToExternalIdOnEnrol_ = value;
      }
    }

    /// <summary>Field number for the "eventCaptureSettings" field.</summary>
    public const int EventCaptureSettingsFieldNumber = 25;
    private global::PassKitGrpcSDK.Members.EventCaptureSettings eventCaptureSettings_;
    /// <summary>
    /// Event settings for the program. Can be used if the program captures member events.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Members.EventCaptureSettings EventCaptureSettings {
      get { return eventCaptureSettings_; }
      set {
        eventCaptureSettings_ = value;
      }
    }

    /// <summary>Field number for the "passRecoverySettings" field.</summary>
    public const int PassRecoverySettingsFieldNumber = 26;
    private global::PassKitGrpcSDK.Members.PassRecoverySettings passRecoverySettings_;
    /// <summary>
    /// Settings for how users can recover passes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Members.PassRecoverySettings PassRecoverySettings {
      get { return passRecoverySettings_; }
      set {
        passRecoverySettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Program);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Program other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(LocalizedName, other.LocalizedName)) return false;
      if(!status_.Equals(other.status_)) return false;
      if (!object.Equals(Quota, other.Quota)) return false;
      if (PassTypeIdentifier != other.PassTypeIdentifier) return false;
      if (!object.Equals(DistributionSettings, other.DistributionSettings)) return false;
      if (AutoDeleteDaysAfterExpiry != other.AutoDeleteDaysAfterExpiry) return false;
      if (AutoReminderDaysBeforeExpiry != other.AutoReminderDaysBeforeExpiry) return false;
      if (ExpiryMessage != other.ExpiryMessage) return false;
      if (!object.Equals(LocalizedExpiryMessage, other.LocalizedExpiryMessage)) return false;
      if (AutoDeleteDaysAfterNotInstalling != other.AutoDeleteDaysAfterNotInstalling) return false;
      if (!object.Equals(PointsType, other.PointsType)) return false;
      if (!object.Equals(SecondaryPointsType, other.SecondaryPointsType)) return false;
      if (!object.Equals(Metrics, other.Metrics)) return false;
      if(!metaFieldsList_.Equals(other.metaFieldsList_)) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (!object.Equals(Updated, other.Updated)) return false;
      if (ProfileImageSettings != other.ProfileImageSettings) return false;
      if (!object.Equals(ApplyFieldToExternalIdOnEnrol, other.ApplyFieldToExternalIdOnEnrol)) return false;
      if (!object.Equals(EventCaptureSettings, other.EventCaptureSettings)) return false;
      if (!object.Equals(PassRecoverySettings, other.PassRecoverySettings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (localizedName_ != null) hash ^= LocalizedName.GetHashCode();
      hash ^= status_.GetHashCode();
      if (quota_ != null) hash ^= Quota.GetHashCode();
      if (PassTypeIdentifier.Length != 0) hash ^= PassTypeIdentifier.GetHashCode();
      if (distributionSettings_ != null) hash ^= DistributionSettings.GetHashCode();
      if (AutoDeleteDaysAfterExpiry != 0) hash ^= AutoDeleteDaysAfterExpiry.GetHashCode();
      if (AutoReminderDaysBeforeExpiry != 0) hash ^= AutoReminderDaysBeforeExpiry.GetHashCode();
      if (ExpiryMessage.Length != 0) hash ^= ExpiryMessage.GetHashCode();
      if (localizedExpiryMessage_ != null) hash ^= LocalizedExpiryMessage.GetHashCode();
      if (AutoDeleteDaysAfterNotInstalling != 0) hash ^= AutoDeleteDaysAfterNotInstalling.GetHashCode();
      if (pointsType_ != null) hash ^= PointsType.GetHashCode();
      if (secondaryPointsType_ != null) hash ^= SecondaryPointsType.GetHashCode();
      if (metrics_ != null) hash ^= Metrics.GetHashCode();
      hash ^= metaFieldsList_.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (updated_ != null) hash ^= Updated.GetHashCode();
      if (ProfileImageSettings != global::PassKitGrpcSDK.Members.ProfileImageSetting.ProfileImageNone) hash ^= ProfileImageSettings.GetHashCode();
      if (applyFieldToExternalIdOnEnrol_ != null) hash ^= ApplyFieldToExternalIdOnEnrol.GetHashCode();
      if (eventCaptureSettings_ != null) hash ^= EventCaptureSettings.GetHashCode();
      if (passRecoverySettings_ != null) hash ^= PassRecoverySettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (localizedName_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LocalizedName);
      }
      status_.WriteTo(output, _repeated_status_codec);
      if (quota_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Quota);
      }
      if (PassTypeIdentifier.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PassTypeIdentifier);
      }
      if (distributionSettings_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DistributionSettings);
      }
      if (AutoDeleteDaysAfterExpiry != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(AutoDeleteDaysAfterExpiry);
      }
      if (AutoReminderDaysBeforeExpiry != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(AutoReminderDaysBeforeExpiry);
      }
      if (ExpiryMessage.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ExpiryMessage);
      }
      if (localizedExpiryMessage_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LocalizedExpiryMessage);
      }
      if (AutoDeleteDaysAfterNotInstalling != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(AutoDeleteDaysAfterNotInstalling);
      }
      if (pointsType_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(PointsType);
      }
      if (secondaryPointsType_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(SecondaryPointsType);
      }
      if (metrics_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(Metrics);
      }
      metaFieldsList_.WriteTo(output, _repeated_metaFieldsList_codec);
      if (created_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Updated);
      }
      if (ProfileImageSettings != global::PassKitGrpcSDK.Members.ProfileImageSetting.ProfileImageNone) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) ProfileImageSettings);
      }
      if (applyFieldToExternalIdOnEnrol_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(ApplyFieldToExternalIdOnEnrol);
      }
      if (eventCaptureSettings_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(EventCaptureSettings);
      }
      if (passRecoverySettings_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(PassRecoverySettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (localizedName_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LocalizedName);
      }
      status_.WriteTo(ref output, _repeated_status_codec);
      if (quota_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Quota);
      }
      if (PassTypeIdentifier.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PassTypeIdentifier);
      }
      if (distributionSettings_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DistributionSettings);
      }
      if (AutoDeleteDaysAfterExpiry != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(AutoDeleteDaysAfterExpiry);
      }
      if (AutoReminderDaysBeforeExpiry != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(AutoReminderDaysBeforeExpiry);
      }
      if (ExpiryMessage.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ExpiryMessage);
      }
      if (localizedExpiryMessage_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LocalizedExpiryMessage);
      }
      if (AutoDeleteDaysAfterNotInstalling != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(AutoDeleteDaysAfterNotInstalling);
      }
      if (pointsType_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(PointsType);
      }
      if (secondaryPointsType_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(SecondaryPointsType);
      }
      if (metrics_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(Metrics);
      }
      metaFieldsList_.WriteTo(ref output, _repeated_metaFieldsList_codec);
      if (created_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Updated);
      }
      if (ProfileImageSettings != global::PassKitGrpcSDK.Members.ProfileImageSetting.ProfileImageNone) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) ProfileImageSettings);
      }
      if (applyFieldToExternalIdOnEnrol_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(ApplyFieldToExternalIdOnEnrol);
      }
      if (eventCaptureSettings_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(EventCaptureSettings);
      }
      if (passRecoverySettings_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(PassRecoverySettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (localizedName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedName);
      }
      size += status_.CalculateSize(_repeated_status_codec);
      if (quota_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quota);
      }
      if (PassTypeIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PassTypeIdentifier);
      }
      if (distributionSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DistributionSettings);
      }
      if (AutoDeleteDaysAfterExpiry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AutoDeleteDaysAfterExpiry);
      }
      if (AutoReminderDaysBeforeExpiry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AutoReminderDaysBeforeExpiry);
      }
      if (ExpiryMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpiryMessage);
      }
      if (localizedExpiryMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedExpiryMessage);
      }
      if (AutoDeleteDaysAfterNotInstalling != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AutoDeleteDaysAfterNotInstalling);
      }
      if (pointsType_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PointsType);
      }
      if (secondaryPointsType_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SecondaryPointsType);
      }
      if (metrics_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Metrics);
      }
      size += metaFieldsList_.CalculateSize(_repeated_metaFieldsList_codec);
      if (created_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (updated_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Updated);
      }
      if (ProfileImageSettings != global::PassKitGrpcSDK.Members.ProfileImageSetting.ProfileImageNone) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ProfileImageSettings);
      }
      if (applyFieldToExternalIdOnEnrol_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ApplyFieldToExternalIdOnEnrol);
      }
      if (eventCaptureSettings_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EventCaptureSettings);
      }
      if (passRecoverySettings_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PassRecoverySettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Program other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.localizedName_ != null) {
        if (localizedName_ == null) {
          LocalizedName = new global::PassKitGrpcSDK.LocalizedString();
        }
        LocalizedName.MergeFrom(other.LocalizedName);
      }
      status_.Add(other.status_);
      if (other.quota_ != null) {
        if (quota_ == null) {
          Quota = new global::PassKitGrpcSDK.Quota();
        }
        Quota.MergeFrom(other.Quota);
      }
      if (other.PassTypeIdentifier.Length != 0) {
        PassTypeIdentifier = other.PassTypeIdentifier;
      }
      if (other.distributionSettings_ != null) {
        if (distributionSettings_ == null) {
          DistributionSettings = new global::PassKitGrpcSDK.DistributionSettings();
        }
        DistributionSettings.MergeFrom(other.DistributionSettings);
      }
      if (other.AutoDeleteDaysAfterExpiry != 0) {
        AutoDeleteDaysAfterExpiry = other.AutoDeleteDaysAfterExpiry;
      }
      if (other.AutoReminderDaysBeforeExpiry != 0) {
        AutoReminderDaysBeforeExpiry = other.AutoReminderDaysBeforeExpiry;
      }
      if (other.ExpiryMessage.Length != 0) {
        ExpiryMessage = other.ExpiryMessage;
      }
      if (other.localizedExpiryMessage_ != null) {
        if (localizedExpiryMessage_ == null) {
          LocalizedExpiryMessage = new global::PassKitGrpcSDK.LocalizedString();
        }
        LocalizedExpiryMessage.MergeFrom(other.LocalizedExpiryMessage);
      }
      if (other.AutoDeleteDaysAfterNotInstalling != 0) {
        AutoDeleteDaysAfterNotInstalling = other.AutoDeleteDaysAfterNotInstalling;
      }
      if (other.pointsType_ != null) {
        if (pointsType_ == null) {
          PointsType = new global::PassKitGrpcSDK.Members.PointsType();
        }
        PointsType.MergeFrom(other.PointsType);
      }
      if (other.secondaryPointsType_ != null) {
        if (secondaryPointsType_ == null) {
          SecondaryPointsType = new global::PassKitGrpcSDK.Members.PointsType();
        }
        SecondaryPointsType.MergeFrom(other.SecondaryPointsType);
      }
      if (other.metrics_ != null) {
        if (metrics_ == null) {
          Metrics = new global::PassKitGrpcSDK.Metrics();
        }
        Metrics.MergeFrom(other.Metrics);
      }
      metaFieldsList_.Add(other.metaFieldsList_);
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      if (other.updated_ != null) {
        if (updated_ == null) {
          Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Updated.MergeFrom(other.Updated);
      }
      if (other.ProfileImageSettings != global::PassKitGrpcSDK.Members.ProfileImageSetting.ProfileImageNone) {
        ProfileImageSettings = other.ProfileImageSettings;
      }
      if (other.applyFieldToExternalIdOnEnrol_ != null) {
        if (applyFieldToExternalIdOnEnrol_ == null) {
          ApplyFieldToExternalIdOnEnrol = new global::PassKitGrpcSDK.Members.CustomExternalId();
        }
        ApplyFieldToExternalIdOnEnrol.MergeFrom(other.ApplyFieldToExternalIdOnEnrol);
      }
      if (other.eventCaptureSettings_ != null) {
        if (eventCaptureSettings_ == null) {
          EventCaptureSettings = new global::PassKitGrpcSDK.Members.EventCaptureSettings();
        }
        EventCaptureSettings.MergeFrom(other.EventCaptureSettings);
      }
      if (other.passRecoverySettings_ != null) {
        if (passRecoverySettings_ == null) {
          PassRecoverySettings = new global::PassKitGrpcSDK.Members.PassRecoverySettings();
        }
        PassRecoverySettings.MergeFrom(other.PassRecoverySettings);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (localizedName_ == null) {
              LocalizedName = new global::PassKitGrpcSDK.LocalizedString();
            }
            input.ReadMessage(LocalizedName);
            break;
          }
          case 34:
          case 32: {
            status_.AddEntriesFrom(input, _repeated_status_codec);
            break;
          }
          case 42: {
            if (quota_ == null) {
              Quota = new global::PassKitGrpcSDK.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
          case 50: {
            PassTypeIdentifier = input.ReadString();
            break;
          }
          case 58: {
            if (distributionSettings_ == null) {
              DistributionSettings = new global::PassKitGrpcSDK.DistributionSettings();
            }
            input.ReadMessage(DistributionSettings);
            break;
          }
          case 64: {
            AutoDeleteDaysAfterExpiry = input.ReadUInt32();
            break;
          }
          case 72: {
            AutoReminderDaysBeforeExpiry = input.ReadUInt32();
            break;
          }
          case 82: {
            ExpiryMessage = input.ReadString();
            break;
          }
          case 90: {
            if (localizedExpiryMessage_ == null) {
              LocalizedExpiryMessage = new global::PassKitGrpcSDK.LocalizedString();
            }
            input.ReadMessage(LocalizedExpiryMessage);
            break;
          }
          case 96: {
            AutoDeleteDaysAfterNotInstalling = input.ReadUInt32();
            break;
          }
          case 130: {
            if (pointsType_ == null) {
              PointsType = new global::PassKitGrpcSDK.Members.PointsType();
            }
            input.ReadMessage(PointsType);
            break;
          }
          case 138: {
            if (secondaryPointsType_ == null) {
              SecondaryPointsType = new global::PassKitGrpcSDK.Members.PointsType();
            }
            input.ReadMessage(SecondaryPointsType);
            break;
          }
          case 154: {
            if (metrics_ == null) {
              Metrics = new global::PassKitGrpcSDK.Metrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
          case 162: {
            metaFieldsList_.AddEntriesFrom(input, _repeated_metaFieldsList_codec);
            break;
          }
          case 170: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 178: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
          case 184: {
            ProfileImageSettings = (global::PassKitGrpcSDK.Members.ProfileImageSetting) input.ReadEnum();
            break;
          }
          case 194: {
            if (applyFieldToExternalIdOnEnrol_ == null) {
              ApplyFieldToExternalIdOnEnrol = new global::PassKitGrpcSDK.Members.CustomExternalId();
            }
            input.ReadMessage(ApplyFieldToExternalIdOnEnrol);
            break;
          }
          case 202: {
            if (eventCaptureSettings_ == null) {
              EventCaptureSettings = new global::PassKitGrpcSDK.Members.EventCaptureSettings();
            }
            input.ReadMessage(EventCaptureSettings);
            break;
          }
          case 210: {
            if (passRecoverySettings_ == null) {
              PassRecoverySettings = new global::PassKitGrpcSDK.Members.PassRecoverySettings();
            }
            input.ReadMessage(PassRecoverySettings);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (localizedName_ == null) {
              LocalizedName = new global::PassKitGrpcSDK.LocalizedString();
            }
            input.ReadMessage(LocalizedName);
            break;
          }
          case 34:
          case 32: {
            status_.AddEntriesFrom(ref input, _repeated_status_codec);
            break;
          }
          case 42: {
            if (quota_ == null) {
              Quota = new global::PassKitGrpcSDK.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
          case 50: {
            PassTypeIdentifier = input.ReadString();
            break;
          }
          case 58: {
            if (distributionSettings_ == null) {
              DistributionSettings = new global::PassKitGrpcSDK.DistributionSettings();
            }
            input.ReadMessage(DistributionSettings);
            break;
          }
          case 64: {
            AutoDeleteDaysAfterExpiry = input.ReadUInt32();
            break;
          }
          case 72: {
            AutoReminderDaysBeforeExpiry = input.ReadUInt32();
            break;
          }
          case 82: {
            ExpiryMessage = input.ReadString();
            break;
          }
          case 90: {
            if (localizedExpiryMessage_ == null) {
              LocalizedExpiryMessage = new global::PassKitGrpcSDK.LocalizedString();
            }
            input.ReadMessage(LocalizedExpiryMessage);
            break;
          }
          case 96: {
            AutoDeleteDaysAfterNotInstalling = input.ReadUInt32();
            break;
          }
          case 130: {
            if (pointsType_ == null) {
              PointsType = new global::PassKitGrpcSDK.Members.PointsType();
            }
            input.ReadMessage(PointsType);
            break;
          }
          case 138: {
            if (secondaryPointsType_ == null) {
              SecondaryPointsType = new global::PassKitGrpcSDK.Members.PointsType();
            }
            input.ReadMessage(SecondaryPointsType);
            break;
          }
          case 154: {
            if (metrics_ == null) {
              Metrics = new global::PassKitGrpcSDK.Metrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
          case 162: {
            metaFieldsList_.AddEntriesFrom(ref input, _repeated_metaFieldsList_codec);
            break;
          }
          case 170: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 178: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
          case 184: {
            ProfileImageSettings = (global::PassKitGrpcSDK.Members.ProfileImageSetting) input.ReadEnum();
            break;
          }
          case 194: {
            if (applyFieldToExternalIdOnEnrol_ == null) {
              ApplyFieldToExternalIdOnEnrol = new global::PassKitGrpcSDK.Members.CustomExternalId();
            }
            input.ReadMessage(ApplyFieldToExternalIdOnEnrol);
            break;
          }
          case 202: {
            if (eventCaptureSettings_ == null) {
              EventCaptureSettings = new global::PassKitGrpcSDK.Members.EventCaptureSettings();
            }
            input.ReadMessage(EventCaptureSettings);
            break;
          }
          case 210: {
            if (passRecoverySettings_ == null) {
              PassRecoverySettings = new global::PassKitGrpcSDK.Members.PassRecoverySettings();
            }
            input.ReadMessage(PassRecoverySettings);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventCaptureSettings : pb::IMessage<EventCaptureSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventCaptureSettings> _parser = new pb::MessageParser<EventCaptureSettings>(() => new EventCaptureSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventCaptureSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.ProgramReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventCaptureSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventCaptureSettings(EventCaptureSettings other) : this() {
      eventDataRetentionSettings_ = other.eventDataRetentionSettings_.Clone();
      smsConfirmUponCheckIn_ = other.smsConfirmUponCheckIn_;
      emailConfirmUponCheckIn_ = other.emailConfirmUponCheckIn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventCaptureSettings Clone() {
      return new EventCaptureSettings(this);
    }

    /// <summary>Field number for the "eventDataRetentionSettings" field.</summary>
    public const int EventDataRetentionSettingsFieldNumber = 1;
    private static readonly pbc::MapField<uint, uint>.Codec _map_eventDataRetentionSettings_codec
        = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 10);
    private readonly pbc::MapField<uint, uint> eventDataRetentionSettings_ = new pbc::MapField<uint, uint>();
    /// <summary>
    /// Can be used to set data retention on event data. The key is the MemberEvents ENUM. Value is the data retention in days from the date the event record is created in the PassKit database.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<uint, uint> EventDataRetentionSettings {
      get { return eventDataRetentionSettings_; }
    }

    /// <summary>Field number for the "smsConfirmUponCheckIn" field.</summary>
    public const int SmsConfirmUponCheckInFieldNumber = 2;
    private bool smsConfirmUponCheckIn_;
    /// <summary>
    /// If set, sends an SMS with unique link to member's registered phone number on check-in. Member will have to click the link and show unique code to merchant / attendant.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SmsConfirmUponCheckIn {
      get { return smsConfirmUponCheckIn_; }
      set {
        smsConfirmUponCheckIn_ = value;
      }
    }

    /// <summary>Field number for the "emailConfirmUponCheckIn" field.</summary>
    public const int EmailConfirmUponCheckInFieldNumber = 3;
    private bool emailConfirmUponCheckIn_;
    /// <summary>
    /// If set, sends an Email with unique link to member's registered email on check-in. Member will have to click the link and show unique code to merchant / attendant.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EmailConfirmUponCheckIn {
      get { return emailConfirmUponCheckIn_; }
      set {
        emailConfirmUponCheckIn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventCaptureSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventCaptureSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventDataRetentionSettings.Equals(other.EventDataRetentionSettings)) return false;
      if (SmsConfirmUponCheckIn != other.SmsConfirmUponCheckIn) return false;
      if (EmailConfirmUponCheckIn != other.EmailConfirmUponCheckIn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventDataRetentionSettings.GetHashCode();
      if (SmsConfirmUponCheckIn != false) hash ^= SmsConfirmUponCheckIn.GetHashCode();
      if (EmailConfirmUponCheckIn != false) hash ^= EmailConfirmUponCheckIn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventDataRetentionSettings_.WriteTo(output, _map_eventDataRetentionSettings_codec);
      if (SmsConfirmUponCheckIn != false) {
        output.WriteRawTag(16);
        output.WriteBool(SmsConfirmUponCheckIn);
      }
      if (EmailConfirmUponCheckIn != false) {
        output.WriteRawTag(24);
        output.WriteBool(EmailConfirmUponCheckIn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventDataRetentionSettings_.WriteTo(ref output, _map_eventDataRetentionSettings_codec);
      if (SmsConfirmUponCheckIn != false) {
        output.WriteRawTag(16);
        output.WriteBool(SmsConfirmUponCheckIn);
      }
      if (EmailConfirmUponCheckIn != false) {
        output.WriteRawTag(24);
        output.WriteBool(EmailConfirmUponCheckIn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventDataRetentionSettings_.CalculateSize(_map_eventDataRetentionSettings_codec);
      if (SmsConfirmUponCheckIn != false) {
        size += 1 + 1;
      }
      if (EmailConfirmUponCheckIn != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventCaptureSettings other) {
      if (other == null) {
        return;
      }
      eventDataRetentionSettings_.Add(other.eventDataRetentionSettings_);
      if (other.SmsConfirmUponCheckIn != false) {
        SmsConfirmUponCheckIn = other.SmsConfirmUponCheckIn;
      }
      if (other.EmailConfirmUponCheckIn != false) {
        EmailConfirmUponCheckIn = other.EmailConfirmUponCheckIn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventDataRetentionSettings_.AddEntriesFrom(input, _map_eventDataRetentionSettings_codec);
            break;
          }
          case 16: {
            SmsConfirmUponCheckIn = input.ReadBool();
            break;
          }
          case 24: {
            EmailConfirmUponCheckIn = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventDataRetentionSettings_.AddEntriesFrom(ref input, _map_eventDataRetentionSettings_codec);
            break;
          }
          case 16: {
            SmsConfirmUponCheckIn = input.ReadBool();
            break;
          }
          case 24: {
            EmailConfirmUponCheckIn = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains payload for copying a program
  /// </summary>
  public sealed partial class ProgramCopyRequest : pb::IMessage<ProgramCopyRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProgramCopyRequest> _parser = new pb::MessageParser<ProgramCopyRequest>(() => new ProgramCopyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProgramCopyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.ProgramReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgramCopyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgramCopyRequest(ProgramCopyRequest other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      status_ = other.status_.Clone();
      passTypeIdentifier_ = other.passTypeIdentifier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgramCopyRequest Clone() {
      return new ProgramCopyRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// uuid of the program to copy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// optional name for the new program.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private static readonly pb::FieldCodec<global::PassKitGrpcSDK.ProjectStatus> _repeated_status_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::PassKitGrpcSDK.ProjectStatus) x);
    private readonly pbc::RepeatedField<global::PassKitGrpcSDK.ProjectStatus> status_ = new pbc::RepeatedField<global::PassKitGrpcSDK.ProjectStatus>();
    /// <summary>
    /// Status to set the copied program to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PassKitGrpcSDK.ProjectStatus> Status {
      get { return status_; }
    }

    /// <summary>Field number for the "passTypeIdentifier" field.</summary>
    public const int PassTypeIdentifierFieldNumber = 4;
    private string passTypeIdentifier_ = "";
    /// <summary>
    /// Can optionally be provided if setting status to published (requires a prod cert).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PassTypeIdentifier {
      get { return passTypeIdentifier_; }
      set {
        passTypeIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProgramCopyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProgramCopyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if(!status_.Equals(other.status_)) return false;
      if (PassTypeIdentifier != other.PassTypeIdentifier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= status_.GetHashCode();
      if (PassTypeIdentifier.Length != 0) hash ^= PassTypeIdentifier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      status_.WriteTo(output, _repeated_status_codec);
      if (PassTypeIdentifier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PassTypeIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      status_.WriteTo(ref output, _repeated_status_codec);
      if (PassTypeIdentifier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PassTypeIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += status_.CalculateSize(_repeated_status_codec);
      if (PassTypeIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PassTypeIdentifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProgramCopyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      status_.Add(other.status_);
      if (other.PassTypeIdentifier.Length != 0) {
        PassTypeIdentifier = other.PassTypeIdentifier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            status_.AddEntriesFrom(input, _repeated_status_codec);
            break;
          }
          case 34: {
            PassTypeIdentifier = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            status_.AddEntriesFrom(ref input, _repeated_status_codec);
            break;
          }
          case 34: {
            PassTypeIdentifier = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains an array of programs.
  /// </summary>
  public sealed partial class ListProgramsResponse : pb::IMessage<ListProgramsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListProgramsResponse> _parser = new pb::MessageParser<ListProgramsResponse>(() => new ListProgramsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListProgramsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.ProgramReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListProgramsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListProgramsResponse(ListProgramsResponse other) : this() {
      programs_ = other.programs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListProgramsResponse Clone() {
      return new ListProgramsResponse(this);
    }

    /// <summary>Field number for the "programs" field.</summary>
    public const int ProgramsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PassKitGrpcSDK.Members.Program> _repeated_programs_codec
        = pb::FieldCodec.ForMessage(10, global::PassKitGrpcSDK.Members.Program.Parser);
    private readonly pbc::RepeatedField<global::PassKitGrpcSDK.Members.Program> programs_ = new pbc::RepeatedField<global::PassKitGrpcSDK.Members.Program>();
    /// <summary>
    /// An array of programs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PassKitGrpcSDK.Members.Program> Programs {
      get { return programs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListProgramsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListProgramsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!programs_.Equals(other.programs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= programs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      programs_.WriteTo(output, _repeated_programs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      programs_.WriteTo(ref output, _repeated_programs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += programs_.CalculateSize(_repeated_programs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListProgramsResponse other) {
      if (other == null) {
        return;
      }
      programs_.Add(other.programs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            programs_.AddEntriesFrom(input, _repeated_programs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            programs_.AddEntriesFrom(ref input, _repeated_programs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetMetaKeysResponse : pb::IMessage<GetMetaKeysResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMetaKeysResponse> _parser = new pb::MessageParser<GetMetaKeysResponse>(() => new GetMetaKeysResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMetaKeysResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.ProgramReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetaKeysResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetaKeysResponse(GetMetaKeysResponse other) : this() {
      keys_ = other.keys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetaKeysResponse Clone() {
      return new GetMetaKeysResponse(this);
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_keys_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> keys_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// An array of distinct meta keys.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Keys {
      get { return keys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMetaKeysResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMetaKeysResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!keys_.Equals(other.keys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= keys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      keys_.WriteTo(output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      keys_.WriteTo(ref output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMetaKeysResponse other) {
      if (other == null) {
        return;
      }
      keys_.Add(other.keys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            keys_.AddEntriesFrom(ref input, _repeated_keys_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CustomExternalId : pb::IMessage<CustomExternalId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CustomExternalId> _parser = new pb::MessageParser<CustomExternalId>(() => new CustomExternalId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomExternalId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.ProgramReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomExternalId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomExternalId(CustomExternalId other) : this() {
      fieldUniqueName_ = other.fieldUniqueName_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomExternalId Clone() {
      return new CustomExternalId(this);
    }

    /// <summary>Field number for the "fieldUniqueName" field.</summary>
    public const int FieldUniqueNameFieldNumber = 1;
    private string fieldUniqueName_ = "";
    /// <summary>
    /// Field name which becomes a source of external id value. Available unique names are: null, person.emailAddress, person.mobileNumber.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldUniqueName {
      get { return fieldUniqueName_; }
      set {
        fieldUniqueName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 2;
    private string errorMessage_ = "";
    /// <summary>
    /// Error message shown when provided value has been taken already.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomExternalId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomExternalId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldUniqueName != other.FieldUniqueName) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldUniqueName.Length != 0) hash ^= FieldUniqueName.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FieldUniqueName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldUniqueName);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FieldUniqueName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldUniqueName);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldUniqueName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldUniqueName);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomExternalId other) {
      if (other == null) {
        return;
      }
      if (other.FieldUniqueName.Length != 0) {
        FieldUniqueName = other.FieldUniqueName;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FieldUniqueName = input.ReadString();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FieldUniqueName = input.ReadString();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PassRecoverySettings details the logic for recovering a pass.
  /// </summary>
  public sealed partial class PassRecoverySettings : pb::IMessage<PassRecoverySettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PassRecoverySettings> _parser = new pb::MessageParser<PassRecoverySettings>(() => new PassRecoverySettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PassRecoverySettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.ProgramReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassRecoverySettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassRecoverySettings(PassRecoverySettings other) : this() {
      enabled_ = other.enabled_;
      delivery_ = other.delivery_;
      errorPageHeader_ = other.errorPageHeader_;
      errorPageBody_ = other.errorPageBody_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassRecoverySettings Clone() {
      return new PassRecoverySettings(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private bool enabled_;
    /// <summary>
    /// Determines if users can recover passes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    /// <summary>Field number for the "delivery" field.</summary>
    public const int DeliveryFieldNumber = 2;
    private global::PassKitGrpcSDK.Members.RecoverPassDelivery delivery_ = global::PassKitGrpcSDK.Members.RecoverPassDelivery.DeliveryRedirect;
    /// <summary>
    /// Determines the medium that the pass is delivered to the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Members.RecoverPassDelivery Delivery {
      get { return delivery_; }
      set {
        delivery_ = value;
      }
    }

    /// <summary>Field number for the "errorPageHeader" field.</summary>
    public const int ErrorPageHeaderFieldNumber = 3;
    private string errorPageHeader_ = "";
    /// <summary>
    /// The header text for the error page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorPageHeader {
      get { return errorPageHeader_; }
      set {
        errorPageHeader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "errorPageBody" field.</summary>
    public const int ErrorPageBodyFieldNumber = 4;
    private string errorPageBody_ = "";
    /// <summary>
    /// The body text for the error page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorPageBody {
      get { return errorPageBody_; }
      set {
        errorPageBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PassRecoverySettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PassRecoverySettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      if (Delivery != other.Delivery) return false;
      if (ErrorPageHeader != other.ErrorPageHeader) return false;
      if (ErrorPageBody != other.ErrorPageBody) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (Delivery != global::PassKitGrpcSDK.Members.RecoverPassDelivery.DeliveryRedirect) hash ^= Delivery.GetHashCode();
      if (ErrorPageHeader.Length != 0) hash ^= ErrorPageHeader.GetHashCode();
      if (ErrorPageBody.Length != 0) hash ^= ErrorPageBody.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (Delivery != global::PassKitGrpcSDK.Members.RecoverPassDelivery.DeliveryRedirect) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Delivery);
      }
      if (ErrorPageHeader.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorPageHeader);
      }
      if (ErrorPageBody.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ErrorPageBody);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (Delivery != global::PassKitGrpcSDK.Members.RecoverPassDelivery.DeliveryRedirect) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Delivery);
      }
      if (ErrorPageHeader.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ErrorPageHeader);
      }
      if (ErrorPageBody.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ErrorPageBody);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (Delivery != global::PassKitGrpcSDK.Members.RecoverPassDelivery.DeliveryRedirect) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Delivery);
      }
      if (ErrorPageHeader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorPageHeader);
      }
      if (ErrorPageBody.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorPageBody);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PassRecoverySettings other) {
      if (other == null) {
        return;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      if (other.Delivery != global::PassKitGrpcSDK.Members.RecoverPassDelivery.DeliveryRedirect) {
        Delivery = other.Delivery;
      }
      if (other.ErrorPageHeader.Length != 0) {
        ErrorPageHeader = other.ErrorPageHeader;
      }
      if (other.ErrorPageBody.Length != 0) {
        ErrorPageBody = other.ErrorPageBody;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 16: {
            Delivery = (global::PassKitGrpcSDK.Members.RecoverPassDelivery) input.ReadEnum();
            break;
          }
          case 26: {
            ErrorPageHeader = input.ReadString();
            break;
          }
          case 34: {
            ErrorPageBody = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 16: {
            Delivery = (global::PassKitGrpcSDK.Members.RecoverPassDelivery) input.ReadEnum();
            break;
          }
          case 26: {
            ErrorPageHeader = input.ReadString();
            break;
          }
          case 34: {
            ErrorPageBody = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
