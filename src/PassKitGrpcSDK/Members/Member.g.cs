// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/member/member.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PassKitGrpcSDK.Members {

  /// <summary>Holder for reflection information generated from io/member/member.proto</summary>
  public static partial class MemberReflection {

    #region Descriptor
    /// <summary>File descriptor for io/member/member.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MemberReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZpby9tZW1iZXIvbWVtYmVyLnByb3RvEgdtZW1iZXJzGh9nb29nbGUvcHJv",
            "dG9idWYvdGltZXN0YW1wLnByb3RvGhdpby9jb21tb24vbWV0cmljcy5wcm90",
            "bxoUaW8vY29tbW9uL25vdGUucHJvdG8aGmlvL2NvbW1vbi9wYWdpbmF0aW9u",
            "LnByb3RvGhZpby9jb21tb24vZmlsdGVyLnByb3RvGhRpby9jb21tb24vcGFz",
            "cy5wcm90bxoYaW8vY29tbW9uL3BlcnNvbmFsLnByb3RvGhZpby9jb21tb24v",
            "ZXhwaXJ5LnByb3RvGhVpby9tZW1iZXIvZXZlbnQucHJvdG8aLnByb3RvYy1n",
            "ZW4tb3BlbmFwaXYyL29wdGlvbnMvYW5ub3RhdGlvbnMucHJvdG8itAcKBk1l",
            "bWJlchIKCgJpZBgBIAEoCRISCgpleHRlcm5hbElkGAIgASgJEhoKEmdyb3Vw",
            "aW5nSWRlbnRpZmllchgDIAEoCRIOCgZ0aWVySWQYBCABKAkSEQoJcHJvZ3Jh",
            "bUlkGAUgASgJEhoKBnBlcnNvbhgGIAEoCzIKLmlvLlBlcnNvbhIvCghtZXRh",
            "RGF0YRgHIAMoCzIdLm1lbWJlcnMuTWVtYmVyLk1ldGFEYXRhRW50cnkSDgoG",
            "b3B0T3V0GA0gASgIEg4KBnBvaW50cxgOIAEoAhIXCg9zZWNvbmRhcnlQb2lu",
            "dHMYDyABKAISEgoKdGllclBvaW50cxgQIAEoDRIuCgpleHBpcnlEYXRlGBIg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIlCgZzdGF0dXMYEyAB",
            "KA4yFS5tZW1iZXJzLk1lbWJlclN0YXR1cxIoCg1wYXNzT3ZlcnJpZGVzGBQg",
            "ASgLMhEuaW8uUGFzc092ZXJyaWRlcxIiCgxwYXNzTWV0YURhdGEYFSABKAsy",
            "DC5pby5NZXRhZGF0YRIXCgVub3RlcxgaIAMoCzIILmlvLk5vdGUSNgoSY3Vy",
            "cmVudFRpZXJBd2FyZGVkGBsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBI2ChJjdXJyZW50VGllckV4cGlyZXMYHCABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEisKB2NyZWF0ZWQYHSABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEisKB3VwZGF0ZWQYHiABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEhQKDHByb2ZpbGVJbWFnZRgfIAEoCRovCg1NZXRh",
            "RGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAE6qwGS",
            "QacBCqQBKgZNZW1iZXIyhAFCYXNpYyBtZW1iZXIgaW5mb3JtYXRpb24gbmVl",
            "ZHMgdG8gYmUgcHJvdmlkZWQuIE1lbWJlciBpbmZvcm1hdGlvbiBpcyBkZWxl",
            "dGVkIG9yIHJlbmRlcmVkIHVudXNhYmxlIG9uY2UgdGhlIG1lbWJlciByZWNv",
            "cmQgaXMgZGVsZXRlZC7SAQZ0aWVySWTSAQlwcm9ncmFtSWRKBAgIEAlKBAgJ",
            "EApKBAgKEAtKBAgLEAxKBAgMEA1KBAgWEBdKBAgXEBhKBAgYEBlKBAgZEBoi",
            "SAofTWVtYmVyUmVjb3JkQnlFeHRlcm5hbElkUmVxdWVzdBIRCglwcm9ncmFt",
            "SWQYASABKAkSEgoKZXh0ZXJuYWxJZBgCIAEoCSJWChRNZW1iZXJTZWdtZW50",
            "UmVxdWVzdBIaCgZmaWx0ZXIYASABKAsyCi5pby5GaWx0ZXISIgoJbmV3VmFs",
            "dWVzGAIgASgLMg8ubWVtYmVycy5NZW1iZXIidgoTVXBkYXRlRXhwaXJ5UmVx",
            "dWVzdBIRCglwcm9ncmFtSWQYASABKAkSDgoGdGllcklkGAIgASgJEioKDmV4",
            "cGlyeVNldHRpbmdzGAMgASgLMhIuaW8uRXhwaXJ5U2V0dGluZ3MSEAoIdGlt",
            "ZXpvbmUYBCABKAkicQoMTWVtYmVyRXhwaXJ5EgoKAmlkGAEgASgJEhIKCmV4",
            "dGVybmFsSWQYAiABKAkSEQoJcHJvZ3JhbUlkGAMgASgJEi4KCmV4cGlyeURh",
            "dGUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIn4KDE1lbWJl",
            "clBvaW50cxIKCgJpZBgBIAEoCRISCgpleHRlcm5hbElkGAIgASgJEhEKCXBy",
            "b2dyYW1JZBgDIAEoCRIOCgZwb2ludHMYBCABKAISFwoPc2Vjb25kYXJ5UG9p",
            "bnRzGAUgASgCEhIKCnRpZXJQb2ludHMYBiABKA0ixAEKFUVhcm5CdXJuUG9p",
            "bnRzUmVxdWVzdBIKCgJpZBgBIAEoCRISCgpleHRlcm5hbElkGAIgASgJEhEK",
            "CXByb2dyYW1JZBgDIAEoCRIOCgZwb2ludHMYBCABKAISFwoPc2Vjb25kYXJ5",
            "UG9pbnRzGAUgASgCEhIKCnRpZXJQb2ludHMYBiABKA0SKwoMZXZlbnREZXRh",
            "aWxzGAcgASgLMhUubWVtYmVycy5FdmVudERldGFpbHMSDgoGdGllcklkGAgg",
            "ASgJIosCChBTZXRQb2ludHNSZXF1ZXN0EgoKAmlkGAEgASgJEhIKCmV4dGVy",
            "bmFsSWQYAiABKAkSEQoJcHJvZ3JhbUlkGAMgASgJEg4KBnBvaW50cxgEIAEo",
            "AhIXCg9zZWNvbmRhcnlQb2ludHMYBSABKAISEgoKdGllclBvaW50cxgGIAEo",
            "DRITCgtyZXNldFBvaW50cxgHIAEoCBIcChRyZXNldFNlY29uZGFyeVBvaW50",
            "cxgIIAEoCBIXCg9yZXNldFRpZXJQb2ludHMYCSABKAgSKwoMZXZlbnREZXRh",
            "aWxzGAogASgLMhUubWVtYmVycy5FdmVudERldGFpbHMSDgoGdGllcklkGAsg",
            "ASgJIuACChdNZW1iZXJDaGVja0luT3V0UmVxdWVzdBIQCghtZW1iZXJJZBgB",
            "IAEoCRIYChBleHRlcm5hbE1lbWJlcklkGAIgASgJEhEKCXByb2dyYW1JZBgD",
            "IAEoCRIPCgdhZGRyZXNzGAQgASgJEgsKA2xhdBgFIAEoARILCgNsb24YBiAB",
            "KAESCwoDYWx0GAcgASgFEhcKD2V4dGVybmFsRXZlbnRJZBgIIAEoCRIYChBl",
            "eHRlcm5hbERldmljZUlkGAkgASgJEhkKEWV4dGVybmFsU2VydmljZUlkGAog",
            "ASgJEkAKCG1ldGFEYXRhGAsgAygLMi4ubWVtYmVycy5NZW1iZXJDaGVja0lu",
            "T3V0UmVxdWVzdC5NZXRhRGF0YUVudHJ5Eg0KBW5vdGVzGAwgASgJGi8KDU1l",
            "dGFEYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJO",
            "ChVMaXN0UmVxdWVzdERlcHJlY2F0ZWQSEQoJcHJvZ3JhbUlkGAEgASgJEiIK",
            "CnBhZ2luYXRpb24YAiABKAsyDi5pby5QYWdpbmF0aW9uIlIKC0xpc3RSZXF1",
            "ZXN0EhEKCXByb2dyYW1JZBgBIAEoCRIcCgdmaWx0ZXJzGAIgASgLMgsuaW8u",
            "RmlsdGVycxISCgplbWFpbEFzQ3N2GAMgASgIIo8BChFDaGFuZ2VUaWVyUmVx",
            "dWVzdBIQCghtZW1iZXJJZBgBIAEoCRIYChBleHRlcm5hbE1lbWJlcklkGAIg",
            "ASgJEhEKCXByb2dyYW1JZBgDIAEoCRIOCgZ0aWVySWQYBCABKAkSKwoMZXZl",
            "bnREZXRhaWxzGAcgASgLMhUubWVtYmVycy5FdmVudERldGFpbHMqYwoMTWVt",
            "YmVyU3RhdHVzEgwKCEVOUk9MTEVEEAASCgoGQUNUSVZFEAESDgoKQ0hFQ0tF",
            "RF9JThACEgsKB0VYUElSRUQQAxIPCgtDSEVDS0VEX09VVBAEEgsKB0RFTEVU",
            "RUQQBUJhChhjb20ucGFzc2tpdC5ncnBjLk1lbWJlcnNaLHN0YXNoLnBhc3Nr",
            "aXQuY29tL2lvL21vZGVsL3Nkay9nby9pby9tZW1iZXJzqgIWUGFzc0tpdEdy",
            "cGNTREsuTWVtYmVyc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::PassKitGrpcSDK.MetricsReflection.Descriptor, global::PassKitGrpcSDK.NoteReflection.Descriptor, global::PassKitGrpcSDK.PaginationReflection.Descriptor, global::PassKitGrpcSDK.FilterReflection.Descriptor, global::PassKitGrpcSDK.PassReflection.Descriptor, global::PassKitGrpcSDK.PersonalReflection.Descriptor, global::PassKitGrpcSDK.ExpiryReflection.Descriptor, global::PassKitGrpcSDK.Members.EventReflection.Descriptor, global::PassKitGrpcSDK.Gateway.ProtocGenOpenapiv2.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PassKitGrpcSDK.Members.MemberStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.Member), global::PassKitGrpcSDK.Members.Member.Parser, new[]{ "Id", "ExternalId", "GroupingIdentifier", "TierId", "ProgramId", "Person", "MetaData", "OptOut", "Points", "SecondaryPoints", "TierPoints", "ExpiryDate", "Status", "PassOverrides", "PassMetaData", "Notes", "CurrentTierAwarded", "CurrentTierExpires", "Created", "Updated", "ProfileImage" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.MemberRecordByExternalIdRequest), global::PassKitGrpcSDK.Members.MemberRecordByExternalIdRequest.Parser, new[]{ "ProgramId", "ExternalId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.MemberSegmentRequest), global::PassKitGrpcSDK.Members.MemberSegmentRequest.Parser, new[]{ "Filter", "NewValues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.UpdateExpiryRequest), global::PassKitGrpcSDK.Members.UpdateExpiryRequest.Parser, new[]{ "ProgramId", "TierId", "ExpirySettings", "Timezone" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.MemberExpiry), global::PassKitGrpcSDK.Members.MemberExpiry.Parser, new[]{ "Id", "ExternalId", "ProgramId", "ExpiryDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.MemberPoints), global::PassKitGrpcSDK.Members.MemberPoints.Parser, new[]{ "Id", "ExternalId", "ProgramId", "Points", "SecondaryPoints", "TierPoints" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.EarnBurnPointsRequest), global::PassKitGrpcSDK.Members.EarnBurnPointsRequest.Parser, new[]{ "Id", "ExternalId", "ProgramId", "Points", "SecondaryPoints", "TierPoints", "EventDetails", "TierId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.SetPointsRequest), global::PassKitGrpcSDK.Members.SetPointsRequest.Parser, new[]{ "Id", "ExternalId", "ProgramId", "Points", "SecondaryPoints", "TierPoints", "ResetPoints", "ResetSecondaryPoints", "ResetTierPoints", "EventDetails", "TierId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.MemberCheckInOutRequest), global::PassKitGrpcSDK.Members.MemberCheckInOutRequest.Parser, new[]{ "MemberId", "ExternalMemberId", "ProgramId", "Address", "Lat", "Lon", "Alt", "ExternalEventId", "ExternalDeviceId", "ExternalServiceId", "MetaData", "Notes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.ListRequestDeprecated), global::PassKitGrpcSDK.Members.ListRequestDeprecated.Parser, new[]{ "ProgramId", "Pagination" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.ListRequest), global::PassKitGrpcSDK.Members.ListRequest.Parser, new[]{ "ProgramId", "Filters", "EmailAsCsv" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKitGrpcSDK.Members.ChangeTierRequest), global::PassKitGrpcSDK.Members.ChangeTierRequest.Parser, new[]{ "MemberId", "ExternalMemberId", "ProgramId", "TierId", "EventDetails" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// List of allowed member statuses
  /// </summary>
  public enum MemberStatus {
    /// <summary>
    /// Member has successfully enrolled in the program.
    /// </summary>
    [pbr::OriginalName("ENROLLED")] Enrolled = 0,
    /// <summary>
    /// Member is active.
    /// </summary>
    [pbr::OriginalName("ACTIVE")] Active = 1,
    /// <summary>
    /// Member is checked in.
    /// </summary>
    [pbr::OriginalName("CHECKED_IN")] CheckedIn = 2,
    /// <summary>
    /// For expired members.
    /// </summary>
    [pbr::OriginalName("EXPIRED")] Expired = 3,
    /// <summary>
    /// Member is checked out.
    /// </summary>
    [pbr::OriginalName("CHECKED_OUT")] CheckedOut = 4,
    /// <summary>
    /// For members who's records have been deleted.
    /// </summary>
    [pbr::OriginalName("DELETED")] Deleted = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The member record
  /// </summary>
  public sealed partial class Member : pb::IMessage<Member>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Member> _parser = new pb::MessageParser<Member>(() => new Member());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Member> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.MemberReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Member() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Member(Member other) : this() {
      id_ = other.id_;
      externalId_ = other.externalId_;
      groupingIdentifier_ = other.groupingIdentifier_;
      tierId_ = other.tierId_;
      programId_ = other.programId_;
      person_ = other.person_ != null ? other.person_.Clone() : null;
      metaData_ = other.metaData_.Clone();
      optOut_ = other.optOut_;
      points_ = other.points_;
      secondaryPoints_ = other.secondaryPoints_;
      tierPoints_ = other.tierPoints_;
      expiryDate_ = other.expiryDate_ != null ? other.expiryDate_.Clone() : null;
      status_ = other.status_;
      passOverrides_ = other.passOverrides_ != null ? other.passOverrides_.Clone() : null;
      passMetaData_ = other.passMetaData_ != null ? other.passMetaData_.Clone() : null;
      notes_ = other.notes_.Clone();
      currentTierAwarded_ = other.currentTierAwarded_ != null ? other.currentTierAwarded_.Clone() : null;
      currentTierExpires_ = other.currentTierExpires_ != null ? other.currentTierExpires_.Clone() : null;
      created_ = other.created_ != null ? other.created_.Clone() : null;
      updated_ = other.updated_ != null ? other.updated_.Clone() : null;
      profileImage_ = other.profileImage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Member Clone() {
      return new Member(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Id assigned by PassKit to represent the member record. It will be used as the serial number in Apple Wallet and as the Object identifier for Google Wallet. This field is not writable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalId" field.</summary>
    public const int ExternalIdFieldNumber = 2;
    private string externalId_ = "";
    /// <summary>
    /// This can be used to set the 'external' ID of the member (i.e. the member ID as it's being used in your system). If provided then this can be used to query &amp; update members. This field will be treated as unique within the program, and cannot be updated at a later stage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupingIdentifier" field.</summary>
    public const int GroupingIdentifierFieldNumber = 3;
    private string groupingIdentifier_ = "";
    /// <summary>
    /// Grouping Identifier can be used to group members under the same membership (i.e. couple).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupingIdentifier {
      get { return groupingIdentifier_; }
      set {
        groupingIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tierId" field.</summary>
    public const int TierIdFieldNumber = 4;
    private string tierId_ = "";
    /// <summary>
    /// Indicates the ID of the tier this member is in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TierId {
      get { return tierId_; }
      set {
        tierId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "programId" field.</summary>
    public const int ProgramIdFieldNumber = 5;
    private string programId_ = "";
    /// <summary>
    /// Indicates the ID of the program this member is in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgramId {
      get { return programId_; }
      set {
        programId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "person" field.</summary>
    public const int PersonFieldNumber = 6;
    private global::PassKitGrpcSDK.Person person_;
    /// <summary>
    /// Personal details of the member.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Person Person {
      get { return person_; }
      set {
        person_ = value;
      }
    }

    /// <summary>Field number for the "metaData" field.</summary>
    public const int MetaDataFieldNumber = 7;
    private static readonly pbc::MapField<string, string>.Codec _map_metaData_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 58);
    private readonly pbc::MapField<string, string> metaData_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Any other meta fields for the member that are not covered in the protocol (i.e. you might want to captures sign-up location, and favorite coffee, for segmenting later on).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> MetaData {
      get { return metaData_; }
    }

    /// <summary>Field number for the "optOut" field.</summary>
    public const int OptOutFieldNumber = 13;
    private bool optOut_;
    /// <summary>
    /// Indicates if the member opted out to receive marketing promotions (defaults to false).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OptOut {
      get { return optOut_; }
      set {
        optOut_ = value;
      }
    }

    /// <summary>Field number for the "points" field.</summary>
    public const int PointsFieldNumber = 14;
    private float points_;
    /// <summary>
    /// Points is formatted differently based on what is set on a program level. Program points.balance field can be set to: `int`, `double` or `money`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Points {
      get { return points_; }
      set {
        points_ = value;
      }
    }

    /// <summary>Field number for the "secondaryPoints" field.</summary>
    public const int SecondaryPointsFieldNumber = 15;
    private float secondaryPoints_;
    /// <summary>
    /// Secondary Points is formatted differently based on what is set on a program level. Program secondaryPoints.balance field can be set to: `int`, `double` or `money`. Field can be utilised if your program tracks two points, i.e. loyalty point balance, and pre-paid cash balance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SecondaryPoints {
      get { return secondaryPoints_; }
      set {
        secondaryPoints_ = value;
      }
    }

    /// <summary>Field number for the "tierPoints" field.</summary>
    public const int TierPointsFieldNumber = 16;
    private uint tierPoints_;
    /// <summary>
    /// Tier points can be set for programs that award tiers based on dedicated tier points. Tier points indicates the current amount of tier points someone has, and can be used by a member to check how many more tier points are required to switch to the next tier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TierPoints {
      get { return tierPoints_; }
      set {
        tierPoints_ = value;
      }
    }

    /// <summary>Field number for the "expiryDate" field.</summary>
    public const int ExpiryDateFieldNumber = 18;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiryDate_;
    /// <summary>
    /// Indicates when the membership card expires. When the expiry date hits, it will automatically gray out the barcode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpiryDate {
      get { return expiryDate_; }
      set {
        expiryDate_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 19;
    private global::PassKitGrpcSDK.Members.MemberStatus status_ = global::PassKitGrpcSDK.Members.MemberStatus.Enrolled;
    /// <summary>
    /// Member status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Members.MemberStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "passOverrides" field.</summary>
    public const int PassOverridesFieldNumber = 20;
    private global::PassKitGrpcSDK.PassOverrides passOverrides_;
    /// <summary>
    /// Pass level overrides for proximity &amp; images.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.PassOverrides PassOverrides {
      get { return passOverrides_; }
      set {
        passOverrides_ = value;
      }
    }

    /// <summary>Field number for the "passMetaData" field.</summary>
    public const int PassMetaDataFieldNumber = 21;
    private global::PassKitGrpcSDK.Metadata passMetaData_;
    /// <summary>
    /// Pass Metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Metadata PassMetaData {
      get { return passMetaData_; }
      set {
        passMetaData_ = value;
      }
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 26;
    private static readonly pb::FieldCodec<global::PassKitGrpcSDK.Note> _repeated_notes_codec
        = pb::FieldCodec.ForMessage(210, global::PassKitGrpcSDK.Note.Parser);
    private readonly pbc::RepeatedField<global::PassKitGrpcSDK.Note> notes_ = new pbc::RepeatedField<global::PassKitGrpcSDK.Note>();
    /// <summary>
    /// placeholder for notes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PassKitGrpcSDK.Note> Notes {
      get { return notes_; }
    }

    /// <summary>Field number for the "currentTierAwarded" field.</summary>
    public const int CurrentTierAwardedFieldNumber = 27;
    private global::Google.Protobuf.WellKnownTypes.Timestamp currentTierAwarded_;
    /// <summary>
    /// The date the current tier was awarded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CurrentTierAwarded {
      get { return currentTierAwarded_; }
      set {
        currentTierAwarded_ = value;
      }
    }

    /// <summary>Field number for the "currentTierExpires" field.</summary>
    public const int CurrentTierExpiresFieldNumber = 28;
    private global::Google.Protobuf.WellKnownTypes.Timestamp currentTierExpires_;
    /// <summary>
    /// The date the current tier expires.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CurrentTierExpires {
      get { return currentTierExpires_; }
      set {
        currentTierExpires_ = value;
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 29;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// The date the member was created in the PassKit system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 30;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updated_;
    /// <summary>
    /// The date the member was last updated in the PassKit system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    /// <summary>Field number for the "profileImage" field.</summary>
    public const int ProfileImageFieldNumber = 31;
    private string profileImage_ = "";
    /// <summary>
    /// Optional field that holds the member profile image. Can either be an image URL or base64 image string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileImage {
      get { return profileImage_; }
      set {
        profileImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Member);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Member other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ExternalId != other.ExternalId) return false;
      if (GroupingIdentifier != other.GroupingIdentifier) return false;
      if (TierId != other.TierId) return false;
      if (ProgramId != other.ProgramId) return false;
      if (!object.Equals(Person, other.Person)) return false;
      if (!MetaData.Equals(other.MetaData)) return false;
      if (OptOut != other.OptOut) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Points, other.Points)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SecondaryPoints, other.SecondaryPoints)) return false;
      if (TierPoints != other.TierPoints) return false;
      if (!object.Equals(ExpiryDate, other.ExpiryDate)) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(PassOverrides, other.PassOverrides)) return false;
      if (!object.Equals(PassMetaData, other.PassMetaData)) return false;
      if(!notes_.Equals(other.notes_)) return false;
      if (!object.Equals(CurrentTierAwarded, other.CurrentTierAwarded)) return false;
      if (!object.Equals(CurrentTierExpires, other.CurrentTierExpires)) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (!object.Equals(Updated, other.Updated)) return false;
      if (ProfileImage != other.ProfileImage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (GroupingIdentifier.Length != 0) hash ^= GroupingIdentifier.GetHashCode();
      if (TierId.Length != 0) hash ^= TierId.GetHashCode();
      if (ProgramId.Length != 0) hash ^= ProgramId.GetHashCode();
      if (person_ != null) hash ^= Person.GetHashCode();
      hash ^= MetaData.GetHashCode();
      if (OptOut != false) hash ^= OptOut.GetHashCode();
      if (Points != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Points);
      if (SecondaryPoints != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SecondaryPoints);
      if (TierPoints != 0) hash ^= TierPoints.GetHashCode();
      if (expiryDate_ != null) hash ^= ExpiryDate.GetHashCode();
      if (Status != global::PassKitGrpcSDK.Members.MemberStatus.Enrolled) hash ^= Status.GetHashCode();
      if (passOverrides_ != null) hash ^= PassOverrides.GetHashCode();
      if (passMetaData_ != null) hash ^= PassMetaData.GetHashCode();
      hash ^= notes_.GetHashCode();
      if (currentTierAwarded_ != null) hash ^= CurrentTierAwarded.GetHashCode();
      if (currentTierExpires_ != null) hash ^= CurrentTierExpires.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (updated_ != null) hash ^= Updated.GetHashCode();
      if (ProfileImage.Length != 0) hash ^= ProfileImage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (GroupingIdentifier.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GroupingIdentifier);
      }
      if (TierId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TierId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ProgramId);
      }
      if (person_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Person);
      }
      metaData_.WriteTo(output, _map_metaData_codec);
      if (OptOut != false) {
        output.WriteRawTag(104);
        output.WriteBool(OptOut);
      }
      if (Points != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(Points);
      }
      if (SecondaryPoints != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(SecondaryPoints);
      }
      if (TierPoints != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(TierPoints);
      }
      if (expiryDate_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(ExpiryDate);
      }
      if (Status != global::PassKitGrpcSDK.Members.MemberStatus.Enrolled) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) Status);
      }
      if (passOverrides_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(PassOverrides);
      }
      if (passMetaData_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(PassMetaData);
      }
      notes_.WriteTo(output, _repeated_notes_codec);
      if (currentTierAwarded_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(CurrentTierAwarded);
      }
      if (currentTierExpires_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(CurrentTierExpires);
      }
      if (created_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Updated);
      }
      if (ProfileImage.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(ProfileImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (GroupingIdentifier.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GroupingIdentifier);
      }
      if (TierId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TierId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ProgramId);
      }
      if (person_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Person);
      }
      metaData_.WriteTo(ref output, _map_metaData_codec);
      if (OptOut != false) {
        output.WriteRawTag(104);
        output.WriteBool(OptOut);
      }
      if (Points != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(Points);
      }
      if (SecondaryPoints != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(SecondaryPoints);
      }
      if (TierPoints != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(TierPoints);
      }
      if (expiryDate_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(ExpiryDate);
      }
      if (Status != global::PassKitGrpcSDK.Members.MemberStatus.Enrolled) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) Status);
      }
      if (passOverrides_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(PassOverrides);
      }
      if (passMetaData_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(PassMetaData);
      }
      notes_.WriteTo(ref output, _repeated_notes_codec);
      if (currentTierAwarded_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(CurrentTierAwarded);
      }
      if (currentTierExpires_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(CurrentTierExpires);
      }
      if (created_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Updated);
      }
      if (ProfileImage.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(ProfileImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (GroupingIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupingIdentifier);
      }
      if (TierId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TierId);
      }
      if (ProgramId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramId);
      }
      if (person_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Person);
      }
      size += metaData_.CalculateSize(_map_metaData_codec);
      if (OptOut != false) {
        size += 1 + 1;
      }
      if (Points != 0F) {
        size += 1 + 4;
      }
      if (SecondaryPoints != 0F) {
        size += 1 + 4;
      }
      if (TierPoints != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TierPoints);
      }
      if (expiryDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExpiryDate);
      }
      if (Status != global::PassKitGrpcSDK.Members.MemberStatus.Enrolled) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (passOverrides_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PassOverrides);
      }
      if (passMetaData_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PassMetaData);
      }
      size += notes_.CalculateSize(_repeated_notes_codec);
      if (currentTierAwarded_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CurrentTierAwarded);
      }
      if (currentTierExpires_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CurrentTierExpires);
      }
      if (created_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (updated_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Updated);
      }
      if (ProfileImage.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ProfileImage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Member other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      if (other.GroupingIdentifier.Length != 0) {
        GroupingIdentifier = other.GroupingIdentifier;
      }
      if (other.TierId.Length != 0) {
        TierId = other.TierId;
      }
      if (other.ProgramId.Length != 0) {
        ProgramId = other.ProgramId;
      }
      if (other.person_ != null) {
        if (person_ == null) {
          Person = new global::PassKitGrpcSDK.Person();
        }
        Person.MergeFrom(other.Person);
      }
      metaData_.Add(other.metaData_);
      if (other.OptOut != false) {
        OptOut = other.OptOut;
      }
      if (other.Points != 0F) {
        Points = other.Points;
      }
      if (other.SecondaryPoints != 0F) {
        SecondaryPoints = other.SecondaryPoints;
      }
      if (other.TierPoints != 0) {
        TierPoints = other.TierPoints;
      }
      if (other.expiryDate_ != null) {
        if (expiryDate_ == null) {
          ExpiryDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpiryDate.MergeFrom(other.ExpiryDate);
      }
      if (other.Status != global::PassKitGrpcSDK.Members.MemberStatus.Enrolled) {
        Status = other.Status;
      }
      if (other.passOverrides_ != null) {
        if (passOverrides_ == null) {
          PassOverrides = new global::PassKitGrpcSDK.PassOverrides();
        }
        PassOverrides.MergeFrom(other.PassOverrides);
      }
      if (other.passMetaData_ != null) {
        if (passMetaData_ == null) {
          PassMetaData = new global::PassKitGrpcSDK.Metadata();
        }
        PassMetaData.MergeFrom(other.PassMetaData);
      }
      notes_.Add(other.notes_);
      if (other.currentTierAwarded_ != null) {
        if (currentTierAwarded_ == null) {
          CurrentTierAwarded = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CurrentTierAwarded.MergeFrom(other.CurrentTierAwarded);
      }
      if (other.currentTierExpires_ != null) {
        if (currentTierExpires_ == null) {
          CurrentTierExpires = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CurrentTierExpires.MergeFrom(other.CurrentTierExpires);
      }
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      if (other.updated_ != null) {
        if (updated_ == null) {
          Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Updated.MergeFrom(other.Updated);
      }
      if (other.ProfileImage.Length != 0) {
        ProfileImage = other.ProfileImage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
          case 26: {
            GroupingIdentifier = input.ReadString();
            break;
          }
          case 34: {
            TierId = input.ReadString();
            break;
          }
          case 42: {
            ProgramId = input.ReadString();
            break;
          }
          case 50: {
            if (person_ == null) {
              Person = new global::PassKitGrpcSDK.Person();
            }
            input.ReadMessage(Person);
            break;
          }
          case 58: {
            metaData_.AddEntriesFrom(input, _map_metaData_codec);
            break;
          }
          case 104: {
            OptOut = input.ReadBool();
            break;
          }
          case 117: {
            Points = input.ReadFloat();
            break;
          }
          case 125: {
            SecondaryPoints = input.ReadFloat();
            break;
          }
          case 128: {
            TierPoints = input.ReadUInt32();
            break;
          }
          case 146: {
            if (expiryDate_ == null) {
              ExpiryDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiryDate);
            break;
          }
          case 152: {
            Status = (global::PassKitGrpcSDK.Members.MemberStatus) input.ReadEnum();
            break;
          }
          case 162: {
            if (passOverrides_ == null) {
              PassOverrides = new global::PassKitGrpcSDK.PassOverrides();
            }
            input.ReadMessage(PassOverrides);
            break;
          }
          case 170: {
            if (passMetaData_ == null) {
              PassMetaData = new global::PassKitGrpcSDK.Metadata();
            }
            input.ReadMessage(PassMetaData);
            break;
          }
          case 210: {
            notes_.AddEntriesFrom(input, _repeated_notes_codec);
            break;
          }
          case 218: {
            if (currentTierAwarded_ == null) {
              CurrentTierAwarded = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentTierAwarded);
            break;
          }
          case 226: {
            if (currentTierExpires_ == null) {
              CurrentTierExpires = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentTierExpires);
            break;
          }
          case 234: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 242: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
          case 250: {
            ProfileImage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
          case 26: {
            GroupingIdentifier = input.ReadString();
            break;
          }
          case 34: {
            TierId = input.ReadString();
            break;
          }
          case 42: {
            ProgramId = input.ReadString();
            break;
          }
          case 50: {
            if (person_ == null) {
              Person = new global::PassKitGrpcSDK.Person();
            }
            input.ReadMessage(Person);
            break;
          }
          case 58: {
            metaData_.AddEntriesFrom(ref input, _map_metaData_codec);
            break;
          }
          case 104: {
            OptOut = input.ReadBool();
            break;
          }
          case 117: {
            Points = input.ReadFloat();
            break;
          }
          case 125: {
            SecondaryPoints = input.ReadFloat();
            break;
          }
          case 128: {
            TierPoints = input.ReadUInt32();
            break;
          }
          case 146: {
            if (expiryDate_ == null) {
              ExpiryDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiryDate);
            break;
          }
          case 152: {
            Status = (global::PassKitGrpcSDK.Members.MemberStatus) input.ReadEnum();
            break;
          }
          case 162: {
            if (passOverrides_ == null) {
              PassOverrides = new global::PassKitGrpcSDK.PassOverrides();
            }
            input.ReadMessage(PassOverrides);
            break;
          }
          case 170: {
            if (passMetaData_ == null) {
              PassMetaData = new global::PassKitGrpcSDK.Metadata();
            }
            input.ReadMessage(PassMetaData);
            break;
          }
          case 210: {
            notes_.AddEntriesFrom(ref input, _repeated_notes_codec);
            break;
          }
          case 218: {
            if (currentTierAwarded_ == null) {
              CurrentTierAwarded = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentTierAwarded);
            break;
          }
          case 226: {
            if (currentTierExpires_ == null) {
              CurrentTierExpires = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentTierExpires);
            break;
          }
          case 234: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 242: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
          case 250: {
            ProfileImage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used to request a digital membership pass by PassKit ID.
  /// </summary>
  public sealed partial class MemberRecordByExternalIdRequest : pb::IMessage<MemberRecordByExternalIdRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MemberRecordByExternalIdRequest> _parser = new pb::MessageParser<MemberRecordByExternalIdRequest>(() => new MemberRecordByExternalIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberRecordByExternalIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.MemberReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberRecordByExternalIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberRecordByExternalIdRequest(MemberRecordByExternalIdRequest other) : this() {
      programId_ = other.programId_;
      externalId_ = other.externalId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberRecordByExternalIdRequest Clone() {
      return new MemberRecordByExternalIdRequest(this);
    }

    /// <summary>Field number for the "programId" field.</summary>
    public const int ProgramIdFieldNumber = 1;
    private string programId_ = "";
    /// <summary>
    /// Program ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgramId {
      get { return programId_; }
      set {
        programId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalId" field.</summary>
    public const int ExternalIdFieldNumber = 2;
    private string externalId_ = "";
    /// <summary>
    /// External ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberRecordByExternalIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberRecordByExternalIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProgramId != other.ProgramId) return false;
      if (ExternalId != other.ExternalId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProgramId.Length != 0) hash ^= ProgramId.GetHashCode();
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProgramId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProgramId);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProgramId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProgramId);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProgramId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramId);
      }
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberRecordByExternalIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProgramId.Length != 0) {
        ProgramId = other.ProgramId;
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProgramId = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProgramId = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Member segment allows us to segment members for listing or updating
  /// </summary>
  public sealed partial class MemberSegmentRequest : pb::IMessage<MemberSegmentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MemberSegmentRequest> _parser = new pb::MessageParser<MemberSegmentRequest>(() => new MemberSegmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberSegmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.MemberReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberSegmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberSegmentRequest(MemberSegmentRequest other) : this() {
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      newValues_ = other.newValues_ != null ? other.newValues_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberSegmentRequest Clone() {
      return new MemberSegmentRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private global::PassKitGrpcSDK.Filter filter_;
    /// <summary>
    /// Optional filter object; defines the segment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Filter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "newValues" field.</summary>
    public const int NewValuesFieldNumber = 2;
    private global::PassKitGrpcSDK.Members.Member newValues_;
    /// <summary>
    /// Contains fields to update (optional: if used in update context).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Members.Member NewValues {
      get { return newValues_; }
      set {
        newValues_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberSegmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberSegmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Filter, other.Filter)) return false;
      if (!object.Equals(NewValues, other.NewValues)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (newValues_ != null) hash ^= NewValues.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (filter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Filter);
      }
      if (newValues_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewValues);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (filter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Filter);
      }
      if (newValues_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewValues);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (newValues_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewValues);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberSegmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::PassKitGrpcSDK.Filter();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.newValues_ != null) {
        if (newValues_ == null) {
          NewValues = new global::PassKitGrpcSDK.Members.Member();
        }
        NewValues.MergeFrom(other.NewValues);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (filter_ == null) {
              Filter = new global::PassKitGrpcSDK.Filter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 18: {
            if (newValues_ == null) {
              NewValues = new global::PassKitGrpcSDK.Members.Member();
            }
            input.ReadMessage(NewValues);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (filter_ == null) {
              Filter = new global::PassKitGrpcSDK.Filter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 18: {
            if (newValues_ == null) {
              NewValues = new global::PassKitGrpcSDK.Members.Member();
            }
            input.ReadMessage(NewValues);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used to set new expiry dates for all of active members in the tier.
  /// </summary>
  public sealed partial class UpdateExpiryRequest : pb::IMessage<UpdateExpiryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateExpiryRequest> _parser = new pb::MessageParser<UpdateExpiryRequest>(() => new UpdateExpiryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateExpiryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.MemberReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateExpiryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateExpiryRequest(UpdateExpiryRequest other) : this() {
      programId_ = other.programId_;
      tierId_ = other.tierId_;
      expirySettings_ = other.expirySettings_ != null ? other.expirySettings_.Clone() : null;
      timezone_ = other.timezone_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateExpiryRequest Clone() {
      return new UpdateExpiryRequest(this);
    }

    /// <summary>Field number for the "programId" field.</summary>
    public const int ProgramIdFieldNumber = 1;
    private string programId_ = "";
    /// <summary>
    /// Indicates the ID of the program.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgramId {
      get { return programId_; }
      set {
        programId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tierId" field.</summary>
    public const int TierIdFieldNumber = 2;
    private string tierId_ = "";
    /// <summary>
    /// Indicates the ID of the tier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TierId {
      get { return tierId_; }
      set {
        tierId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expirySettings" field.</summary>
    public const int ExpirySettingsFieldNumber = 3;
    private global::PassKitGrpcSDK.ExpirySettings expirySettings_;
    /// <summary>
    /// Expiry date setting you want to apply for this update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.ExpirySettings ExpirySettings {
      get { return expirySettings_; }
      set {
        expirySettings_ = value;
      }
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 4;
    private string timezone_ = "";
    /// <summary>
    /// Timezone string in IANA timezone format applied for EXPIRE_ON_FIXED_DATE. If not provided Tier timezone is applied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Timezone {
      get { return timezone_; }
      set {
        timezone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateExpiryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateExpiryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProgramId != other.ProgramId) return false;
      if (TierId != other.TierId) return false;
      if (!object.Equals(ExpirySettings, other.ExpirySettings)) return false;
      if (Timezone != other.Timezone) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProgramId.Length != 0) hash ^= ProgramId.GetHashCode();
      if (TierId.Length != 0) hash ^= TierId.GetHashCode();
      if (expirySettings_ != null) hash ^= ExpirySettings.GetHashCode();
      if (Timezone.Length != 0) hash ^= Timezone.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProgramId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProgramId);
      }
      if (TierId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TierId);
      }
      if (expirySettings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpirySettings);
      }
      if (Timezone.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Timezone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProgramId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProgramId);
      }
      if (TierId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TierId);
      }
      if (expirySettings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpirySettings);
      }
      if (Timezone.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Timezone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProgramId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramId);
      }
      if (TierId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TierId);
      }
      if (expirySettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpirySettings);
      }
      if (Timezone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timezone);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateExpiryRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProgramId.Length != 0) {
        ProgramId = other.ProgramId;
      }
      if (other.TierId.Length != 0) {
        TierId = other.TierId;
      }
      if (other.expirySettings_ != null) {
        if (expirySettings_ == null) {
          ExpirySettings = new global::PassKitGrpcSDK.ExpirySettings();
        }
        ExpirySettings.MergeFrom(other.ExpirySettings);
      }
      if (other.Timezone.Length != 0) {
        Timezone = other.Timezone;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProgramId = input.ReadString();
            break;
          }
          case 18: {
            TierId = input.ReadString();
            break;
          }
          case 26: {
            if (expirySettings_ == null) {
              ExpirySettings = new global::PassKitGrpcSDK.ExpirySettings();
            }
            input.ReadMessage(ExpirySettings);
            break;
          }
          case 34: {
            Timezone = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProgramId = input.ReadString();
            break;
          }
          case 18: {
            TierId = input.ReadString();
            break;
          }
          case 26: {
            if (expirySettings_ == null) {
              ExpirySettings = new global::PassKitGrpcSDK.ExpirySettings();
            }
            input.ReadMessage(ExpirySettings);
            break;
          }
          case 34: {
            Timezone = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used to update the expiry date of a member.
  /// </summary>
  public sealed partial class MemberExpiry : pb::IMessage<MemberExpiry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MemberExpiry> _parser = new pb::MessageParser<MemberExpiry>(() => new MemberExpiry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberExpiry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.MemberReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberExpiry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberExpiry(MemberExpiry other) : this() {
      id_ = other.id_;
      externalId_ = other.externalId_;
      programId_ = other.programId_;
      expiryDate_ = other.expiryDate_ != null ? other.expiryDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberExpiry Clone() {
      return new MemberExpiry(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Internal PassKit ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalId" field.</summary>
    public const int ExternalIdFieldNumber = 2;
    private string externalId_ = "";
    /// <summary>
    /// External member ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "programId" field.</summary>
    public const int ProgramIdFieldNumber = 3;
    private string programId_ = "";
    /// <summary>
    /// Required if externalId is set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgramId {
      get { return programId_; }
      set {
        programId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expiryDate" field.</summary>
    public const int ExpiryDateFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiryDate_;
    /// <summary>
    /// Indicates when the membership card expires. When the expiry date hits, it will automatically gray out the barcode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpiryDate {
      get { return expiryDate_; }
      set {
        expiryDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberExpiry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberExpiry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ExternalId != other.ExternalId) return false;
      if (ProgramId != other.ProgramId) return false;
      if (!object.Equals(ExpiryDate, other.ExpiryDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (ProgramId.Length != 0) hash ^= ProgramId.GetHashCode();
      if (expiryDate_ != null) hash ^= ExpiryDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProgramId);
      }
      if (expiryDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExpiryDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProgramId);
      }
      if (expiryDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExpiryDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (ProgramId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramId);
      }
      if (expiryDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpiryDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberExpiry other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      if (other.ProgramId.Length != 0) {
        ProgramId = other.ProgramId;
      }
      if (other.expiryDate_ != null) {
        if (expiryDate_ == null) {
          ExpiryDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpiryDate.MergeFrom(other.ExpiryDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
          case 26: {
            ProgramId = input.ReadString();
            break;
          }
          case 34: {
            if (expiryDate_ == null) {
              ExpiryDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiryDate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
          case 26: {
            ProgramId = input.ReadString();
            break;
          }
          case 34: {
            if (expiryDate_ == null) {
              ExpiryDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpiryDate);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MemberPoints : pb::IMessage<MemberPoints>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MemberPoints> _parser = new pb::MessageParser<MemberPoints>(() => new MemberPoints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberPoints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.MemberReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberPoints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberPoints(MemberPoints other) : this() {
      id_ = other.id_;
      externalId_ = other.externalId_;
      programId_ = other.programId_;
      points_ = other.points_;
      secondaryPoints_ = other.secondaryPoints_;
      tierPoints_ = other.tierPoints_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberPoints Clone() {
      return new MemberPoints(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Internal PassKit ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalId" field.</summary>
    public const int ExternalIdFieldNumber = 2;
    private string externalId_ = "";
    /// <summary>
    /// External member ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "programId" field.</summary>
    public const int ProgramIdFieldNumber = 3;
    private string programId_ = "";
    /// <summary>
    /// Required if externalId is set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgramId {
      get { return programId_; }
      set {
        programId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "points" field.</summary>
    public const int PointsFieldNumber = 4;
    private float points_;
    /// <summary>
    /// The latest point balance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Points {
      get { return points_; }
      set {
        points_ = value;
      }
    }

    /// <summary>Field number for the "secondaryPoints" field.</summary>
    public const int SecondaryPointsFieldNumber = 5;
    private float secondaryPoints_;
    /// <summary>
    /// The latest secondary point balance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SecondaryPoints {
      get { return secondaryPoints_; }
      set {
        secondaryPoints_ = value;
      }
    }

    /// <summary>Field number for the "tierPoints" field.</summary>
    public const int TierPointsFieldNumber = 6;
    private uint tierPoints_;
    /// <summary>
    /// The latest tier point balance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TierPoints {
      get { return tierPoints_; }
      set {
        tierPoints_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberPoints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberPoints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ExternalId != other.ExternalId) return false;
      if (ProgramId != other.ProgramId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Points, other.Points)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SecondaryPoints, other.SecondaryPoints)) return false;
      if (TierPoints != other.TierPoints) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (ProgramId.Length != 0) hash ^= ProgramId.GetHashCode();
      if (Points != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Points);
      if (SecondaryPoints != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SecondaryPoints);
      if (TierPoints != 0) hash ^= TierPoints.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProgramId);
      }
      if (Points != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Points);
      }
      if (SecondaryPoints != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(SecondaryPoints);
      }
      if (TierPoints != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TierPoints);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProgramId);
      }
      if (Points != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Points);
      }
      if (SecondaryPoints != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(SecondaryPoints);
      }
      if (TierPoints != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TierPoints);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (ProgramId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramId);
      }
      if (Points != 0F) {
        size += 1 + 4;
      }
      if (SecondaryPoints != 0F) {
        size += 1 + 4;
      }
      if (TierPoints != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TierPoints);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberPoints other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      if (other.ProgramId.Length != 0) {
        ProgramId = other.ProgramId;
      }
      if (other.Points != 0F) {
        Points = other.Points;
      }
      if (other.SecondaryPoints != 0F) {
        SecondaryPoints = other.SecondaryPoints;
      }
      if (other.TierPoints != 0) {
        TierPoints = other.TierPoints;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
          case 26: {
            ProgramId = input.ReadString();
            break;
          }
          case 37: {
            Points = input.ReadFloat();
            break;
          }
          case 45: {
            SecondaryPoints = input.ReadFloat();
            break;
          }
          case 48: {
            TierPoints = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
          case 26: {
            ProgramId = input.ReadString();
            break;
          }
          case 37: {
            Points = input.ReadFloat();
            break;
          }
          case 45: {
            SecondaryPoints = input.ReadFloat();
            break;
          }
          case 48: {
            TierPoints = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EarnBurnPointsRequest : pb::IMessage<EarnBurnPointsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EarnBurnPointsRequest> _parser = new pb::MessageParser<EarnBurnPointsRequest>(() => new EarnBurnPointsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EarnBurnPointsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.MemberReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarnBurnPointsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarnBurnPointsRequest(EarnBurnPointsRequest other) : this() {
      id_ = other.id_;
      externalId_ = other.externalId_;
      programId_ = other.programId_;
      points_ = other.points_;
      secondaryPoints_ = other.secondaryPoints_;
      tierPoints_ = other.tierPoints_;
      eventDetails_ = other.eventDetails_ != null ? other.eventDetails_.Clone() : null;
      tierId_ = other.tierId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EarnBurnPointsRequest Clone() {
      return new EarnBurnPointsRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Internal PassKit ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalId" field.</summary>
    public const int ExternalIdFieldNumber = 2;
    private string externalId_ = "";
    /// <summary>
    /// External member ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "programId" field.</summary>
    public const int ProgramIdFieldNumber = 3;
    private string programId_ = "";
    /// <summary>
    /// Required if externalId is set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgramId {
      get { return programId_; }
      set {
        programId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "points" field.</summary>
    public const int PointsFieldNumber = 4;
    private float points_;
    /// <summary>
    /// The amount of primary points earned or burnt. The amount needs to be greater than or equal to 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Points {
      get { return points_; }
      set {
        points_ = value;
      }
    }

    /// <summary>Field number for the "secondaryPoints" field.</summary>
    public const int SecondaryPointsFieldNumber = 5;
    private float secondaryPoints_;
    /// <summary>
    /// The amount of secondary points earned or burnt. The amount needs to be greater than or equal to 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SecondaryPoints {
      get { return secondaryPoints_; }
      set {
        secondaryPoints_ = value;
      }
    }

    /// <summary>Field number for the "tierPoints" field.</summary>
    public const int TierPointsFieldNumber = 6;
    private uint tierPoints_;
    /// <summary>
    /// The amount of tier points earned or burnt. The amount needs to be greater than or equal to 0.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TierPoints {
      get { return tierPoints_; }
      set {
        tierPoints_ = value;
      }
    }

    /// <summary>Field number for the "eventDetails" field.</summary>
    public const int EventDetailsFieldNumber = 7;
    private global::PassKitGrpcSDK.Members.EventDetails eventDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Members.EventDetails EventDetails {
      get { return eventDetails_; }
      set {
        eventDetails_ = value;
      }
    }

    /// <summary>Field number for the "tierId" field.</summary>
    public const int TierIdFieldNumber = 8;
    private string tierId_ = "";
    /// <summary>
    /// Optional field to change the tierIf of the member.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TierId {
      get { return tierId_; }
      set {
        tierId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EarnBurnPointsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EarnBurnPointsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ExternalId != other.ExternalId) return false;
      if (ProgramId != other.ProgramId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Points, other.Points)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SecondaryPoints, other.SecondaryPoints)) return false;
      if (TierPoints != other.TierPoints) return false;
      if (!object.Equals(EventDetails, other.EventDetails)) return false;
      if (TierId != other.TierId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (ProgramId.Length != 0) hash ^= ProgramId.GetHashCode();
      if (Points != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Points);
      if (SecondaryPoints != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SecondaryPoints);
      if (TierPoints != 0) hash ^= TierPoints.GetHashCode();
      if (eventDetails_ != null) hash ^= EventDetails.GetHashCode();
      if (TierId.Length != 0) hash ^= TierId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProgramId);
      }
      if (Points != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Points);
      }
      if (SecondaryPoints != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(SecondaryPoints);
      }
      if (TierPoints != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TierPoints);
      }
      if (eventDetails_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EventDetails);
      }
      if (TierId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TierId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProgramId);
      }
      if (Points != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Points);
      }
      if (SecondaryPoints != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(SecondaryPoints);
      }
      if (TierPoints != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TierPoints);
      }
      if (eventDetails_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EventDetails);
      }
      if (TierId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TierId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (ProgramId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramId);
      }
      if (Points != 0F) {
        size += 1 + 4;
      }
      if (SecondaryPoints != 0F) {
        size += 1 + 4;
      }
      if (TierPoints != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TierPoints);
      }
      if (eventDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventDetails);
      }
      if (TierId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TierId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EarnBurnPointsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      if (other.ProgramId.Length != 0) {
        ProgramId = other.ProgramId;
      }
      if (other.Points != 0F) {
        Points = other.Points;
      }
      if (other.SecondaryPoints != 0F) {
        SecondaryPoints = other.SecondaryPoints;
      }
      if (other.TierPoints != 0) {
        TierPoints = other.TierPoints;
      }
      if (other.eventDetails_ != null) {
        if (eventDetails_ == null) {
          EventDetails = new global::PassKitGrpcSDK.Members.EventDetails();
        }
        EventDetails.MergeFrom(other.EventDetails);
      }
      if (other.TierId.Length != 0) {
        TierId = other.TierId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
          case 26: {
            ProgramId = input.ReadString();
            break;
          }
          case 37: {
            Points = input.ReadFloat();
            break;
          }
          case 45: {
            SecondaryPoints = input.ReadFloat();
            break;
          }
          case 48: {
            TierPoints = input.ReadUInt32();
            break;
          }
          case 58: {
            if (eventDetails_ == null) {
              EventDetails = new global::PassKitGrpcSDK.Members.EventDetails();
            }
            input.ReadMessage(EventDetails);
            break;
          }
          case 66: {
            TierId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
          case 26: {
            ProgramId = input.ReadString();
            break;
          }
          case 37: {
            Points = input.ReadFloat();
            break;
          }
          case 45: {
            SecondaryPoints = input.ReadFloat();
            break;
          }
          case 48: {
            TierPoints = input.ReadUInt32();
            break;
          }
          case 58: {
            if (eventDetails_ == null) {
              EventDetails = new global::PassKitGrpcSDK.Members.EventDetails();
            }
            input.ReadMessage(EventDetails);
            break;
          }
          case 66: {
            TierId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetPointsRequest : pb::IMessage<SetPointsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetPointsRequest> _parser = new pb::MessageParser<SetPointsRequest>(() => new SetPointsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetPointsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.MemberReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPointsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPointsRequest(SetPointsRequest other) : this() {
      id_ = other.id_;
      externalId_ = other.externalId_;
      programId_ = other.programId_;
      points_ = other.points_;
      secondaryPoints_ = other.secondaryPoints_;
      tierPoints_ = other.tierPoints_;
      resetPoints_ = other.resetPoints_;
      resetSecondaryPoints_ = other.resetSecondaryPoints_;
      resetTierPoints_ = other.resetTierPoints_;
      eventDetails_ = other.eventDetails_ != null ? other.eventDetails_.Clone() : null;
      tierId_ = other.tierId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPointsRequest Clone() {
      return new SetPointsRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Internal PassKit ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalId" field.</summary>
    public const int ExternalIdFieldNumber = 2;
    private string externalId_ = "";
    /// <summary>
    /// External member ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalId {
      get { return externalId_; }
      set {
        externalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "programId" field.</summary>
    public const int ProgramIdFieldNumber = 3;
    private string programId_ = "";
    /// <summary>
    /// Required if externalId is set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgramId {
      get { return programId_; }
      set {
        programId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "points" field.</summary>
    public const int PointsFieldNumber = 4;
    private float points_;
    /// <summary>
    /// The latest point balance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Points {
      get { return points_; }
      set {
        points_ = value;
      }
    }

    /// <summary>Field number for the "secondaryPoints" field.</summary>
    public const int SecondaryPointsFieldNumber = 5;
    private float secondaryPoints_;
    /// <summary>
    /// The latest secondary point balance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SecondaryPoints {
      get { return secondaryPoints_; }
      set {
        secondaryPoints_ = value;
      }
    }

    /// <summary>Field number for the "tierPoints" field.</summary>
    public const int TierPointsFieldNumber = 6;
    private uint tierPoints_;
    /// <summary>
    /// The latest tier point balance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TierPoints {
      get { return tierPoints_; }
      set {
        tierPoints_ = value;
      }
    }

    /// <summary>Field number for the "resetPoints" field.</summary>
    public const int ResetPointsFieldNumber = 7;
    private bool resetPoints_;
    /// <summary>
    /// Reset the point balance. If set true, the point balance will be 0. The default is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ResetPoints {
      get { return resetPoints_; }
      set {
        resetPoints_ = value;
      }
    }

    /// <summary>Field number for the "resetSecondaryPoints" field.</summary>
    public const int ResetSecondaryPointsFieldNumber = 8;
    private bool resetSecondaryPoints_;
    /// <summary>
    /// Reset the secondary points. If set true, the secondary point balance will be 0. The default is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ResetSecondaryPoints {
      get { return resetSecondaryPoints_; }
      set {
        resetSecondaryPoints_ = value;
      }
    }

    /// <summary>Field number for the "resetTierPoints" field.</summary>
    public const int ResetTierPointsFieldNumber = 9;
    private bool resetTierPoints_;
    /// <summary>
    /// Reset the tier points. If set true, the tier point balance will be 0. The default is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ResetTierPoints {
      get { return resetTierPoints_; }
      set {
        resetTierPoints_ = value;
      }
    }

    /// <summary>Field number for the "eventDetails" field.</summary>
    public const int EventDetailsFieldNumber = 10;
    private global::PassKitGrpcSDK.Members.EventDetails eventDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Members.EventDetails EventDetails {
      get { return eventDetails_; }
      set {
        eventDetails_ = value;
      }
    }

    /// <summary>Field number for the "tierId" field.</summary>
    public const int TierIdFieldNumber = 11;
    private string tierId_ = "";
    /// <summary>
    /// Optional field to change the tierIf of the member.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TierId {
      get { return tierId_; }
      set {
        tierId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetPointsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetPointsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ExternalId != other.ExternalId) return false;
      if (ProgramId != other.ProgramId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Points, other.Points)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SecondaryPoints, other.SecondaryPoints)) return false;
      if (TierPoints != other.TierPoints) return false;
      if (ResetPoints != other.ResetPoints) return false;
      if (ResetSecondaryPoints != other.ResetSecondaryPoints) return false;
      if (ResetTierPoints != other.ResetTierPoints) return false;
      if (!object.Equals(EventDetails, other.EventDetails)) return false;
      if (TierId != other.TierId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ExternalId.Length != 0) hash ^= ExternalId.GetHashCode();
      if (ProgramId.Length != 0) hash ^= ProgramId.GetHashCode();
      if (Points != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Points);
      if (SecondaryPoints != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SecondaryPoints);
      if (TierPoints != 0) hash ^= TierPoints.GetHashCode();
      if (ResetPoints != false) hash ^= ResetPoints.GetHashCode();
      if (ResetSecondaryPoints != false) hash ^= ResetSecondaryPoints.GetHashCode();
      if (ResetTierPoints != false) hash ^= ResetTierPoints.GetHashCode();
      if (eventDetails_ != null) hash ^= EventDetails.GetHashCode();
      if (TierId.Length != 0) hash ^= TierId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProgramId);
      }
      if (Points != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Points);
      }
      if (SecondaryPoints != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(SecondaryPoints);
      }
      if (TierPoints != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TierPoints);
      }
      if (ResetPoints != false) {
        output.WriteRawTag(56);
        output.WriteBool(ResetPoints);
      }
      if (ResetSecondaryPoints != false) {
        output.WriteRawTag(64);
        output.WriteBool(ResetSecondaryPoints);
      }
      if (ResetTierPoints != false) {
        output.WriteRawTag(72);
        output.WriteBool(ResetTierPoints);
      }
      if (eventDetails_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EventDetails);
      }
      if (TierId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(TierId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ExternalId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProgramId);
      }
      if (Points != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Points);
      }
      if (SecondaryPoints != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(SecondaryPoints);
      }
      if (TierPoints != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TierPoints);
      }
      if (ResetPoints != false) {
        output.WriteRawTag(56);
        output.WriteBool(ResetPoints);
      }
      if (ResetSecondaryPoints != false) {
        output.WriteRawTag(64);
        output.WriteBool(ResetSecondaryPoints);
      }
      if (ResetTierPoints != false) {
        output.WriteRawTag(72);
        output.WriteBool(ResetTierPoints);
      }
      if (eventDetails_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EventDetails);
      }
      if (TierId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(TierId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ExternalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalId);
      }
      if (ProgramId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramId);
      }
      if (Points != 0F) {
        size += 1 + 4;
      }
      if (SecondaryPoints != 0F) {
        size += 1 + 4;
      }
      if (TierPoints != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TierPoints);
      }
      if (ResetPoints != false) {
        size += 1 + 1;
      }
      if (ResetSecondaryPoints != false) {
        size += 1 + 1;
      }
      if (ResetTierPoints != false) {
        size += 1 + 1;
      }
      if (eventDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventDetails);
      }
      if (TierId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TierId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetPointsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ExternalId.Length != 0) {
        ExternalId = other.ExternalId;
      }
      if (other.ProgramId.Length != 0) {
        ProgramId = other.ProgramId;
      }
      if (other.Points != 0F) {
        Points = other.Points;
      }
      if (other.SecondaryPoints != 0F) {
        SecondaryPoints = other.SecondaryPoints;
      }
      if (other.TierPoints != 0) {
        TierPoints = other.TierPoints;
      }
      if (other.ResetPoints != false) {
        ResetPoints = other.ResetPoints;
      }
      if (other.ResetSecondaryPoints != false) {
        ResetSecondaryPoints = other.ResetSecondaryPoints;
      }
      if (other.ResetTierPoints != false) {
        ResetTierPoints = other.ResetTierPoints;
      }
      if (other.eventDetails_ != null) {
        if (eventDetails_ == null) {
          EventDetails = new global::PassKitGrpcSDK.Members.EventDetails();
        }
        EventDetails.MergeFrom(other.EventDetails);
      }
      if (other.TierId.Length != 0) {
        TierId = other.TierId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
          case 26: {
            ProgramId = input.ReadString();
            break;
          }
          case 37: {
            Points = input.ReadFloat();
            break;
          }
          case 45: {
            SecondaryPoints = input.ReadFloat();
            break;
          }
          case 48: {
            TierPoints = input.ReadUInt32();
            break;
          }
          case 56: {
            ResetPoints = input.ReadBool();
            break;
          }
          case 64: {
            ResetSecondaryPoints = input.ReadBool();
            break;
          }
          case 72: {
            ResetTierPoints = input.ReadBool();
            break;
          }
          case 82: {
            if (eventDetails_ == null) {
              EventDetails = new global::PassKitGrpcSDK.Members.EventDetails();
            }
            input.ReadMessage(EventDetails);
            break;
          }
          case 90: {
            TierId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ExternalId = input.ReadString();
            break;
          }
          case 26: {
            ProgramId = input.ReadString();
            break;
          }
          case 37: {
            Points = input.ReadFloat();
            break;
          }
          case 45: {
            SecondaryPoints = input.ReadFloat();
            break;
          }
          case 48: {
            TierPoints = input.ReadUInt32();
            break;
          }
          case 56: {
            ResetPoints = input.ReadBool();
            break;
          }
          case 64: {
            ResetSecondaryPoints = input.ReadBool();
            break;
          }
          case 72: {
            ResetTierPoints = input.ReadBool();
            break;
          }
          case 82: {
            if (eventDetails_ == null) {
              EventDetails = new global::PassKitGrpcSDK.Members.EventDetails();
            }
            input.ReadMessage(EventDetails);
            break;
          }
          case 90: {
            TierId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MemberCheckInOutRequest : pb::IMessage<MemberCheckInOutRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MemberCheckInOutRequest> _parser = new pb::MessageParser<MemberCheckInOutRequest>(() => new MemberCheckInOutRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberCheckInOutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.MemberReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberCheckInOutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberCheckInOutRequest(MemberCheckInOutRequest other) : this() {
      memberId_ = other.memberId_;
      externalMemberId_ = other.externalMemberId_;
      programId_ = other.programId_;
      address_ = other.address_;
      lat_ = other.lat_;
      lon_ = other.lon_;
      alt_ = other.alt_;
      externalEventId_ = other.externalEventId_;
      externalDeviceId_ = other.externalDeviceId_;
      externalServiceId_ = other.externalServiceId_;
      metaData_ = other.metaData_.Clone();
      notes_ = other.notes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberCheckInOutRequest Clone() {
      return new MemberCheckInOutRequest(this);
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 1;
    private string memberId_ = "";
    /// <summary>
    /// PassKit generated member ID (22 characters). Required if externalMemberId and programId are not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalMemberId" field.</summary>
    public const int ExternalMemberIdFieldNumber = 2;
    private string externalMemberId_ = "";
    /// <summary>
    /// External member ID. Required if id is not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalMemberId {
      get { return externalMemberId_; }
      set {
        externalMemberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "programId" field.</summary>
    public const int ProgramIdFieldNumber = 3;
    private string programId_ = "";
    /// <summary>
    /// Program ID which member belongs to. Required if id is not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgramId {
      get { return programId_; }
      set {
        programId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 4;
    private string address_ = "";
    /// <summary>
    /// Address the event took place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lat" field.</summary>
    public const int LatFieldNumber = 5;
    private double lat_;
    /// <summary>
    /// Latitude the event took place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Lat {
      get { return lat_; }
      set {
        lat_ = value;
      }
    }

    /// <summary>Field number for the "lon" field.</summary>
    public const int LonFieldNumber = 6;
    private double lon_;
    /// <summary>
    /// Longitude the event took place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Lon {
      get { return lon_; }
      set {
        lon_ = value;
      }
    }

    /// <summary>Field number for the "alt" field.</summary>
    public const int AltFieldNumber = 7;
    private int alt_;
    /// <summary>
    /// Altitude the event took place (in metres).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Alt {
      get { return alt_; }
      set {
        alt_ = value;
      }
    }

    /// <summary>Field number for the "externalEventId" field.</summary>
    public const int ExternalEventIdFieldNumber = 8;
    private string externalEventId_ = "";
    /// <summary>
    /// External unique ID of the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalEventId {
      get { return externalEventId_; }
      set {
        externalEventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalDeviceId" field.</summary>
    public const int ExternalDeviceIdFieldNumber = 9;
    private string externalDeviceId_ = "";
    /// <summary>
    /// External device ID of the device that was used to capture the event (for example when using an external scanning app).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalDeviceId {
      get { return externalDeviceId_; }
      set {
        externalDeviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalServiceId" field.</summary>
    public const int ExternalServiceIdFieldNumber = 10;
    private string externalServiceId_ = "";
    /// <summary>
    /// External service ID of the service that was used for capturing the event (for example when using an external scanning app).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalServiceId {
      get { return externalServiceId_; }
      set {
        externalServiceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metaData" field.</summary>
    public const int MetaDataFieldNumber = 11;
    private static readonly pbc::MapField<string, string>.Codec _map_metaData_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 90);
    private readonly pbc::MapField<string, string> metaData_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Any meta data (for example gathered on scanning) that is relevant to the event (# of points earner, bill spent, device meta-data, etc).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> MetaData {
      get { return metaData_; }
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 12;
    private string notes_ = "";
    /// <summary>
    /// Any relevant notes for the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Notes {
      get { return notes_; }
      set {
        notes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberCheckInOutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberCheckInOutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberId != other.MemberId) return false;
      if (ExternalMemberId != other.ExternalMemberId) return false;
      if (ProgramId != other.ProgramId) return false;
      if (Address != other.Address) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lat, other.Lat)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lon, other.Lon)) return false;
      if (Alt != other.Alt) return false;
      if (ExternalEventId != other.ExternalEventId) return false;
      if (ExternalDeviceId != other.ExternalDeviceId) return false;
      if (ExternalServiceId != other.ExternalServiceId) return false;
      if (!MetaData.Equals(other.MetaData)) return false;
      if (Notes != other.Notes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (ExternalMemberId.Length != 0) hash ^= ExternalMemberId.GetHashCode();
      if (ProgramId.Length != 0) hash ^= ProgramId.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (Lat != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lat);
      if (Lon != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lon);
      if (Alt != 0) hash ^= Alt.GetHashCode();
      if (ExternalEventId.Length != 0) hash ^= ExternalEventId.GetHashCode();
      if (ExternalDeviceId.Length != 0) hash ^= ExternalDeviceId.GetHashCode();
      if (ExternalServiceId.Length != 0) hash ^= ExternalServiceId.GetHashCode();
      hash ^= MetaData.GetHashCode();
      if (Notes.Length != 0) hash ^= Notes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MemberId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberId);
      }
      if (ExternalMemberId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalMemberId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProgramId);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Address);
      }
      if (Lat != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Lat);
      }
      if (Lon != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Lon);
      }
      if (Alt != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Alt);
      }
      if (ExternalEventId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ExternalEventId);
      }
      if (ExternalDeviceId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ExternalDeviceId);
      }
      if (ExternalServiceId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ExternalServiceId);
      }
      metaData_.WriteTo(output, _map_metaData_codec);
      if (Notes.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Notes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MemberId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberId);
      }
      if (ExternalMemberId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalMemberId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProgramId);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Address);
      }
      if (Lat != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Lat);
      }
      if (Lon != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Lon);
      }
      if (Alt != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Alt);
      }
      if (ExternalEventId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ExternalEventId);
      }
      if (ExternalDeviceId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ExternalDeviceId);
      }
      if (ExternalServiceId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ExternalServiceId);
      }
      metaData_.WriteTo(ref output, _map_metaData_codec);
      if (Notes.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Notes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (ExternalMemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalMemberId);
      }
      if (ProgramId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramId);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (Lat != 0D) {
        size += 1 + 8;
      }
      if (Lon != 0D) {
        size += 1 + 8;
      }
      if (Alt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Alt);
      }
      if (ExternalEventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalEventId);
      }
      if (ExternalDeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalDeviceId);
      }
      if (ExternalServiceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalServiceId);
      }
      size += metaData_.CalculateSize(_map_metaData_codec);
      if (Notes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberCheckInOutRequest other) {
      if (other == null) {
        return;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      if (other.ExternalMemberId.Length != 0) {
        ExternalMemberId = other.ExternalMemberId;
      }
      if (other.ProgramId.Length != 0) {
        ProgramId = other.ProgramId;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.Lat != 0D) {
        Lat = other.Lat;
      }
      if (other.Lon != 0D) {
        Lon = other.Lon;
      }
      if (other.Alt != 0) {
        Alt = other.Alt;
      }
      if (other.ExternalEventId.Length != 0) {
        ExternalEventId = other.ExternalEventId;
      }
      if (other.ExternalDeviceId.Length != 0) {
        ExternalDeviceId = other.ExternalDeviceId;
      }
      if (other.ExternalServiceId.Length != 0) {
        ExternalServiceId = other.ExternalServiceId;
      }
      metaData_.Add(other.metaData_);
      if (other.Notes.Length != 0) {
        Notes = other.Notes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberId = input.ReadString();
            break;
          }
          case 18: {
            ExternalMemberId = input.ReadString();
            break;
          }
          case 26: {
            ProgramId = input.ReadString();
            break;
          }
          case 34: {
            Address = input.ReadString();
            break;
          }
          case 41: {
            Lat = input.ReadDouble();
            break;
          }
          case 49: {
            Lon = input.ReadDouble();
            break;
          }
          case 56: {
            Alt = input.ReadInt32();
            break;
          }
          case 66: {
            ExternalEventId = input.ReadString();
            break;
          }
          case 74: {
            ExternalDeviceId = input.ReadString();
            break;
          }
          case 82: {
            ExternalServiceId = input.ReadString();
            break;
          }
          case 90: {
            metaData_.AddEntriesFrom(input, _map_metaData_codec);
            break;
          }
          case 98: {
            Notes = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MemberId = input.ReadString();
            break;
          }
          case 18: {
            ExternalMemberId = input.ReadString();
            break;
          }
          case 26: {
            ProgramId = input.ReadString();
            break;
          }
          case 34: {
            Address = input.ReadString();
            break;
          }
          case 41: {
            Lat = input.ReadDouble();
            break;
          }
          case 49: {
            Lon = input.ReadDouble();
            break;
          }
          case 56: {
            Alt = input.ReadInt32();
            break;
          }
          case 66: {
            ExternalEventId = input.ReadString();
            break;
          }
          case 74: {
            ExternalDeviceId = input.ReadString();
            break;
          }
          case 82: {
            ExternalServiceId = input.ReadString();
            break;
          }
          case 90: {
            metaData_.AddEntriesFrom(ref input, _map_metaData_codec);
            break;
          }
          case 98: {
            Notes = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListRequestDeprecated : pb::IMessage<ListRequestDeprecated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListRequestDeprecated> _parser = new pb::MessageParser<ListRequestDeprecated>(() => new ListRequestDeprecated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRequestDeprecated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.MemberReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequestDeprecated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequestDeprecated(ListRequestDeprecated other) : this() {
      programId_ = other.programId_;
      pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequestDeprecated Clone() {
      return new ListRequestDeprecated(this);
    }

    /// <summary>Field number for the "programId" field.</summary>
    public const int ProgramIdFieldNumber = 1;
    private string programId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgramId {
      get { return programId_; }
      set {
        programId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 2;
    private global::PassKitGrpcSDK.Pagination pagination_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Pagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRequestDeprecated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRequestDeprecated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProgramId != other.ProgramId) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProgramId.Length != 0) hash ^= ProgramId.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProgramId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProgramId);
      }
      if (pagination_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProgramId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProgramId);
      }
      if (pagination_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProgramId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramId);
      }
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRequestDeprecated other) {
      if (other == null) {
        return;
      }
      if (other.ProgramId.Length != 0) {
        ProgramId = other.ProgramId;
      }
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          Pagination = new global::PassKitGrpcSDK.Pagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProgramId = input.ReadString();
            break;
          }
          case 18: {
            if (pagination_ == null) {
              Pagination = new global::PassKitGrpcSDK.Pagination();
            }
            input.ReadMessage(Pagination);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProgramId = input.ReadString();
            break;
          }
          case 18: {
            if (pagination_ == null) {
              Pagination = new global::PassKitGrpcSDK.Pagination();
            }
            input.ReadMessage(Pagination);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListRequest : pb::IMessage<ListRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListRequest> _parser = new pb::MessageParser<ListRequest>(() => new ListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.MemberReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequest(ListRequest other) : this() {
      programId_ = other.programId_;
      filters_ = other.filters_ != null ? other.filters_.Clone() : null;
      emailAsCsv_ = other.emailAsCsv_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequest Clone() {
      return new ListRequest(this);
    }

    /// <summary>Field number for the "programId" field.</summary>
    public const int ProgramIdFieldNumber = 1;
    private string programId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgramId {
      get { return programId_; }
      set {
        programId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 2;
    private global::PassKitGrpcSDK.Filters filters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Filters Filters {
      get { return filters_; }
      set {
        filters_ = value;
      }
    }

    /// <summary>Field number for the "emailAsCsv" field.</summary>
    public const int EmailAsCsvFieldNumber = 3;
    private bool emailAsCsv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EmailAsCsv {
      get { return emailAsCsv_; }
      set {
        emailAsCsv_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProgramId != other.ProgramId) return false;
      if (!object.Equals(Filters, other.Filters)) return false;
      if (EmailAsCsv != other.EmailAsCsv) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProgramId.Length != 0) hash ^= ProgramId.GetHashCode();
      if (filters_ != null) hash ^= Filters.GetHashCode();
      if (EmailAsCsv != false) hash ^= EmailAsCsv.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProgramId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProgramId);
      }
      if (filters_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Filters);
      }
      if (EmailAsCsv != false) {
        output.WriteRawTag(24);
        output.WriteBool(EmailAsCsv);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProgramId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProgramId);
      }
      if (filters_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Filters);
      }
      if (EmailAsCsv != false) {
        output.WriteRawTag(24);
        output.WriteBool(EmailAsCsv);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProgramId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramId);
      }
      if (filters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filters);
      }
      if (EmailAsCsv != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProgramId.Length != 0) {
        ProgramId = other.ProgramId;
      }
      if (other.filters_ != null) {
        if (filters_ == null) {
          Filters = new global::PassKitGrpcSDK.Filters();
        }
        Filters.MergeFrom(other.Filters);
      }
      if (other.EmailAsCsv != false) {
        EmailAsCsv = other.EmailAsCsv;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProgramId = input.ReadString();
            break;
          }
          case 18: {
            if (filters_ == null) {
              Filters = new global::PassKitGrpcSDK.Filters();
            }
            input.ReadMessage(Filters);
            break;
          }
          case 24: {
            EmailAsCsv = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProgramId = input.ReadString();
            break;
          }
          case 18: {
            if (filters_ == null) {
              Filters = new global::PassKitGrpcSDK.Filters();
            }
            input.ReadMessage(Filters);
            break;
          }
          case 24: {
            EmailAsCsv = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChangeTierRequest : pb::IMessage<ChangeTierRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChangeTierRequest> _parser = new pb::MessageParser<ChangeTierRequest>(() => new ChangeTierRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeTierRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKitGrpcSDK.Members.MemberReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeTierRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeTierRequest(ChangeTierRequest other) : this() {
      memberId_ = other.memberId_;
      externalMemberId_ = other.externalMemberId_;
      programId_ = other.programId_;
      tierId_ = other.tierId_;
      eventDetails_ = other.eventDetails_ != null ? other.eventDetails_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeTierRequest Clone() {
      return new ChangeTierRequest(this);
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 1;
    private string memberId_ = "";
    /// <summary>
    /// PassKit generated member ID (22 characters). Required if externalMemberId and programId are not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalMemberId" field.</summary>
    public const int ExternalMemberIdFieldNumber = 2;
    private string externalMemberId_ = "";
    /// <summary>
    /// External member ID. Required if id is not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExternalMemberId {
      get { return externalMemberId_; }
      set {
        externalMemberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "programId" field.</summary>
    public const int ProgramIdFieldNumber = 3;
    private string programId_ = "";
    /// <summary>
    /// Program ID which member belongs to. Required if id is not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgramId {
      get { return programId_; }
      set {
        programId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tierId" field.</summary>
    public const int TierIdFieldNumber = 4;
    private string tierId_ = "";
    /// <summary>
    /// Indicates the ID of the tier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TierId {
      get { return tierId_; }
      set {
        tierId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eventDetails" field.</summary>
    public const int EventDetailsFieldNumber = 7;
    private global::PassKitGrpcSDK.Members.EventDetails eventDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKitGrpcSDK.Members.EventDetails EventDetails {
      get { return eventDetails_; }
      set {
        eventDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeTierRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeTierRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberId != other.MemberId) return false;
      if (ExternalMemberId != other.ExternalMemberId) return false;
      if (ProgramId != other.ProgramId) return false;
      if (TierId != other.TierId) return false;
      if (!object.Equals(EventDetails, other.EventDetails)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (ExternalMemberId.Length != 0) hash ^= ExternalMemberId.GetHashCode();
      if (ProgramId.Length != 0) hash ^= ProgramId.GetHashCode();
      if (TierId.Length != 0) hash ^= TierId.GetHashCode();
      if (eventDetails_ != null) hash ^= EventDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MemberId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberId);
      }
      if (ExternalMemberId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalMemberId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProgramId);
      }
      if (TierId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TierId);
      }
      if (eventDetails_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EventDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MemberId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberId);
      }
      if (ExternalMemberId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExternalMemberId);
      }
      if (ProgramId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProgramId);
      }
      if (TierId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TierId);
      }
      if (eventDetails_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EventDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (ExternalMemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalMemberId);
      }
      if (ProgramId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramId);
      }
      if (TierId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TierId);
      }
      if (eventDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeTierRequest other) {
      if (other == null) {
        return;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      if (other.ExternalMemberId.Length != 0) {
        ExternalMemberId = other.ExternalMemberId;
      }
      if (other.ProgramId.Length != 0) {
        ProgramId = other.ProgramId;
      }
      if (other.TierId.Length != 0) {
        TierId = other.TierId;
      }
      if (other.eventDetails_ != null) {
        if (eventDetails_ == null) {
          EventDetails = new global::PassKitGrpcSDK.Members.EventDetails();
        }
        EventDetails.MergeFrom(other.EventDetails);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberId = input.ReadString();
            break;
          }
          case 18: {
            ExternalMemberId = input.ReadString();
            break;
          }
          case 26: {
            ProgramId = input.ReadString();
            break;
          }
          case 34: {
            TierId = input.ReadString();
            break;
          }
          case 58: {
            if (eventDetails_ == null) {
              EventDetails = new global::PassKitGrpcSDK.Members.EventDetails();
            }
            input.ReadMessage(EventDetails);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MemberId = input.ReadString();
            break;
          }
          case 18: {
            ExternalMemberId = input.ReadString();
            break;
          }
          case 26: {
            ProgramId = input.ReadString();
            break;
          }
          case 34: {
            TierId = input.ReadString();
            break;
          }
          case 58: {
            if (eventDetails_ == null) {
              EventDetails = new global::PassKitGrpcSDK.Members.EventDetails();
            }
            input.ReadMessage(EventDetails);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
