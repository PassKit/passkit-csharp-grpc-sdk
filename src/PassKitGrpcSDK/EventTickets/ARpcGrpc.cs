// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/event_tickets/a_rpc.proto
// </auto-generated>
// Original file comments:
// *
// Events Protocol is designed to get your Digital Event Tickets into Apple Wallet and Google Pay, from theatre and cinema, to sport events and concerts.
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace PassKitGrpcSDK.EventTickets {
  public static partial class EventTickets
  {
    static readonly string __ServiceName = "event_tickets.EventTickets";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.Production> __Marshaller_event_tickets_Production = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.Production.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.Id> __Marshaller_io_Id = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.Id.Parser));
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.Filters> __Marshaller_io_Filters = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.Filters.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.AnalyticsRequest> __Marshaller_io_AnalyticsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.AnalyticsRequest.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.ProductionAnalyticsResponse> __Marshaller_event_tickets_ProductionAnalyticsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.ProductionAnalyticsResponse.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.ProductionCopyRequest> __Marshaller_event_tickets_ProductionCopyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.ProductionCopyRequest.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.Venue> __Marshaller_event_tickets_Venue = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.Venue.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.Event> __Marshaller_event_tickets_Event = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.Event.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.GetEventRequest> __Marshaller_event_tickets_GetEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.GetEventRequest.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.EventListRequest> __Marshaller_event_tickets_EventListRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.EventListRequest.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.EventListResponse> __Marshaller_event_tickets_EventListResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.EventListResponse.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.TicketType> __Marshaller_event_tickets_TicketType = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.TicketType.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.GetByUidRequest> __Marshaller_event_tickets_GetByUidRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.GetByUidRequest.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.TicketTypeListRequest> __Marshaller_event_tickets_TicketTypeListRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.TicketTypeListRequest.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.IssueTicketRequest> __Marshaller_event_tickets_IssueTicketRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.IssueTicketRequest.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.Ticket> __Marshaller_event_tickets_Ticket = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.Ticket.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.IssueTicketResponseIds> __Marshaller_event_tickets_IssueTicketResponseIds = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.IssueTicketResponseIds.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.EventTicketPerson> __Marshaller_event_tickets_EventTicketPerson = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.EventTicketPerson.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.ValidateTicketRequest> __Marshaller_event_tickets_ValidateTicketRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.ValidateTicketRequest.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.ValidateTicketResponse> __Marshaller_event_tickets_ValidateTicketResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.ValidateTicketResponse.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.RedeemTicketRequest> __Marshaller_event_tickets_RedeemTicketRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.RedeemTicketRequest.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.RedeemByOrderNumber> __Marshaller_event_tickets_RedeemByOrderNumber = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.RedeemByOrderNumber.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.Ids> __Marshaller_io_Ids = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.Ids.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.TicketNumberRequest> __Marshaller_event_tickets_TicketNumberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.TicketNumberRequest.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.OrderNumberRequest> __Marshaller_event_tickets_OrderNumberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.OrderNumberRequest.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.Tickets> __Marshaller_event_tickets_Tickets = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.Tickets.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.EventTicketPassRequest> __Marshaller_event_tickets_EventTicketPassRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.EventTicketPassRequest.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.PassBundles> __Marshaller_io_PassBundles = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.PassBundles.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.TicketId> __Marshaller_event_tickets_TicketId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.TicketId.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.TicketListRequest> __Marshaller_event_tickets_TicketListRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.TicketListRequest.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.EventTickets.TicketLimitedFields> __Marshaller_event_tickets_TicketLimitedFields = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.EventTickets.TicketLimitedFields.Parser));
    static readonly grpc::Marshaller<global::PassKitGrpcSDK.Count> __Marshaller_io_Count = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PassKitGrpcSDK.Count.Parser));

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Production, global::PassKitGrpcSDK.Id> __Method_createProduction = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Production, global::PassKitGrpcSDK.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "createProduction",
        __Marshaller_event_tickets_Production,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Production, global::PassKitGrpcSDK.EventTickets.Production> __Method_patchProduction = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Production, global::PassKitGrpcSDK.EventTickets.Production>(
        grpc::MethodType.Unary,
        __ServiceName,
        "patchProduction",
        __Marshaller_event_tickets_Production,
        __Marshaller_event_tickets_Production);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Production, global::PassKitGrpcSDK.EventTickets.Production> __Method_updateProduction = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Production, global::PassKitGrpcSDK.EventTickets.Production>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updateProduction",
        __Marshaller_event_tickets_Production,
        __Marshaller_event_tickets_Production);

    static readonly grpc::Method<global::PassKitGrpcSDK.Id, global::PassKitGrpcSDK.EventTickets.Production> __Method_getProduction = new grpc::Method<global::PassKitGrpcSDK.Id, global::PassKitGrpcSDK.EventTickets.Production>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getProduction",
        __Marshaller_io_Id,
        __Marshaller_event_tickets_Production);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Production, global::Google.Protobuf.WellKnownTypes.Empty> __Method_deleteProduction = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Production, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "deleteProduction",
        __Marshaller_event_tickets_Production,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PassKitGrpcSDK.Filters, global::PassKitGrpcSDK.EventTickets.Production> __Method_listProductions = new grpc::Method<global::PassKitGrpcSDK.Filters, global::PassKitGrpcSDK.EventTickets.Production>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "listProductions",
        __Marshaller_io_Filters,
        __Marshaller_event_tickets_Production);

    static readonly grpc::Method<global::PassKitGrpcSDK.AnalyticsRequest, global::PassKitGrpcSDK.EventTickets.ProductionAnalyticsResponse> __Method_getAnalytics = new grpc::Method<global::PassKitGrpcSDK.AnalyticsRequest, global::PassKitGrpcSDK.EventTickets.ProductionAnalyticsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getAnalytics",
        __Marshaller_io_AnalyticsRequest,
        __Marshaller_event_tickets_ProductionAnalyticsResponse);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.ProductionCopyRequest, global::PassKitGrpcSDK.Id> __Method_copyProduction = new grpc::Method<global::PassKitGrpcSDK.EventTickets.ProductionCopyRequest, global::PassKitGrpcSDK.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "copyProduction",
        __Marshaller_event_tickets_ProductionCopyRequest,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Venue, global::PassKitGrpcSDK.Id> __Method_createVenue = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Venue, global::PassKitGrpcSDK.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "createVenue",
        __Marshaller_event_tickets_Venue,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Venue, global::PassKitGrpcSDK.EventTickets.Venue> __Method_updateVenue = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Venue, global::PassKitGrpcSDK.EventTickets.Venue>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updateVenue",
        __Marshaller_event_tickets_Venue,
        __Marshaller_event_tickets_Venue);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Venue, global::PassKitGrpcSDK.EventTickets.Venue> __Method_patchVenue = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Venue, global::PassKitGrpcSDK.EventTickets.Venue>(
        grpc::MethodType.Unary,
        __ServiceName,
        "patchVenue",
        __Marshaller_event_tickets_Venue,
        __Marshaller_event_tickets_Venue);

    static readonly grpc::Method<global::PassKitGrpcSDK.Id, global::PassKitGrpcSDK.EventTickets.Venue> __Method_getVenueById = new grpc::Method<global::PassKitGrpcSDK.Id, global::PassKitGrpcSDK.EventTickets.Venue>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getVenueById",
        __Marshaller_io_Id,
        __Marshaller_event_tickets_Venue);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Venue, global::Google.Protobuf.WellKnownTypes.Empty> __Method_deleteVenue = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Venue, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "deleteVenue",
        __Marshaller_event_tickets_Venue,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PassKitGrpcSDK.Filters, global::PassKitGrpcSDK.EventTickets.Venue> __Method_listVenues = new grpc::Method<global::PassKitGrpcSDK.Filters, global::PassKitGrpcSDK.EventTickets.Venue>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "listVenues",
        __Marshaller_io_Filters,
        __Marshaller_event_tickets_Venue);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Event, global::PassKitGrpcSDK.Id> __Method_createEvent = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Event, global::PassKitGrpcSDK.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "createEvent",
        __Marshaller_event_tickets_Event,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Event, global::PassKitGrpcSDK.EventTickets.Event> __Method_updateEvent = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Event, global::PassKitGrpcSDK.EventTickets.Event>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updateEvent",
        __Marshaller_event_tickets_Event,
        __Marshaller_event_tickets_Event);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Event, global::PassKitGrpcSDK.EventTickets.Event> __Method_patchEvent = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Event, global::PassKitGrpcSDK.EventTickets.Event>(
        grpc::MethodType.Unary,
        __ServiceName,
        "patchEvent",
        __Marshaller_event_tickets_Event,
        __Marshaller_event_tickets_Event);

    static readonly grpc::Method<global::PassKitGrpcSDK.Id, global::PassKitGrpcSDK.EventTickets.Event> __Method_getEventById = new grpc::Method<global::PassKitGrpcSDK.Id, global::PassKitGrpcSDK.EventTickets.Event>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getEventById",
        __Marshaller_io_Id,
        __Marshaller_event_tickets_Event);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.GetEventRequest, global::PassKitGrpcSDK.EventTickets.Event> __Method_getEventByStartDateAndVenue = new grpc::Method<global::PassKitGrpcSDK.EventTickets.GetEventRequest, global::PassKitGrpcSDK.EventTickets.Event>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getEventByStartDateAndVenue",
        __Marshaller_event_tickets_GetEventRequest,
        __Marshaller_event_tickets_Event);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Event, global::Google.Protobuf.WellKnownTypes.Empty> __Method_deleteEvent = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Event, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "deleteEvent",
        __Marshaller_event_tickets_Event,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.EventListRequest, global::PassKitGrpcSDK.EventTickets.EventListResponse> __Method_listEvents = new grpc::Method<global::PassKitGrpcSDK.EventTickets.EventListRequest, global::PassKitGrpcSDK.EventTickets.EventListResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "listEvents",
        __Marshaller_event_tickets_EventListRequest,
        __Marshaller_event_tickets_EventListResponse);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketType, global::PassKitGrpcSDK.Id> __Method_createTicketType = new grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketType, global::PassKitGrpcSDK.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "createTicketType",
        __Marshaller_event_tickets_TicketType,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketType, global::PassKitGrpcSDK.EventTickets.TicketType> __Method_updateTicketType = new grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketType, global::PassKitGrpcSDK.EventTickets.TicketType>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updateTicketType",
        __Marshaller_event_tickets_TicketType,
        __Marshaller_event_tickets_TicketType);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketType, global::PassKitGrpcSDK.EventTickets.TicketType> __Method_patchTicketType = new grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketType, global::PassKitGrpcSDK.EventTickets.TicketType>(
        grpc::MethodType.Unary,
        __ServiceName,
        "patchTicketType",
        __Marshaller_event_tickets_TicketType,
        __Marshaller_event_tickets_TicketType);

    static readonly grpc::Method<global::PassKitGrpcSDK.Id, global::PassKitGrpcSDK.EventTickets.TicketType> __Method_getTicketTypeById = new grpc::Method<global::PassKitGrpcSDK.Id, global::PassKitGrpcSDK.EventTickets.TicketType>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getTicketTypeById",
        __Marshaller_io_Id,
        __Marshaller_event_tickets_TicketType);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.GetByUidRequest, global::PassKitGrpcSDK.EventTickets.TicketType> __Method_getTicketTypeByUserDefinedId = new grpc::Method<global::PassKitGrpcSDK.EventTickets.GetByUidRequest, global::PassKitGrpcSDK.EventTickets.TicketType>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getTicketTypeByUserDefinedId",
        __Marshaller_event_tickets_GetByUidRequest,
        __Marshaller_event_tickets_TicketType);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketType, global::Google.Protobuf.WellKnownTypes.Empty> __Method_deleteTicketType = new grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketType, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "deleteTicketType",
        __Marshaller_event_tickets_TicketType,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketTypeListRequest, global::PassKitGrpcSDK.EventTickets.TicketType> __Method_listTicketTypes = new grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketTypeListRequest, global::PassKitGrpcSDK.EventTickets.TicketType>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "listTicketTypes",
        __Marshaller_event_tickets_TicketTypeListRequest,
        __Marshaller_event_tickets_TicketType);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.IssueTicketRequest, global::PassKitGrpcSDK.Id> __Method_issueTicket = new grpc::Method<global::PassKitGrpcSDK.EventTickets.IssueTicketRequest, global::PassKitGrpcSDK.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "issueTicket",
        __Marshaller_event_tickets_IssueTicketRequest,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Ticket, global::PassKitGrpcSDK.EventTickets.IssueTicketResponseIds> __Method_issueTicketById = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Ticket, global::PassKitGrpcSDK.EventTickets.IssueTicketResponseIds>(
        grpc::MethodType.Unary,
        __ServiceName,
        "issueTicketById",
        __Marshaller_event_tickets_Ticket,
        __Marshaller_event_tickets_IssueTicketResponseIds);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.Ticket, global::PassKitGrpcSDK.Id> __Method_updateTicket = new grpc::Method<global::PassKitGrpcSDK.EventTickets.Ticket, global::PassKitGrpcSDK.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updateTicket",
        __Marshaller_event_tickets_Ticket,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.EventTicketPerson, global::PassKitGrpcSDK.Id> __Method_patchPerson = new grpc::Method<global::PassKitGrpcSDK.EventTickets.EventTicketPerson, global::PassKitGrpcSDK.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "patchPerson",
        __Marshaller_event_tickets_EventTicketPerson,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.ValidateTicketRequest, global::PassKitGrpcSDK.EventTickets.ValidateTicketResponse> __Method_validateTicket = new grpc::Method<global::PassKitGrpcSDK.EventTickets.ValidateTicketRequest, global::PassKitGrpcSDK.EventTickets.ValidateTicketResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "validateTicket",
        __Marshaller_event_tickets_ValidateTicketRequest,
        __Marshaller_event_tickets_ValidateTicketResponse);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.RedeemTicketRequest, global::PassKitGrpcSDK.Id> __Method_redeemTicket = new grpc::Method<global::PassKitGrpcSDK.EventTickets.RedeemTicketRequest, global::PassKitGrpcSDK.Id>(
        grpc::MethodType.Unary,
        __ServiceName,
        "redeemTicket",
        __Marshaller_event_tickets_RedeemTicketRequest,
        __Marshaller_io_Id);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.RedeemByOrderNumber, global::PassKitGrpcSDK.Ids> __Method_redeemTicketsByOrderNumber = new grpc::Method<global::PassKitGrpcSDK.EventTickets.RedeemByOrderNumber, global::PassKitGrpcSDK.Ids>(
        grpc::MethodType.Unary,
        __ServiceName,
        "redeemTicketsByOrderNumber",
        __Marshaller_event_tickets_RedeemByOrderNumber,
        __Marshaller_io_Ids);

    static readonly grpc::Method<global::PassKitGrpcSDK.Id, global::PassKitGrpcSDK.EventTickets.Ticket> __Method_getTicketById = new grpc::Method<global::PassKitGrpcSDK.Id, global::PassKitGrpcSDK.EventTickets.Ticket>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getTicketById",
        __Marshaller_io_Id,
        __Marshaller_event_tickets_Ticket);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketNumberRequest, global::PassKitGrpcSDK.EventTickets.Ticket> __Method_getTicketByTicketNumber = new grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketNumberRequest, global::PassKitGrpcSDK.EventTickets.Ticket>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getTicketByTicketNumber",
        __Marshaller_event_tickets_TicketNumberRequest,
        __Marshaller_event_tickets_Ticket);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.OrderNumberRequest, global::PassKitGrpcSDK.EventTickets.Tickets> __Method_getTicketsByOrderNumber = new grpc::Method<global::PassKitGrpcSDK.EventTickets.OrderNumberRequest, global::PassKitGrpcSDK.EventTickets.Tickets>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getTicketsByOrderNumber",
        __Marshaller_event_tickets_OrderNumberRequest,
        __Marshaller_event_tickets_Tickets);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.EventTicketPassRequest, global::PassKitGrpcSDK.PassBundles> __Method_getEventTicketPass = new grpc::Method<global::PassKitGrpcSDK.EventTickets.EventTicketPassRequest, global::PassKitGrpcSDK.PassBundles>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getEventTicketPass",
        __Marshaller_event_tickets_EventTicketPassRequest,
        __Marshaller_io_PassBundles);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketId, global::Google.Protobuf.WellKnownTypes.Empty> __Method_deleteTicket = new grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketId, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "deleteTicket",
        __Marshaller_event_tickets_TicketId,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.OrderNumberRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_deleteTicketsByOrderNumber = new grpc::Method<global::PassKitGrpcSDK.EventTickets.OrderNumberRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "deleteTicketsByOrderNumber",
        __Marshaller_event_tickets_OrderNumberRequest,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketListRequest, global::PassKitGrpcSDK.EventTickets.TicketLimitedFields> __Method_listTickets = new grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketListRequest, global::PassKitGrpcSDK.EventTickets.TicketLimitedFields>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "listTickets",
        __Marshaller_event_tickets_TicketListRequest,
        __Marshaller_event_tickets_TicketLimitedFields);

    static readonly grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketListRequest, global::PassKitGrpcSDK.Count> __Method_countTickets = new grpc::Method<global::PassKitGrpcSDK.EventTickets.TicketListRequest, global::PassKitGrpcSDK.Count>(
        grpc::MethodType.Unary,
        __ServiceName,
        "countTickets",
        __Marshaller_event_tickets_TicketListRequest,
        __Marshaller_io_Count);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PassKitGrpcSDK.EventTickets.ARpcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for EventTickets</summary>
    public partial class EventTicketsClient : grpc::ClientBase<EventTicketsClient>
    {
      /// <summary>Creates a new client for EventTickets</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public EventTicketsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EventTickets that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public EventTicketsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected EventTicketsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected EventTicketsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::PassKitGrpcSDK.Id createProduction(global::PassKitGrpcSDK.EventTickets.Production request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createProduction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.Id createProduction(global::PassKitGrpcSDK.EventTickets.Production request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_createProduction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> createProductionAsync(global::PassKitGrpcSDK.EventTickets.Production request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createProductionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> createProductionAsync(global::PassKitGrpcSDK.EventTickets.Production request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_createProduction, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Production patchProduction(global::PassKitGrpcSDK.EventTickets.Production request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return patchProduction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Production patchProduction(global::PassKitGrpcSDK.EventTickets.Production request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_patchProduction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Production> patchProductionAsync(global::PassKitGrpcSDK.EventTickets.Production request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return patchProductionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Production> patchProductionAsync(global::PassKitGrpcSDK.EventTickets.Production request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_patchProduction, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Production updateProduction(global::PassKitGrpcSDK.EventTickets.Production request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateProduction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Production updateProduction(global::PassKitGrpcSDK.EventTickets.Production request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updateProduction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Production> updateProductionAsync(global::PassKitGrpcSDK.EventTickets.Production request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateProductionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Production> updateProductionAsync(global::PassKitGrpcSDK.EventTickets.Production request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updateProduction, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Production getProduction(global::PassKitGrpcSDK.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getProduction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Production getProduction(global::PassKitGrpcSDK.Id request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getProduction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Production> getProductionAsync(global::PassKitGrpcSDK.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getProductionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Production> getProductionAsync(global::PassKitGrpcSDK.Id request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getProduction, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteProduction(global::PassKitGrpcSDK.EventTickets.Production request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteProduction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteProduction(global::PassKitGrpcSDK.EventTickets.Production request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_deleteProduction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteProductionAsync(global::PassKitGrpcSDK.EventTickets.Production request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteProductionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteProductionAsync(global::PassKitGrpcSDK.EventTickets.Production request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_deleteProduction, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::PassKitGrpcSDK.EventTickets.Production> listProductions(global::PassKitGrpcSDK.Filters request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return listProductions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PassKitGrpcSDK.EventTickets.Production> listProductions(global::PassKitGrpcSDK.Filters request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_listProductions, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.ProductionAnalyticsResponse getAnalytics(global::PassKitGrpcSDK.AnalyticsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getAnalytics(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.ProductionAnalyticsResponse getAnalytics(global::PassKitGrpcSDK.AnalyticsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getAnalytics, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.ProductionAnalyticsResponse> getAnalyticsAsync(global::PassKitGrpcSDK.AnalyticsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getAnalyticsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.ProductionAnalyticsResponse> getAnalyticsAsync(global::PassKitGrpcSDK.AnalyticsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getAnalytics, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.Id copyProduction(global::PassKitGrpcSDK.EventTickets.ProductionCopyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return copyProduction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.Id copyProduction(global::PassKitGrpcSDK.EventTickets.ProductionCopyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_copyProduction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> copyProductionAsync(global::PassKitGrpcSDK.EventTickets.ProductionCopyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return copyProductionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> copyProductionAsync(global::PassKitGrpcSDK.EventTickets.ProductionCopyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_copyProduction, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.Id createVenue(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createVenue(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.Id createVenue(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_createVenue, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> createVenueAsync(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createVenueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> createVenueAsync(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_createVenue, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Venue updateVenue(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateVenue(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Venue updateVenue(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updateVenue, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Venue> updateVenueAsync(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateVenueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Venue> updateVenueAsync(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updateVenue, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Venue patchVenue(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return patchVenue(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Venue patchVenue(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_patchVenue, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Venue> patchVenueAsync(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return patchVenueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Venue> patchVenueAsync(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_patchVenue, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Venue getVenueById(global::PassKitGrpcSDK.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getVenueById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Venue getVenueById(global::PassKitGrpcSDK.Id request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getVenueById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Venue> getVenueByIdAsync(global::PassKitGrpcSDK.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getVenueByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Venue> getVenueByIdAsync(global::PassKitGrpcSDK.Id request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getVenueById, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteVenue(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteVenue(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteVenue(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_deleteVenue, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteVenueAsync(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteVenueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteVenueAsync(global::PassKitGrpcSDK.EventTickets.Venue request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_deleteVenue, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::PassKitGrpcSDK.EventTickets.Venue> listVenues(global::PassKitGrpcSDK.Filters request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return listVenues(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PassKitGrpcSDK.EventTickets.Venue> listVenues(global::PassKitGrpcSDK.Filters request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_listVenues, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.Id createEvent(global::PassKitGrpcSDK.EventTickets.Event request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.Id createEvent(global::PassKitGrpcSDK.EventTickets.Event request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_createEvent, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> createEventAsync(global::PassKitGrpcSDK.EventTickets.Event request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> createEventAsync(global::PassKitGrpcSDK.EventTickets.Event request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_createEvent, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Event updateEvent(global::PassKitGrpcSDK.EventTickets.Event request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Event updateEvent(global::PassKitGrpcSDK.EventTickets.Event request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updateEvent, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Event> updateEventAsync(global::PassKitGrpcSDK.EventTickets.Event request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Event> updateEventAsync(global::PassKitGrpcSDK.EventTickets.Event request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updateEvent, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Event patchEvent(global::PassKitGrpcSDK.EventTickets.Event request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return patchEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Event patchEvent(global::PassKitGrpcSDK.EventTickets.Event request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_patchEvent, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Event> patchEventAsync(global::PassKitGrpcSDK.EventTickets.Event request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return patchEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Event> patchEventAsync(global::PassKitGrpcSDK.EventTickets.Event request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_patchEvent, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Event getEventById(global::PassKitGrpcSDK.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getEventById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Event getEventById(global::PassKitGrpcSDK.Id request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getEventById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Event> getEventByIdAsync(global::PassKitGrpcSDK.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getEventByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Event> getEventByIdAsync(global::PassKitGrpcSDK.Id request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getEventById, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Event getEventByStartDateAndVenue(global::PassKitGrpcSDK.EventTickets.GetEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getEventByStartDateAndVenue(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Event getEventByStartDateAndVenue(global::PassKitGrpcSDK.EventTickets.GetEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getEventByStartDateAndVenue, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Event> getEventByStartDateAndVenueAsync(global::PassKitGrpcSDK.EventTickets.GetEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getEventByStartDateAndVenueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Event> getEventByStartDateAndVenueAsync(global::PassKitGrpcSDK.EventTickets.GetEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getEventByStartDateAndVenue, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteEvent(global::PassKitGrpcSDK.EventTickets.Event request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteEvent(global::PassKitGrpcSDK.EventTickets.Event request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_deleteEvent, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteEventAsync(global::PassKitGrpcSDK.EventTickets.Event request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteEventAsync(global::PassKitGrpcSDK.EventTickets.Event request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_deleteEvent, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::PassKitGrpcSDK.EventTickets.EventListResponse> listEvents(global::PassKitGrpcSDK.EventTickets.EventListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return listEvents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PassKitGrpcSDK.EventTickets.EventListResponse> listEvents(global::PassKitGrpcSDK.EventTickets.EventListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_listEvents, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.Id createTicketType(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createTicketType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.Id createTicketType(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_createTicketType, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> createTicketTypeAsync(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return createTicketTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> createTicketTypeAsync(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_createTicketType, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.TicketType updateTicketType(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateTicketType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.TicketType updateTicketType(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updateTicketType, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.TicketType> updateTicketTypeAsync(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateTicketTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.TicketType> updateTicketTypeAsync(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updateTicketType, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.TicketType patchTicketType(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return patchTicketType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.TicketType patchTicketType(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_patchTicketType, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.TicketType> patchTicketTypeAsync(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return patchTicketTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.TicketType> patchTicketTypeAsync(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_patchTicketType, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.TicketType getTicketTypeById(global::PassKitGrpcSDK.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getTicketTypeById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.TicketType getTicketTypeById(global::PassKitGrpcSDK.Id request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getTicketTypeById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.TicketType> getTicketTypeByIdAsync(global::PassKitGrpcSDK.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getTicketTypeByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.TicketType> getTicketTypeByIdAsync(global::PassKitGrpcSDK.Id request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getTicketTypeById, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.TicketType getTicketTypeByUserDefinedId(global::PassKitGrpcSDK.EventTickets.GetByUidRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getTicketTypeByUserDefinedId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.TicketType getTicketTypeByUserDefinedId(global::PassKitGrpcSDK.EventTickets.GetByUidRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getTicketTypeByUserDefinedId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.TicketType> getTicketTypeByUserDefinedIdAsync(global::PassKitGrpcSDK.EventTickets.GetByUidRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getTicketTypeByUserDefinedIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.TicketType> getTicketTypeByUserDefinedIdAsync(global::PassKitGrpcSDK.EventTickets.GetByUidRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getTicketTypeByUserDefinedId, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteTicketType(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteTicketType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteTicketType(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_deleteTicketType, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteTicketTypeAsync(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteTicketTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteTicketTypeAsync(global::PassKitGrpcSDK.EventTickets.TicketType request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_deleteTicketType, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::PassKitGrpcSDK.EventTickets.TicketType> listTicketTypes(global::PassKitGrpcSDK.EventTickets.TicketTypeListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return listTicketTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PassKitGrpcSDK.EventTickets.TicketType> listTicketTypes(global::PassKitGrpcSDK.EventTickets.TicketTypeListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_listTicketTypes, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.Id issueTicket(global::PassKitGrpcSDK.EventTickets.IssueTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return issueTicket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.Id issueTicket(global::PassKitGrpcSDK.EventTickets.IssueTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_issueTicket, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> issueTicketAsync(global::PassKitGrpcSDK.EventTickets.IssueTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return issueTicketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> issueTicketAsync(global::PassKitGrpcSDK.EventTickets.IssueTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_issueTicket, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.IssueTicketResponseIds issueTicketById(global::PassKitGrpcSDK.EventTickets.Ticket request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return issueTicketById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.IssueTicketResponseIds issueTicketById(global::PassKitGrpcSDK.EventTickets.Ticket request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_issueTicketById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.IssueTicketResponseIds> issueTicketByIdAsync(global::PassKitGrpcSDK.EventTickets.Ticket request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return issueTicketByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.IssueTicketResponseIds> issueTicketByIdAsync(global::PassKitGrpcSDK.EventTickets.Ticket request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_issueTicketById, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.Id updateTicket(global::PassKitGrpcSDK.EventTickets.Ticket request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateTicket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.Id updateTicket(global::PassKitGrpcSDK.EventTickets.Ticket request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updateTicket, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> updateTicketAsync(global::PassKitGrpcSDK.EventTickets.Ticket request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateTicketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> updateTicketAsync(global::PassKitGrpcSDK.EventTickets.Ticket request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updateTicket, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.Id patchPerson(global::PassKitGrpcSDK.EventTickets.EventTicketPerson request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return patchPerson(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.Id patchPerson(global::PassKitGrpcSDK.EventTickets.EventTicketPerson request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_patchPerson, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> patchPersonAsync(global::PassKitGrpcSDK.EventTickets.EventTicketPerson request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return patchPersonAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> patchPersonAsync(global::PassKitGrpcSDK.EventTickets.EventTicketPerson request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_patchPerson, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.ValidateTicketResponse validateTicket(global::PassKitGrpcSDK.EventTickets.ValidateTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return validateTicket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.ValidateTicketResponse validateTicket(global::PassKitGrpcSDK.EventTickets.ValidateTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_validateTicket, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.ValidateTicketResponse> validateTicketAsync(global::PassKitGrpcSDK.EventTickets.ValidateTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return validateTicketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.ValidateTicketResponse> validateTicketAsync(global::PassKitGrpcSDK.EventTickets.ValidateTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_validateTicket, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.Id redeemTicket(global::PassKitGrpcSDK.EventTickets.RedeemTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return redeemTicket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.Id redeemTicket(global::PassKitGrpcSDK.EventTickets.RedeemTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_redeemTicket, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> redeemTicketAsync(global::PassKitGrpcSDK.EventTickets.RedeemTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return redeemTicketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Id> redeemTicketAsync(global::PassKitGrpcSDK.EventTickets.RedeemTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_redeemTicket, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.Ids redeemTicketsByOrderNumber(global::PassKitGrpcSDK.EventTickets.RedeemByOrderNumber request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return redeemTicketsByOrderNumber(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.Ids redeemTicketsByOrderNumber(global::PassKitGrpcSDK.EventTickets.RedeemByOrderNumber request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_redeemTicketsByOrderNumber, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Ids> redeemTicketsByOrderNumberAsync(global::PassKitGrpcSDK.EventTickets.RedeemByOrderNumber request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return redeemTicketsByOrderNumberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Ids> redeemTicketsByOrderNumberAsync(global::PassKitGrpcSDK.EventTickets.RedeemByOrderNumber request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_redeemTicketsByOrderNumber, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Ticket getTicketById(global::PassKitGrpcSDK.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getTicketById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Ticket getTicketById(global::PassKitGrpcSDK.Id request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getTicketById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Ticket> getTicketByIdAsync(global::PassKitGrpcSDK.Id request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getTicketByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Ticket> getTicketByIdAsync(global::PassKitGrpcSDK.Id request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getTicketById, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Ticket getTicketByTicketNumber(global::PassKitGrpcSDK.EventTickets.TicketNumberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getTicketByTicketNumber(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Ticket getTicketByTicketNumber(global::PassKitGrpcSDK.EventTickets.TicketNumberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getTicketByTicketNumber, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Ticket> getTicketByTicketNumberAsync(global::PassKitGrpcSDK.EventTickets.TicketNumberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getTicketByTicketNumberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Ticket> getTicketByTicketNumberAsync(global::PassKitGrpcSDK.EventTickets.TicketNumberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getTicketByTicketNumber, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Tickets getTicketsByOrderNumber(global::PassKitGrpcSDK.EventTickets.OrderNumberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getTicketsByOrderNumber(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.EventTickets.Tickets getTicketsByOrderNumber(global::PassKitGrpcSDK.EventTickets.OrderNumberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getTicketsByOrderNumber, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Tickets> getTicketsByOrderNumberAsync(global::PassKitGrpcSDK.EventTickets.OrderNumberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getTicketsByOrderNumberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.EventTickets.Tickets> getTicketsByOrderNumberAsync(global::PassKitGrpcSDK.EventTickets.OrderNumberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getTicketsByOrderNumber, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.PassBundles getEventTicketPass(global::PassKitGrpcSDK.EventTickets.EventTicketPassRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getEventTicketPass(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.PassBundles getEventTicketPass(global::PassKitGrpcSDK.EventTickets.EventTicketPassRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getEventTicketPass, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.PassBundles> getEventTicketPassAsync(global::PassKitGrpcSDK.EventTickets.EventTicketPassRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getEventTicketPassAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.PassBundles> getEventTicketPassAsync(global::PassKitGrpcSDK.EventTickets.EventTicketPassRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getEventTicketPass, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteTicket(global::PassKitGrpcSDK.EventTickets.TicketId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteTicket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteTicket(global::PassKitGrpcSDK.EventTickets.TicketId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_deleteTicket, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteTicketAsync(global::PassKitGrpcSDK.EventTickets.TicketId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteTicketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteTicketAsync(global::PassKitGrpcSDK.EventTickets.TicketId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_deleteTicket, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteTicketsByOrderNumber(global::PassKitGrpcSDK.EventTickets.OrderNumberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteTicketsByOrderNumber(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty deleteTicketsByOrderNumber(global::PassKitGrpcSDK.EventTickets.OrderNumberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_deleteTicketsByOrderNumber, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteTicketsByOrderNumberAsync(global::PassKitGrpcSDK.EventTickets.OrderNumberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteTicketsByOrderNumberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> deleteTicketsByOrderNumberAsync(global::PassKitGrpcSDK.EventTickets.OrderNumberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_deleteTicketsByOrderNumber, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::PassKitGrpcSDK.EventTickets.TicketLimitedFields> listTickets(global::PassKitGrpcSDK.EventTickets.TicketListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return listTickets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::PassKitGrpcSDK.EventTickets.TicketLimitedFields> listTickets(global::PassKitGrpcSDK.EventTickets.TicketListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_listTickets, null, options, request);
      }
      public virtual global::PassKitGrpcSDK.Count countTickets(global::PassKitGrpcSDK.EventTickets.TicketListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return countTickets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PassKitGrpcSDK.Count countTickets(global::PassKitGrpcSDK.EventTickets.TicketListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_countTickets, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Count> countTicketsAsync(global::PassKitGrpcSDK.EventTickets.TicketListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return countTicketsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PassKitGrpcSDK.Count> countTicketsAsync(global::PassKitGrpcSDK.EventTickets.TicketListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_countTickets, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override EventTicketsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EventTicketsClient(configuration);
      }
    }

  }
}
#endregion
