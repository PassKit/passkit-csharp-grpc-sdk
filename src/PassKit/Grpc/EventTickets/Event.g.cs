// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/event_tickets/event.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PassKit.Grpc.EventTickets {

  /// <summary>Holder for reflection information generated from io/event_tickets/event.proto</summary>
  public static partial class EventReflection {

    #region Descriptor
    /// <summary>File descriptor for io/event_tickets/event.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chxpby9ldmVudF90aWNrZXRzL2V2ZW50LnByb3RvEg1ldmVudF90aWNrZXRz",
            "Gh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhdpby9jb21tb24v",
            "YmlsbGluZy5wcm90bxoXaW8vY29tbW9uL21ldHJpY3MucHJvdG8aFmlvL2Nv",
            "bW1vbi9maWx0ZXIucHJvdG8aIWlvL2V2ZW50X3RpY2tldHMvcHJvZHVjdGlv",
            "bi5wcm90bxocaW8vZXZlbnRfdGlja2V0cy92ZW51ZS5wcm90bxoucHJvdG9j",
            "LWdlbi1vcGVuYXBpdjIvb3B0aW9ucy9hbm5vdGF0aW9ucy5wcm90byKzBQoF",
            "RXZlbnQSCgoCaWQYASABKAkSLQoKcHJvZHVjdGlvbhgCIAEoCzIZLmV2ZW50",
            "X3RpY2tldHMuUHJvZHVjdGlvbhIjCgV2ZW51ZRgDIAEoCzIULmV2ZW50X3Rp",
            "Y2tldHMuVmVudWUSLQoJZG9vcnNPcGVuGAQgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBI2ChJzY2hlZHVsZWRTdGFydERhdGUYBSABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEjMKD2FjdHVhbFN0YXJ0RGF0ZRgG",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoHZW5kRGF0ZRgH",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMAoMcmVsZXZhbnRE",
            "YXRlGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIYCgVxdW90",
            "YRgJIAEoCzIJLmlvLlF1b3RhEiMKB21ldHJpY3MYCiABKAsyCy5pby5NZXRy",
            "aWNzQgWSQQJAARIyCgdjcmVhdGVkGAsgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcEIFkkECQAESMgoHdXBkYXRlZBgMIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXBCBZJBAkABOqcBkkGjAQqgASoFRXZlbnQydkV2",
            "ZW50IGlzIGFuIGluc3RhbmNlIG9mIGEgUHJvZHVjdGlvbjsgYW4gZXZlbnQg",
            "aXMgc2hvd2luZzsgaXQgaG9sZHMgdGhlIGV2ZW50IHN0YXJ0ICYgZW5kIGRh",
            "dGUvdGltZSBhbmQgdmVudWUgZGV0YWlscy7SAQpwcm9kdWN0aW9u0gEFdmVu",
            "dWXSAQlzdGFydERhdGUi0AEKEEV2ZW50TGlzdFJlcXVlc3QSFgoMcHJvZHVj",
            "dGlvbklkGAEgASgJSAASFwoNcHJvZHVjdGlvblVpZBgCIAEoCUgAEg8KB3Zl",
            "bnVlSWQYAyABKAkSHAoHZmlsdGVycxgEIAEoCzILLmlvLkZpbHRlcnM6TpJB",
            "SwpJKhJFdmVudCBMaXN0IFJlcXVlc3QyJlVzZWQgdG8gbGlzdCBldmVudHMg",
            "aW4gdGhlIHByb2R1Y3Rpb24u0gEKcHJvZHVjdGlvbkIMCgpwcm9kdWN0aW9u",
            "IpYCCg9HZXRFdmVudFJlcXVlc3QSFgoMcHJvZHVjdGlvbklkGAEgASgJSAAS",
            "FwoNcHJvZHVjdGlvblVpZBgCIAEoCUgAEhEKB3ZlbnVlSWQYAyABKAlIARIS",
            "Cgh2ZW51ZVVpZBgEIAEoCUgBEjYKEnNjaGVkdWxlZFN0YXJ0RGF0ZRgFIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXA6XJJBWQpXKhFHZXQgRXZl",
            "bnQgUmVxdWVzdDIhVXNlZCB0byByZXRyaWV2ZSBhbiBldmVudCByZWNvcmQu",
            "0gEKcHJvZHVjdGlvbtIBBXZlbnVl0gEJc3RhcnREYXRlQgwKCnByb2R1Y3Rp",
            "b25CBwoFdmVudWUi1wIKGkV2ZW50TGltaXRlZEZpZWxkc1Jlc3BvbnNlEgoK",
            "AmlkGAEgASgJEjYKEnNjaGVkdWxlZFN0YXJ0RGF0ZRgCIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5UaW1lc3RhbXASMwoPYWN0dWFsU3RhcnREYXRlGAMgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIrCgdlbmREYXRlGAQgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcDqSAZJBjgEKiwEqEUV2ZW50",
            "IChMaWdodCB2ZXIpMnZFdmVudCBpcyBhbiBpbnN0YW5jZSBvZiBhIFByb2R1",
            "Y3Rpb247IGFuIGV2ZW50IGlzIHNob3dpbmc7IGl0IGhvbGRzIHRoZSBldmVu",
            "dCBzdGFydCAmIGVuZCBkYXRlL3RpbWUgYW5kIHZlbnVlIGRldGFpbHMuIpIF",
            "ChlFdmVudExpbWl0ZWRGaWVsZHNSZXF1ZXN0EhQKDHByb2R1Y3Rpb25JZBgB",
            "IAEoCRIPCgd2ZW51ZUlkGAIgASgJEi0KCWRvb3JzT3BlbhgDIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNgoSc2NoZWR1bGVkU3RhcnREYXRl",
            "GAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIzCg9hY3R1YWxT",
            "dGFydERhdGUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEisK",
            "B2VuZERhdGUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjAK",
            "DHJlbGV2YW50RGF0ZRgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXASGAoFcXVvdGEYCCABKAsyCS5pby5RdW90YRIcCgdtZXRyaWNzGAkgASgL",
            "MgsuaW8uTWV0cmljcxIrCgdjcmVhdGVkGAogASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBIrCgd1cGRhdGVkGAsgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcDrAAZJBvAEKuQEqEUV2ZW50IChMaWdodCB2ZXIpMnZF",
            "dmVudCBpcyBhbiBpbnN0YW5jZSBvZiBhIFByb2R1Y3Rpb247IGFuIGV2ZW50",
            "IGlzIHNob3dpbmc7IGl0IGhvbGRzIHRoZSBldmVudCBzdGFydCAmIGVuZCBk",
            "YXRlL3RpbWUgYW5kIHZlbnVlIGRldGFpbHMu0gEMcHJvZHVjdGlvbklk0gEH",
            "dmVudWVJZNIBEnNjaGVkdWxlZFN0YXJ0RGF0ZSKXBQoRRXZlbnRMaXN0UmVz",
            "cG9uc2USCgoCaWQYASABKAkSQgoKcHJvZHVjdGlvbhgCIAEoCzIuLmV2ZW50",
            "X3RpY2tldHMuUHJvZHVjdGlvbkxpbWl0ZWRGaWVsZHNSZXNwb25zZRI4CgV2",
            "ZW51ZRgDIAEoCzIpLmV2ZW50X3RpY2tldHMuVmVudWVMaW1pdGVkRmllbGRz",
            "UmVzcG9uc2USLQoJZG9vcnNPcGVuGAQgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBI2ChJzY2hlZHVsZWRTdGFydERhdGUYBSABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wEjMKD2FjdHVhbFN0YXJ0RGF0ZRgGIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoHZW5kRGF0ZRgHIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMAoMcmVsZXZhbnREYXRl",
            "GAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIYCgVxdW90YRgJ",
            "IAEoCzIJLmlvLlF1b3RhEhwKB21ldHJpY3MYCiABKAsyCy5pby5NZXRyaWNz",
            "EisKB2NyZWF0ZWQYCyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
            "EisKB3VwZGF0ZWQYDCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
            "OmuSQWgKZioTRXZlbnQgTGlzdCBSZXNwb25zZTJPQ29udGFpbnMgZXZlbnQg",
            "c2VhcmNoIHJlc3VsdC4gUHJvZHVjdGlvbiBhbmQgdmVudWUgb2JqZWN0cyBo",
            "YXZlIGxpbWl0ZWQgZmllbGRzLkJvCh1jb20ucGFzc2tpdC5ncnBjLkV2ZW50",
            "VGlja2V0c1oyc3Rhc2gucGFzc2tpdC5jb20vaW8vbW9kZWwvc2RrL2dvL2lv",
            "L2V2ZW50X3RpY2tldHOqAhlQYXNzS2l0LkdycGMuRXZlbnRUaWNrZXRzYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::PassKit.Grpc.BillingReflection.Descriptor, global::PassKit.Grpc.MetricsReflection.Descriptor, global::PassKit.Grpc.FilterReflection.Descriptor, global::PassKit.Grpc.EventTickets.ProductionReflection.Descriptor, global::PassKit.Grpc.EventTickets.VenueReflection.Descriptor, global::PassKit.Grpc.Gateway.ProtocGenOpenapiv2.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.EventTickets.Event), global::PassKit.Grpc.EventTickets.Event.Parser, new[]{ "Id", "Production", "Venue", "DoorsOpen", "ScheduledStartDate", "ActualStartDate", "EndDate", "RelevantDate", "Quota", "Metrics", "Created", "Updated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.EventTickets.EventListRequest), global::PassKit.Grpc.EventTickets.EventListRequest.Parser, new[]{ "ProductionId", "ProductionUid", "VenueId", "Filters" }, new[]{ "Production" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.EventTickets.GetEventRequest), global::PassKit.Grpc.EventTickets.GetEventRequest.Parser, new[]{ "ProductionId", "ProductionUid", "VenueId", "VenueUid", "ScheduledStartDate" }, new[]{ "Production", "Venue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.EventTickets.EventLimitedFieldsResponse), global::PassKit.Grpc.EventTickets.EventLimitedFieldsResponse.Parser, new[]{ "Id", "ScheduledStartDate", "ActualStartDate", "EndDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.EventTickets.EventLimitedFieldsRequest), global::PassKit.Grpc.EventTickets.EventLimitedFieldsRequest.Parser, new[]{ "ProductionId", "VenueId", "DoorsOpen", "ScheduledStartDate", "ActualStartDate", "EndDate", "RelevantDate", "Quota", "Metrics", "Created", "Updated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.EventTickets.EventListResponse), global::PassKit.Grpc.EventTickets.EventListResponse.Parser, new[]{ "Id", "Production", "Venue", "DoorsOpen", "ScheduledStartDate", "ActualStartDate", "EndDate", "RelevantDate", "Quota", "Metrics", "Created", "Updated" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Event : pb::IMessage<Event>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.EventTickets.EventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event(Event other) : this() {
      id_ = other.id_;
      production_ = other.production_ != null ? other.production_.Clone() : null;
      venue_ = other.venue_ != null ? other.venue_.Clone() : null;
      doorsOpen_ = other.doorsOpen_ != null ? other.doorsOpen_.Clone() : null;
      scheduledStartDate_ = other.scheduledStartDate_ != null ? other.scheduledStartDate_.Clone() : null;
      actualStartDate_ = other.actualStartDate_ != null ? other.actualStartDate_.Clone() : null;
      endDate_ = other.endDate_ != null ? other.endDate_.Clone() : null;
      relevantDate_ = other.relevantDate_ != null ? other.relevantDate_.Clone() : null;
      quota_ = other.quota_ != null ? other.quota_.Clone() : null;
      metrics_ = other.metrics_ != null ? other.metrics_.Clone() : null;
      created_ = other.created_ != null ? other.created_.Clone() : null;
      updated_ = other.updated_ != null ? other.updated_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// PassKit generated event id (22 characters). No writable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "production" field.</summary>
    public const int ProductionFieldNumber = 2;
    private global::PassKit.Grpc.EventTickets.Production production_;
    /// <summary>
    /// The production that the event belongs to. In case of a create, only the production id needs to be provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.EventTickets.Production Production {
      get { return production_; }
      set {
        production_ = value;
      }
    }

    /// <summary>Field number for the "venue" field.</summary>
    public const int VenueFieldNumber = 3;
    private global::PassKit.Grpc.EventTickets.Venue venue_;
    /// <summary>
    /// The venue details. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.EventTickets.Venue Venue {
      get { return venue_; }
      set {
        venue_ = value;
      }
    }

    /// <summary>Field number for the "doorsOpen" field.</summary>
    public const int DoorsOpenFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp doorsOpen_;
    /// <summary>
    /// The date/time when the doors open at the venue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DoorsOpen {
      get { return doorsOpen_; }
      set {
        doorsOpen_ = value;
      }
    }

    /// <summary>Field number for the "scheduledStartDate" field.</summary>
    public const int ScheduledStartDateFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp scheduledStartDate_;
    /// <summary>
    /// The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ScheduledStartDate {
      get { return scheduledStartDate_; }
      set {
        scheduledStartDate_ = value;
      }
    }

    /// <summary>Field number for the "actualStartDate" field.</summary>
    public const int ActualStartDateFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp actualStartDate_;
    /// <summary>
    /// The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ActualStartDate {
      get { return actualStartDate_; }
      set {
        actualStartDate_ = value;
      }
    }

    /// <summary>Field number for the "endDate" field.</summary>
    public const int EndDateFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endDate_;
    /// <summary>
    /// The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    /// <summary>Field number for the "relevantDate" field.</summary>
    public const int RelevantDateFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp relevantDate_;
    /// <summary>
    /// Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RelevantDate {
      get { return relevantDate_; }
      set {
        relevantDate_ = value;
      }
    }

    /// <summary>Field number for the "quota" field.</summary>
    public const int QuotaFieldNumber = 9;
    private global::PassKit.Grpc.Quota quota_;
    /// <summary>
    /// The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Quota Quota {
      get { return quota_; }
      set {
        quota_ = value;
      }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 10;
    private global::PassKit.Grpc.Metrics metrics_;
    /// <summary>
    /// Performance analytics for the event. Not writable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Metrics Metrics {
      get { return metrics_; }
      set {
        metrics_ = value;
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// The date the event was created. Not writable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updated_;
    /// <summary>
    /// The date the event updated. Not writable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Production, other.Production)) return false;
      if (!object.Equals(Venue, other.Venue)) return false;
      if (!object.Equals(DoorsOpen, other.DoorsOpen)) return false;
      if (!object.Equals(ScheduledStartDate, other.ScheduledStartDate)) return false;
      if (!object.Equals(ActualStartDate, other.ActualStartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      if (!object.Equals(RelevantDate, other.RelevantDate)) return false;
      if (!object.Equals(Quota, other.Quota)) return false;
      if (!object.Equals(Metrics, other.Metrics)) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (!object.Equals(Updated, other.Updated)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (production_ != null) hash ^= Production.GetHashCode();
      if (venue_ != null) hash ^= Venue.GetHashCode();
      if (doorsOpen_ != null) hash ^= DoorsOpen.GetHashCode();
      if (scheduledStartDate_ != null) hash ^= ScheduledStartDate.GetHashCode();
      if (actualStartDate_ != null) hash ^= ActualStartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      if (relevantDate_ != null) hash ^= RelevantDate.GetHashCode();
      if (quota_ != null) hash ^= Quota.GetHashCode();
      if (metrics_ != null) hash ^= Metrics.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (updated_ != null) hash ^= Updated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (production_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Production);
      }
      if (venue_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Venue);
      }
      if (doorsOpen_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DoorsOpen);
      }
      if (scheduledStartDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ScheduledStartDate);
      }
      if (actualStartDate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ActualStartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EndDate);
      }
      if (relevantDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RelevantDate);
      }
      if (quota_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Quota);
      }
      if (metrics_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Metrics);
      }
      if (created_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Updated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (production_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Production);
      }
      if (venue_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Venue);
      }
      if (doorsOpen_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DoorsOpen);
      }
      if (scheduledStartDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ScheduledStartDate);
      }
      if (actualStartDate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ActualStartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EndDate);
      }
      if (relevantDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RelevantDate);
      }
      if (quota_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Quota);
      }
      if (metrics_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Metrics);
      }
      if (created_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Updated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (production_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Production);
      }
      if (venue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Venue);
      }
      if (doorsOpen_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DoorsOpen);
      }
      if (scheduledStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledStartDate);
      }
      if (actualStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActualStartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      if (relevantDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelevantDate);
      }
      if (quota_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quota);
      }
      if (metrics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metrics);
      }
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (updated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Updated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.production_ != null) {
        if (production_ == null) {
          Production = new global::PassKit.Grpc.EventTickets.Production();
        }
        Production.MergeFrom(other.Production);
      }
      if (other.venue_ != null) {
        if (venue_ == null) {
          Venue = new global::PassKit.Grpc.EventTickets.Venue();
        }
        Venue.MergeFrom(other.Venue);
      }
      if (other.doorsOpen_ != null) {
        if (doorsOpen_ == null) {
          DoorsOpen = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DoorsOpen.MergeFrom(other.DoorsOpen);
      }
      if (other.scheduledStartDate_ != null) {
        if (scheduledStartDate_ == null) {
          ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ScheduledStartDate.MergeFrom(other.ScheduledStartDate);
      }
      if (other.actualStartDate_ != null) {
        if (actualStartDate_ == null) {
          ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ActualStartDate.MergeFrom(other.ActualStartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndDate.MergeFrom(other.EndDate);
      }
      if (other.relevantDate_ != null) {
        if (relevantDate_ == null) {
          RelevantDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RelevantDate.MergeFrom(other.RelevantDate);
      }
      if (other.quota_ != null) {
        if (quota_ == null) {
          Quota = new global::PassKit.Grpc.Quota();
        }
        Quota.MergeFrom(other.Quota);
      }
      if (other.metrics_ != null) {
        if (metrics_ == null) {
          Metrics = new global::PassKit.Grpc.Metrics();
        }
        Metrics.MergeFrom(other.Metrics);
      }
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      if (other.updated_ != null) {
        if (updated_ == null) {
          Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Updated.MergeFrom(other.Updated);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (production_ == null) {
              Production = new global::PassKit.Grpc.EventTickets.Production();
            }
            input.ReadMessage(Production);
            break;
          }
          case 26: {
            if (venue_ == null) {
              Venue = new global::PassKit.Grpc.EventTickets.Venue();
            }
            input.ReadMessage(Venue);
            break;
          }
          case 34: {
            if (doorsOpen_ == null) {
              DoorsOpen = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DoorsOpen);
            break;
          }
          case 42: {
            if (scheduledStartDate_ == null) {
              ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledStartDate);
            break;
          }
          case 50: {
            if (actualStartDate_ == null) {
              ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualStartDate);
            break;
          }
          case 58: {
            if (endDate_ == null) {
              EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 66: {
            if (relevantDate_ == null) {
              RelevantDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RelevantDate);
            break;
          }
          case 74: {
            if (quota_ == null) {
              Quota = new global::PassKit.Grpc.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
          case 82: {
            if (metrics_ == null) {
              Metrics = new global::PassKit.Grpc.Metrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
          case 90: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 98: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (production_ == null) {
              Production = new global::PassKit.Grpc.EventTickets.Production();
            }
            input.ReadMessage(Production);
            break;
          }
          case 26: {
            if (venue_ == null) {
              Venue = new global::PassKit.Grpc.EventTickets.Venue();
            }
            input.ReadMessage(Venue);
            break;
          }
          case 34: {
            if (doorsOpen_ == null) {
              DoorsOpen = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DoorsOpen);
            break;
          }
          case 42: {
            if (scheduledStartDate_ == null) {
              ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledStartDate);
            break;
          }
          case 50: {
            if (actualStartDate_ == null) {
              ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualStartDate);
            break;
          }
          case 58: {
            if (endDate_ == null) {
              EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 66: {
            if (relevantDate_ == null) {
              RelevantDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RelevantDate);
            break;
          }
          case 74: {
            if (quota_ == null) {
              Quota = new global::PassKit.Grpc.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
          case 82: {
            if (metrics_ == null) {
              Metrics = new global::PassKit.Grpc.Metrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
          case 90: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 98: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventListRequest : pb::IMessage<EventListRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventListRequest> _parser = new pb::MessageParser<EventListRequest>(() => new EventListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EventListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.EventTickets.EventReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventListRequest(EventListRequest other) : this() {
      venueId_ = other.venueId_;
      filters_ = other.filters_ != null ? other.filters_.Clone() : null;
      switch (other.ProductionCase) {
        case ProductionOneofCase.ProductionId:
          ProductionId = other.ProductionId;
          break;
        case ProductionOneofCase.ProductionUid:
          ProductionUid = other.ProductionUid;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventListRequest Clone() {
      return new EventListRequest(this);
    }

    /// <summary>Field number for the "productionId" field.</summary>
    public const int ProductionIdFieldNumber = 1;
    /// <summary>
    /// Production ID. Required if productionUid is not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProductionId {
      get { return productionCase_ == ProductionOneofCase.ProductionId ? (string) production_ : ""; }
      set {
        production_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        productionCase_ = ProductionOneofCase.ProductionId;
      }
    }

    /// <summary>Field number for the "productionUid" field.</summary>
    public const int ProductionUidFieldNumber = 2;
    /// <summary>
    /// Production UID. Required if productionId is not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProductionUid {
      get { return productionCase_ == ProductionOneofCase.ProductionUid ? (string) production_ : ""; }
      set {
        production_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        productionCase_ = ProductionOneofCase.ProductionUid;
      }
    }

    /// <summary>Field number for the "venueId" field.</summary>
    public const int VenueIdFieldNumber = 3;
    private string venueId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueId {
      get { return venueId_; }
      set {
        venueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 4;
    private global::PassKit.Grpc.Filters filters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Filters Filters {
      get { return filters_; }
      set {
        filters_ = value;
      }
    }

    private object production_;
    /// <summary>Enum of possible cases for the "production" oneof.</summary>
    public enum ProductionOneofCase {
      None = 0,
      ProductionId = 1,
      ProductionUid = 2,
    }
    private ProductionOneofCase productionCase_ = ProductionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProductionOneofCase ProductionCase {
      get { return productionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProduction() {
      productionCase_ = ProductionOneofCase.None;
      production_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EventListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EventListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductionId != other.ProductionId) return false;
      if (ProductionUid != other.ProductionUid) return false;
      if (VenueId != other.VenueId) return false;
      if (!object.Equals(Filters, other.Filters)) return false;
      if (ProductionCase != other.ProductionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (productionCase_ == ProductionOneofCase.ProductionId) hash ^= ProductionId.GetHashCode();
      if (productionCase_ == ProductionOneofCase.ProductionUid) hash ^= ProductionUid.GetHashCode();
      if (VenueId.Length != 0) hash ^= VenueId.GetHashCode();
      if (filters_ != null) hash ^= Filters.GetHashCode();
      hash ^= (int) productionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (productionCase_ == ProductionOneofCase.ProductionId) {
        output.WriteRawTag(10);
        output.WriteString(ProductionId);
      }
      if (productionCase_ == ProductionOneofCase.ProductionUid) {
        output.WriteRawTag(18);
        output.WriteString(ProductionUid);
      }
      if (VenueId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VenueId);
      }
      if (filters_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Filters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (productionCase_ == ProductionOneofCase.ProductionId) {
        output.WriteRawTag(10);
        output.WriteString(ProductionId);
      }
      if (productionCase_ == ProductionOneofCase.ProductionUid) {
        output.WriteRawTag(18);
        output.WriteString(ProductionUid);
      }
      if (VenueId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VenueId);
      }
      if (filters_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Filters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (productionCase_ == ProductionOneofCase.ProductionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductionId);
      }
      if (productionCase_ == ProductionOneofCase.ProductionUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductionUid);
      }
      if (VenueId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VenueId);
      }
      if (filters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filters);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EventListRequest other) {
      if (other == null) {
        return;
      }
      if (other.VenueId.Length != 0) {
        VenueId = other.VenueId;
      }
      if (other.filters_ != null) {
        if (filters_ == null) {
          Filters = new global::PassKit.Grpc.Filters();
        }
        Filters.MergeFrom(other.Filters);
      }
      switch (other.ProductionCase) {
        case ProductionOneofCase.ProductionId:
          ProductionId = other.ProductionId;
          break;
        case ProductionOneofCase.ProductionUid:
          ProductionUid = other.ProductionUid;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProductionId = input.ReadString();
            break;
          }
          case 18: {
            ProductionUid = input.ReadString();
            break;
          }
          case 26: {
            VenueId = input.ReadString();
            break;
          }
          case 34: {
            if (filters_ == null) {
              Filters = new global::PassKit.Grpc.Filters();
            }
            input.ReadMessage(Filters);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProductionId = input.ReadString();
            break;
          }
          case 18: {
            ProductionUid = input.ReadString();
            break;
          }
          case 26: {
            VenueId = input.ReadString();
            break;
          }
          case 34: {
            if (filters_ == null) {
              Filters = new global::PassKit.Grpc.Filters();
            }
            input.ReadMessage(Filters);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetEventRequest : pb::IMessage<GetEventRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetEventRequest> _parser = new pb::MessageParser<GetEventRequest>(() => new GetEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.EventTickets.EventReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetEventRequest(GetEventRequest other) : this() {
      scheduledStartDate_ = other.scheduledStartDate_ != null ? other.scheduledStartDate_.Clone() : null;
      switch (other.ProductionCase) {
        case ProductionOneofCase.ProductionId:
          ProductionId = other.ProductionId;
          break;
        case ProductionOneofCase.ProductionUid:
          ProductionUid = other.ProductionUid;
          break;
      }

      switch (other.VenueCase) {
        case VenueOneofCase.VenueId:
          VenueId = other.VenueId;
          break;
        case VenueOneofCase.VenueUid:
          VenueUid = other.VenueUid;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetEventRequest Clone() {
      return new GetEventRequest(this);
    }

    /// <summary>Field number for the "productionId" field.</summary>
    public const int ProductionIdFieldNumber = 1;
    /// <summary>
    /// Production ID. Required if productionUid is not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProductionId {
      get { return productionCase_ == ProductionOneofCase.ProductionId ? (string) production_ : ""; }
      set {
        production_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        productionCase_ = ProductionOneofCase.ProductionId;
      }
    }

    /// <summary>Field number for the "productionUid" field.</summary>
    public const int ProductionUidFieldNumber = 2;
    /// <summary>
    /// Production UID. Required if productionId is not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProductionUid {
      get { return productionCase_ == ProductionOneofCase.ProductionUid ? (string) production_ : ""; }
      set {
        production_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        productionCase_ = ProductionOneofCase.ProductionUid;
      }
    }

    /// <summary>Field number for the "venueId" field.</summary>
    public const int VenueIdFieldNumber = 3;
    /// <summary>
    /// Venue ID. Required if venueUid is not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueId {
      get { return venueCase_ == VenueOneofCase.VenueId ? (string) venue_ : ""; }
      set {
        venue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        venueCase_ = VenueOneofCase.VenueId;
      }
    }

    /// <summary>Field number for the "venueUid" field.</summary>
    public const int VenueUidFieldNumber = 4;
    /// <summary>
    /// Venue UID. Required if venueId is not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueUid {
      get { return venueCase_ == VenueOneofCase.VenueUid ? (string) venue_ : ""; }
      set {
        venue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        venueCase_ = VenueOneofCase.VenueUid;
      }
    }

    /// <summary>Field number for the "scheduledStartDate" field.</summary>
    public const int ScheduledStartDateFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp scheduledStartDate_;
    /// <summary>
    /// Event scheduled start date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ScheduledStartDate {
      get { return scheduledStartDate_; }
      set {
        scheduledStartDate_ = value;
      }
    }

    private object production_;
    /// <summary>Enum of possible cases for the "production" oneof.</summary>
    public enum ProductionOneofCase {
      None = 0,
      ProductionId = 1,
      ProductionUid = 2,
    }
    private ProductionOneofCase productionCase_ = ProductionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProductionOneofCase ProductionCase {
      get { return productionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProduction() {
      productionCase_ = ProductionOneofCase.None;
      production_ = null;
    }

    private object venue_;
    /// <summary>Enum of possible cases for the "venue" oneof.</summary>
    public enum VenueOneofCase {
      None = 0,
      VenueId = 3,
      VenueUid = 4,
    }
    private VenueOneofCase venueCase_ = VenueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VenueOneofCase VenueCase {
      get { return venueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVenue() {
      venueCase_ = VenueOneofCase.None;
      venue_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductionId != other.ProductionId) return false;
      if (ProductionUid != other.ProductionUid) return false;
      if (VenueId != other.VenueId) return false;
      if (VenueUid != other.VenueUid) return false;
      if (!object.Equals(ScheduledStartDate, other.ScheduledStartDate)) return false;
      if (ProductionCase != other.ProductionCase) return false;
      if (VenueCase != other.VenueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (productionCase_ == ProductionOneofCase.ProductionId) hash ^= ProductionId.GetHashCode();
      if (productionCase_ == ProductionOneofCase.ProductionUid) hash ^= ProductionUid.GetHashCode();
      if (venueCase_ == VenueOneofCase.VenueId) hash ^= VenueId.GetHashCode();
      if (venueCase_ == VenueOneofCase.VenueUid) hash ^= VenueUid.GetHashCode();
      if (scheduledStartDate_ != null) hash ^= ScheduledStartDate.GetHashCode();
      hash ^= (int) productionCase_;
      hash ^= (int) venueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (productionCase_ == ProductionOneofCase.ProductionId) {
        output.WriteRawTag(10);
        output.WriteString(ProductionId);
      }
      if (productionCase_ == ProductionOneofCase.ProductionUid) {
        output.WriteRawTag(18);
        output.WriteString(ProductionUid);
      }
      if (venueCase_ == VenueOneofCase.VenueId) {
        output.WriteRawTag(26);
        output.WriteString(VenueId);
      }
      if (venueCase_ == VenueOneofCase.VenueUid) {
        output.WriteRawTag(34);
        output.WriteString(VenueUid);
      }
      if (scheduledStartDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ScheduledStartDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (productionCase_ == ProductionOneofCase.ProductionId) {
        output.WriteRawTag(10);
        output.WriteString(ProductionId);
      }
      if (productionCase_ == ProductionOneofCase.ProductionUid) {
        output.WriteRawTag(18);
        output.WriteString(ProductionUid);
      }
      if (venueCase_ == VenueOneofCase.VenueId) {
        output.WriteRawTag(26);
        output.WriteString(VenueId);
      }
      if (venueCase_ == VenueOneofCase.VenueUid) {
        output.WriteRawTag(34);
        output.WriteString(VenueUid);
      }
      if (scheduledStartDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ScheduledStartDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (productionCase_ == ProductionOneofCase.ProductionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductionId);
      }
      if (productionCase_ == ProductionOneofCase.ProductionUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductionUid);
      }
      if (venueCase_ == VenueOneofCase.VenueId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VenueId);
      }
      if (venueCase_ == VenueOneofCase.VenueUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VenueUid);
      }
      if (scheduledStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledStartDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.scheduledStartDate_ != null) {
        if (scheduledStartDate_ == null) {
          ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ScheduledStartDate.MergeFrom(other.ScheduledStartDate);
      }
      switch (other.ProductionCase) {
        case ProductionOneofCase.ProductionId:
          ProductionId = other.ProductionId;
          break;
        case ProductionOneofCase.ProductionUid:
          ProductionUid = other.ProductionUid;
          break;
      }

      switch (other.VenueCase) {
        case VenueOneofCase.VenueId:
          VenueId = other.VenueId;
          break;
        case VenueOneofCase.VenueUid:
          VenueUid = other.VenueUid;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProductionId = input.ReadString();
            break;
          }
          case 18: {
            ProductionUid = input.ReadString();
            break;
          }
          case 26: {
            VenueId = input.ReadString();
            break;
          }
          case 34: {
            VenueUid = input.ReadString();
            break;
          }
          case 42: {
            if (scheduledStartDate_ == null) {
              ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledStartDate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProductionId = input.ReadString();
            break;
          }
          case 18: {
            ProductionUid = input.ReadString();
            break;
          }
          case 26: {
            VenueId = input.ReadString();
            break;
          }
          case 34: {
            VenueUid = input.ReadString();
            break;
          }
          case 42: {
            if (scheduledStartDate_ == null) {
              ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledStartDate);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventLimitedFieldsResponse : pb::IMessage<EventLimitedFieldsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventLimitedFieldsResponse> _parser = new pb::MessageParser<EventLimitedFieldsResponse>(() => new EventLimitedFieldsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EventLimitedFieldsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.EventTickets.EventReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventLimitedFieldsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventLimitedFieldsResponse(EventLimitedFieldsResponse other) : this() {
      id_ = other.id_;
      scheduledStartDate_ = other.scheduledStartDate_ != null ? other.scheduledStartDate_.Clone() : null;
      actualStartDate_ = other.actualStartDate_ != null ? other.actualStartDate_.Clone() : null;
      endDate_ = other.endDate_ != null ? other.endDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventLimitedFieldsResponse Clone() {
      return new EventLimitedFieldsResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// PassKit generated event id (22 characters).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scheduledStartDate" field.</summary>
    public const int ScheduledStartDateFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp scheduledStartDate_;
    /// <summary>
    /// The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ScheduledStartDate {
      get { return scheduledStartDate_; }
      set {
        scheduledStartDate_ = value;
      }
    }

    /// <summary>Field number for the "actualStartDate" field.</summary>
    public const int ActualStartDateFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp actualStartDate_;
    /// <summary>
    /// The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ActualStartDate {
      get { return actualStartDate_; }
      set {
        actualStartDate_ = value;
      }
    }

    /// <summary>Field number for the "endDate" field.</summary>
    public const int EndDateFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endDate_;
    /// <summary>
    /// The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EventLimitedFieldsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EventLimitedFieldsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(ScheduledStartDate, other.ScheduledStartDate)) return false;
      if (!object.Equals(ActualStartDate, other.ActualStartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (scheduledStartDate_ != null) hash ^= ScheduledStartDate.GetHashCode();
      if (actualStartDate_ != null) hash ^= ActualStartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (scheduledStartDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScheduledStartDate);
      }
      if (actualStartDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ActualStartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EndDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (scheduledStartDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScheduledStartDate);
      }
      if (actualStartDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ActualStartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EndDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (scheduledStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledStartDate);
      }
      if (actualStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActualStartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EventLimitedFieldsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.scheduledStartDate_ != null) {
        if (scheduledStartDate_ == null) {
          ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ScheduledStartDate.MergeFrom(other.ScheduledStartDate);
      }
      if (other.actualStartDate_ != null) {
        if (actualStartDate_ == null) {
          ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ActualStartDate.MergeFrom(other.ActualStartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndDate.MergeFrom(other.EndDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (scheduledStartDate_ == null) {
              ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledStartDate);
            break;
          }
          case 26: {
            if (actualStartDate_ == null) {
              ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualStartDate);
            break;
          }
          case 34: {
            if (endDate_ == null) {
              EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndDate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (scheduledStartDate_ == null) {
              ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledStartDate);
            break;
          }
          case 26: {
            if (actualStartDate_ == null) {
              ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualStartDate);
            break;
          }
          case 34: {
            if (endDate_ == null) {
              EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndDate);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventLimitedFieldsRequest : pb::IMessage<EventLimitedFieldsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventLimitedFieldsRequest> _parser = new pb::MessageParser<EventLimitedFieldsRequest>(() => new EventLimitedFieldsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EventLimitedFieldsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.EventTickets.EventReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventLimitedFieldsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventLimitedFieldsRequest(EventLimitedFieldsRequest other) : this() {
      productionId_ = other.productionId_;
      venueId_ = other.venueId_;
      doorsOpen_ = other.doorsOpen_ != null ? other.doorsOpen_.Clone() : null;
      scheduledStartDate_ = other.scheduledStartDate_ != null ? other.scheduledStartDate_.Clone() : null;
      actualStartDate_ = other.actualStartDate_ != null ? other.actualStartDate_.Clone() : null;
      endDate_ = other.endDate_ != null ? other.endDate_.Clone() : null;
      relevantDate_ = other.relevantDate_ != null ? other.relevantDate_.Clone() : null;
      quota_ = other.quota_ != null ? other.quota_.Clone() : null;
      metrics_ = other.metrics_ != null ? other.metrics_.Clone() : null;
      created_ = other.created_ != null ? other.created_.Clone() : null;
      updated_ = other.updated_ != null ? other.updated_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventLimitedFieldsRequest Clone() {
      return new EventLimitedFieldsRequest(this);
    }

    /// <summary>Field number for the "productionId" field.</summary>
    public const int ProductionIdFieldNumber = 1;
    private string productionId_ = "";
    /// <summary>
    /// PassKit generated production id (22 characters).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProductionId {
      get { return productionId_; }
      set {
        productionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "venueId" field.</summary>
    public const int VenueIdFieldNumber = 2;
    private string venueId_ = "";
    /// <summary>
    /// PassKit generated venue id (22 characters).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueId {
      get { return venueId_; }
      set {
        venueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "doorsOpen" field.</summary>
    public const int DoorsOpenFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp doorsOpen_;
    /// <summary>
    /// The date/time when the doors open at the venue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DoorsOpen {
      get { return doorsOpen_; }
      set {
        doorsOpen_ = value;
      }
    }

    /// <summary>Field number for the "scheduledStartDate" field.</summary>
    public const int ScheduledStartDateFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp scheduledStartDate_;
    /// <summary>
    /// The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ScheduledStartDate {
      get { return scheduledStartDate_; }
      set {
        scheduledStartDate_ = value;
      }
    }

    /// <summary>Field number for the "actualStartDate" field.</summary>
    public const int ActualStartDateFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp actualStartDate_;
    /// <summary>
    /// The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ActualStartDate {
      get { return actualStartDate_; }
      set {
        actualStartDate_ = value;
      }
    }

    /// <summary>Field number for the "endDate" field.</summary>
    public const int EndDateFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endDate_;
    /// <summary>
    /// The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    /// <summary>Field number for the "relevantDate" field.</summary>
    public const int RelevantDateFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp relevantDate_;
    /// <summary>
    /// Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RelevantDate {
      get { return relevantDate_; }
      set {
        relevantDate_ = value;
      }
    }

    /// <summary>Field number for the "quota" field.</summary>
    public const int QuotaFieldNumber = 8;
    private global::PassKit.Grpc.Quota quota_;
    /// <summary>
    /// The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Quota Quota {
      get { return quota_; }
      set {
        quota_ = value;
      }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 9;
    private global::PassKit.Grpc.Metrics metrics_;
    /// <summary>
    /// Performance analytics for the event. Not writable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Metrics Metrics {
      get { return metrics_; }
      set {
        metrics_ = value;
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// The date the event was created. Not writable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updated_;
    /// <summary>
    /// The date the event updated. Not writable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EventLimitedFieldsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EventLimitedFieldsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductionId != other.ProductionId) return false;
      if (VenueId != other.VenueId) return false;
      if (!object.Equals(DoorsOpen, other.DoorsOpen)) return false;
      if (!object.Equals(ScheduledStartDate, other.ScheduledStartDate)) return false;
      if (!object.Equals(ActualStartDate, other.ActualStartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      if (!object.Equals(RelevantDate, other.RelevantDate)) return false;
      if (!object.Equals(Quota, other.Quota)) return false;
      if (!object.Equals(Metrics, other.Metrics)) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (!object.Equals(Updated, other.Updated)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ProductionId.Length != 0) hash ^= ProductionId.GetHashCode();
      if (VenueId.Length != 0) hash ^= VenueId.GetHashCode();
      if (doorsOpen_ != null) hash ^= DoorsOpen.GetHashCode();
      if (scheduledStartDate_ != null) hash ^= ScheduledStartDate.GetHashCode();
      if (actualStartDate_ != null) hash ^= ActualStartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      if (relevantDate_ != null) hash ^= RelevantDate.GetHashCode();
      if (quota_ != null) hash ^= Quota.GetHashCode();
      if (metrics_ != null) hash ^= Metrics.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (updated_ != null) hash ^= Updated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProductionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProductionId);
      }
      if (VenueId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VenueId);
      }
      if (doorsOpen_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DoorsOpen);
      }
      if (scheduledStartDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ScheduledStartDate);
      }
      if (actualStartDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ActualStartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(EndDate);
      }
      if (relevantDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RelevantDate);
      }
      if (quota_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Quota);
      }
      if (metrics_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Metrics);
      }
      if (created_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Updated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProductionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProductionId);
      }
      if (VenueId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VenueId);
      }
      if (doorsOpen_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DoorsOpen);
      }
      if (scheduledStartDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ScheduledStartDate);
      }
      if (actualStartDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ActualStartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(EndDate);
      }
      if (relevantDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RelevantDate);
      }
      if (quota_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Quota);
      }
      if (metrics_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Metrics);
      }
      if (created_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Updated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ProductionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductionId);
      }
      if (VenueId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VenueId);
      }
      if (doorsOpen_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DoorsOpen);
      }
      if (scheduledStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledStartDate);
      }
      if (actualStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActualStartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      if (relevantDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelevantDate);
      }
      if (quota_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quota);
      }
      if (metrics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metrics);
      }
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (updated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Updated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EventLimitedFieldsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProductionId.Length != 0) {
        ProductionId = other.ProductionId;
      }
      if (other.VenueId.Length != 0) {
        VenueId = other.VenueId;
      }
      if (other.doorsOpen_ != null) {
        if (doorsOpen_ == null) {
          DoorsOpen = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DoorsOpen.MergeFrom(other.DoorsOpen);
      }
      if (other.scheduledStartDate_ != null) {
        if (scheduledStartDate_ == null) {
          ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ScheduledStartDate.MergeFrom(other.ScheduledStartDate);
      }
      if (other.actualStartDate_ != null) {
        if (actualStartDate_ == null) {
          ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ActualStartDate.MergeFrom(other.ActualStartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndDate.MergeFrom(other.EndDate);
      }
      if (other.relevantDate_ != null) {
        if (relevantDate_ == null) {
          RelevantDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RelevantDate.MergeFrom(other.RelevantDate);
      }
      if (other.quota_ != null) {
        if (quota_ == null) {
          Quota = new global::PassKit.Grpc.Quota();
        }
        Quota.MergeFrom(other.Quota);
      }
      if (other.metrics_ != null) {
        if (metrics_ == null) {
          Metrics = new global::PassKit.Grpc.Metrics();
        }
        Metrics.MergeFrom(other.Metrics);
      }
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      if (other.updated_ != null) {
        if (updated_ == null) {
          Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Updated.MergeFrom(other.Updated);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProductionId = input.ReadString();
            break;
          }
          case 18: {
            VenueId = input.ReadString();
            break;
          }
          case 26: {
            if (doorsOpen_ == null) {
              DoorsOpen = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DoorsOpen);
            break;
          }
          case 34: {
            if (scheduledStartDate_ == null) {
              ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledStartDate);
            break;
          }
          case 42: {
            if (actualStartDate_ == null) {
              ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualStartDate);
            break;
          }
          case 50: {
            if (endDate_ == null) {
              EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 58: {
            if (relevantDate_ == null) {
              RelevantDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RelevantDate);
            break;
          }
          case 66: {
            if (quota_ == null) {
              Quota = new global::PassKit.Grpc.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
          case 74: {
            if (metrics_ == null) {
              Metrics = new global::PassKit.Grpc.Metrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
          case 82: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 90: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProductionId = input.ReadString();
            break;
          }
          case 18: {
            VenueId = input.ReadString();
            break;
          }
          case 26: {
            if (doorsOpen_ == null) {
              DoorsOpen = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DoorsOpen);
            break;
          }
          case 34: {
            if (scheduledStartDate_ == null) {
              ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledStartDate);
            break;
          }
          case 42: {
            if (actualStartDate_ == null) {
              ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualStartDate);
            break;
          }
          case 50: {
            if (endDate_ == null) {
              EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 58: {
            if (relevantDate_ == null) {
              RelevantDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RelevantDate);
            break;
          }
          case 66: {
            if (quota_ == null) {
              Quota = new global::PassKit.Grpc.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
          case 74: {
            if (metrics_ == null) {
              Metrics = new global::PassKit.Grpc.Metrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
          case 82: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 90: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventListResponse : pb::IMessage<EventListResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventListResponse> _parser = new pb::MessageParser<EventListResponse>(() => new EventListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EventListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.EventTickets.EventReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventListResponse(EventListResponse other) : this() {
      id_ = other.id_;
      production_ = other.production_ != null ? other.production_.Clone() : null;
      venue_ = other.venue_ != null ? other.venue_.Clone() : null;
      doorsOpen_ = other.doorsOpen_ != null ? other.doorsOpen_.Clone() : null;
      scheduledStartDate_ = other.scheduledStartDate_ != null ? other.scheduledStartDate_.Clone() : null;
      actualStartDate_ = other.actualStartDate_ != null ? other.actualStartDate_.Clone() : null;
      endDate_ = other.endDate_ != null ? other.endDate_.Clone() : null;
      relevantDate_ = other.relevantDate_ != null ? other.relevantDate_.Clone() : null;
      quota_ = other.quota_ != null ? other.quota_.Clone() : null;
      metrics_ = other.metrics_ != null ? other.metrics_.Clone() : null;
      created_ = other.created_ != null ? other.created_.Clone() : null;
      updated_ = other.updated_ != null ? other.updated_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventListResponse Clone() {
      return new EventListResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// PassKit generated event id (22 characters).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "production" field.</summary>
    public const int ProductionFieldNumber = 2;
    private global::PassKit.Grpc.EventTickets.ProductionLimitedFieldsResponse production_;
    /// <summary>
    /// The production that the event belongs to. In case of a create, only the production id needs to be provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.EventTickets.ProductionLimitedFieldsResponse Production {
      get { return production_; }
      set {
        production_ = value;
      }
    }

    /// <summary>Field number for the "venue" field.</summary>
    public const int VenueFieldNumber = 3;
    private global::PassKit.Grpc.EventTickets.VenueLimitedFieldsResponse venue_;
    /// <summary>
    /// The venue information. In case of a create, venue.id or venue.uid needs to be provided. If the venue does not exist it will be created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.EventTickets.VenueLimitedFieldsResponse Venue {
      get { return venue_; }
      set {
        venue_ = value;
      }
    }

    /// <summary>Field number for the "doorsOpen" field.</summary>
    public const int DoorsOpenFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp doorsOpen_;
    /// <summary>
    /// The date/time when the doors open at the venue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DoorsOpen {
      get { return doorsOpen_; }
      set {
        doorsOpen_ = value;
      }
    }

    /// <summary>Field number for the "scheduledStartDate" field.</summary>
    public const int ScheduledStartDateFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp scheduledStartDate_;
    /// <summary>
    /// The scheduled date/time when the event starts. If the event spans multiple days, it should be the start date/time on the first day. Tickets can only be issued for events that are within 90 days of the ticket issue date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ScheduledStartDate {
      get { return scheduledStartDate_; }
      set {
        scheduledStartDate_ = value;
      }
    }

    /// <summary>Field number for the "actualStartDate" field.</summary>
    public const int ActualStartDateFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp actualStartDate_;
    /// <summary>
    /// The new date/time when the event starts. This field can be used when you need to set a new event start data/time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ActualStartDate {
      get { return actualStartDate_; }
      set {
        actualStartDate_ = value;
      }
    }

    /// <summary>Field number for the "endDate" field.</summary>
    public const int EndDateFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endDate_;
    /// <summary>
    /// The date/time when the event ends. If the event spans multiple days, it should be the end date/time on the last day.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    /// <summary>Field number for the "relevantDate" field.</summary>
    public const int RelevantDateFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp relevantDate_;
    /// <summary>
    /// Optional relevant date for when the event starts. Used by Apple Wallet to trigger a lock-screen notification that there is an event coming up. Google Pay will always notify the user 3 hours before the event start date that they have an upcoming event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RelevantDate {
      get { return relevantDate_; }
      set {
        relevantDate_ = value;
      }
    }

    /// <summary>Field number for the "quota" field.</summary>
    public const int QuotaFieldNumber = 9;
    private global::PassKit.Grpc.Quota quota_;
    /// <summary>
    /// The quota for the event. If set to 0, then it is unlimited. If the quota is reached no new tickets can be issued.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Quota Quota {
      get { return quota_; }
      set {
        quota_ = value;
      }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 10;
    private global::PassKit.Grpc.Metrics metrics_;
    /// <summary>
    /// Performance analytics for the event. Not writable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Metrics Metrics {
      get { return metrics_; }
      set {
        metrics_ = value;
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// The date the event was created. Not writable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updated_;
    /// <summary>
    /// The date the event updated. Not writable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EventListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EventListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Production, other.Production)) return false;
      if (!object.Equals(Venue, other.Venue)) return false;
      if (!object.Equals(DoorsOpen, other.DoorsOpen)) return false;
      if (!object.Equals(ScheduledStartDate, other.ScheduledStartDate)) return false;
      if (!object.Equals(ActualStartDate, other.ActualStartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      if (!object.Equals(RelevantDate, other.RelevantDate)) return false;
      if (!object.Equals(Quota, other.Quota)) return false;
      if (!object.Equals(Metrics, other.Metrics)) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (!object.Equals(Updated, other.Updated)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (production_ != null) hash ^= Production.GetHashCode();
      if (venue_ != null) hash ^= Venue.GetHashCode();
      if (doorsOpen_ != null) hash ^= DoorsOpen.GetHashCode();
      if (scheduledStartDate_ != null) hash ^= ScheduledStartDate.GetHashCode();
      if (actualStartDate_ != null) hash ^= ActualStartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      if (relevantDate_ != null) hash ^= RelevantDate.GetHashCode();
      if (quota_ != null) hash ^= Quota.GetHashCode();
      if (metrics_ != null) hash ^= Metrics.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (updated_ != null) hash ^= Updated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (production_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Production);
      }
      if (venue_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Venue);
      }
      if (doorsOpen_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DoorsOpen);
      }
      if (scheduledStartDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ScheduledStartDate);
      }
      if (actualStartDate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ActualStartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EndDate);
      }
      if (relevantDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RelevantDate);
      }
      if (quota_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Quota);
      }
      if (metrics_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Metrics);
      }
      if (created_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Updated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (production_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Production);
      }
      if (venue_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Venue);
      }
      if (doorsOpen_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DoorsOpen);
      }
      if (scheduledStartDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ScheduledStartDate);
      }
      if (actualStartDate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ActualStartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EndDate);
      }
      if (relevantDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RelevantDate);
      }
      if (quota_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Quota);
      }
      if (metrics_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Metrics);
      }
      if (created_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Updated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (production_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Production);
      }
      if (venue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Venue);
      }
      if (doorsOpen_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DoorsOpen);
      }
      if (scheduledStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledStartDate);
      }
      if (actualStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActualStartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      if (relevantDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelevantDate);
      }
      if (quota_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quota);
      }
      if (metrics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metrics);
      }
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (updated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Updated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EventListResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.production_ != null) {
        if (production_ == null) {
          Production = new global::PassKit.Grpc.EventTickets.ProductionLimitedFieldsResponse();
        }
        Production.MergeFrom(other.Production);
      }
      if (other.venue_ != null) {
        if (venue_ == null) {
          Venue = new global::PassKit.Grpc.EventTickets.VenueLimitedFieldsResponse();
        }
        Venue.MergeFrom(other.Venue);
      }
      if (other.doorsOpen_ != null) {
        if (doorsOpen_ == null) {
          DoorsOpen = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DoorsOpen.MergeFrom(other.DoorsOpen);
      }
      if (other.scheduledStartDate_ != null) {
        if (scheduledStartDate_ == null) {
          ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ScheduledStartDate.MergeFrom(other.ScheduledStartDate);
      }
      if (other.actualStartDate_ != null) {
        if (actualStartDate_ == null) {
          ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ActualStartDate.MergeFrom(other.ActualStartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndDate.MergeFrom(other.EndDate);
      }
      if (other.relevantDate_ != null) {
        if (relevantDate_ == null) {
          RelevantDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RelevantDate.MergeFrom(other.RelevantDate);
      }
      if (other.quota_ != null) {
        if (quota_ == null) {
          Quota = new global::PassKit.Grpc.Quota();
        }
        Quota.MergeFrom(other.Quota);
      }
      if (other.metrics_ != null) {
        if (metrics_ == null) {
          Metrics = new global::PassKit.Grpc.Metrics();
        }
        Metrics.MergeFrom(other.Metrics);
      }
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      if (other.updated_ != null) {
        if (updated_ == null) {
          Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Updated.MergeFrom(other.Updated);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (production_ == null) {
              Production = new global::PassKit.Grpc.EventTickets.ProductionLimitedFieldsResponse();
            }
            input.ReadMessage(Production);
            break;
          }
          case 26: {
            if (venue_ == null) {
              Venue = new global::PassKit.Grpc.EventTickets.VenueLimitedFieldsResponse();
            }
            input.ReadMessage(Venue);
            break;
          }
          case 34: {
            if (doorsOpen_ == null) {
              DoorsOpen = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DoorsOpen);
            break;
          }
          case 42: {
            if (scheduledStartDate_ == null) {
              ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledStartDate);
            break;
          }
          case 50: {
            if (actualStartDate_ == null) {
              ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualStartDate);
            break;
          }
          case 58: {
            if (endDate_ == null) {
              EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 66: {
            if (relevantDate_ == null) {
              RelevantDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RelevantDate);
            break;
          }
          case 74: {
            if (quota_ == null) {
              Quota = new global::PassKit.Grpc.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
          case 82: {
            if (metrics_ == null) {
              Metrics = new global::PassKit.Grpc.Metrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
          case 90: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 98: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (production_ == null) {
              Production = new global::PassKit.Grpc.EventTickets.ProductionLimitedFieldsResponse();
            }
            input.ReadMessage(Production);
            break;
          }
          case 26: {
            if (venue_ == null) {
              Venue = new global::PassKit.Grpc.EventTickets.VenueLimitedFieldsResponse();
            }
            input.ReadMessage(Venue);
            break;
          }
          case 34: {
            if (doorsOpen_ == null) {
              DoorsOpen = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DoorsOpen);
            break;
          }
          case 42: {
            if (scheduledStartDate_ == null) {
              ScheduledStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledStartDate);
            break;
          }
          case 50: {
            if (actualStartDate_ == null) {
              ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualStartDate);
            break;
          }
          case 58: {
            if (endDate_ == null) {
              EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 66: {
            if (relevantDate_ == null) {
              RelevantDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RelevantDate);
            break;
          }
          case 74: {
            if (quota_ == null) {
              Quota = new global::PassKit.Grpc.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
          case 82: {
            if (metrics_ == null) {
              Metrics = new global::PassKit.Grpc.Metrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
          case 90: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 98: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
