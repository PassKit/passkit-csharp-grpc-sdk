// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/common/message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PassKit.Grpc {

  /// <summary>Holder for reflection information generated from io/common/message.proto</summary>
  public static partial class MessageReflection {

    #region Descriptor
    /// <summary>File descriptor for io/common/message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdpby9jb21tb24vbWVzc2FnZS5wcm90bxICaW8aHGlvL2NvbW1vbi9sb2Nh",
            "bGl6YXRpb24ucHJvdG8aGmlvL2NvbW1vbi9wYWdpbmF0aW9uLnByb3RvGh9n",
            "b29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhlpby9jb21tb24vcHJv",
            "dG9jb2xzLnByb3RvIqcECgdNZXNzYWdlEiIKCHByb3RvY29sGAEgASgOMhAu",
            "aW8uUGFzc1Byb3RvY29sEhEKCWNvbXBhbnlJZBgCIAEoCRIPCgdjbGFzc0lk",
            "GAMgASgJEgwKBHV1aWQYBCABKAkSIQoGc3RhdHVzGAUgASgOMhEuaW8uTWVz",
            "c2FnZVN0YXR1cxIPCgd3YXJuaW5nGAYgASgJEg8KB2ltYWdlSWQYByABKA0S",
            "DQoFdGl0bGUYCCABKAkSKwoObG9jYWxpemVkVGl0bGUYCSABKAsyEy5pby5M",
            "b2NhbGl6ZWRTdHJpbmcSDwoHY29udGVudBgKIAEoCRItChBsb2NhbGl6ZWRD",
            "b250ZW50GAsgASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEi0KCXN0YXJ0RGF0",
            "ZRgMIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoHZW5kRGF0",
            "ZRgNIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASGgoGZmlsdGVy",
            "GA4gASgLMgouaW8uRmlsdGVyEh4KFnJlY29yZHNNYXRjaGluZ1NlZ21lbnQY",
            "DyABKA0SIQoZcmVjb3Jkc1N1Y2Nlc3NmdWxseVVwZGF0ZRgQIAEoDRIdChVy",
            "ZWNvcmRzRmFpbGVkVG9VcGRhdGUYESABKA0SKwoHY3JlYXRlZBgSIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAqmwEKDU1lc3NhZ2VTdGF0dXMS",
            "CwoHQ1JFQVRFRBAAEg4KClBST0NFU1NJTkcQARIXChNBQk9SVEVEX1dJVEhf",
            "RVJST1JTEAISGwoXQ09NUExFVEVEX1dJVEhfV0FSTklOR1MQAxIZChVDT01Q",
            "TEVURURfV0lUSF9FUlJPUlMQBBIcChhDT01QTEVURURfV0lUSE9VVF9FUlJP",
            "UlMQBUJHChBjb20ucGFzc2tpdC5ncnBjWiRzdGFzaC5wYXNza2l0LmNvbS9p",
            "by9tb2RlbC9zZGsvZ28vaW+qAgxQYXNzS2l0LkdycGNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PassKit.Grpc.LocalizationReflection.Descriptor, global::PassKit.Grpc.PaginationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::PassKit.Grpc.ProtocolsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PassKit.Grpc.MessageStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Message), global::PassKit.Grpc.Message.Parser, new[]{ "Protocol", "CompanyId", "ClassId", "Uuid", "Status", "Warning", "ImageId", "Title", "LocalizedTitle", "Content", "LocalizedContent", "StartDate", "EndDate", "Filter", "RecordsMatchingSegment", "RecordsSuccessfullyUpdate", "RecordsFailedToUpdate", "Created" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MessageStatus {
    [pbr::OriginalName("CREATED")] Created = 0,
    [pbr::OriginalName("PROCESSING")] Processing = 1,
    [pbr::OriginalName("ABORTED_WITH_ERRORS")] AbortedWithErrors = 2,
    [pbr::OriginalName("COMPLETED_WITH_WARNINGS")] CompletedWithWarnings = 3,
    [pbr::OriginalName("COMPLETED_WITH_ERRORS")] CompletedWithErrors = 4,
    [pbr::OriginalName("COMPLETED_WITHOUT_ERRORS")] CompletedWithoutErrors = 5,
  }

  #endregion

  #region Messages
  public sealed partial class Message : pb::IMessage<Message>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.MessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      protocol_ = other.protocol_;
      companyId_ = other.companyId_;
      classId_ = other.classId_;
      uuid_ = other.uuid_;
      status_ = other.status_;
      warning_ = other.warning_;
      imageId_ = other.imageId_;
      title_ = other.title_;
      localizedTitle_ = other.localizedTitle_ != null ? other.localizedTitle_.Clone() : null;
      content_ = other.content_;
      localizedContent_ = other.localizedContent_ != null ? other.localizedContent_.Clone() : null;
      startDate_ = other.startDate_ != null ? other.startDate_.Clone() : null;
      endDate_ = other.endDate_ != null ? other.endDate_.Clone() : null;
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      recordsMatchingSegment_ = other.recordsMatchingSegment_;
      recordsSuccessfullyUpdate_ = other.recordsSuccessfullyUpdate_;
      recordsFailedToUpdate_ = other.recordsFailedToUpdate_;
      created_ = other.created_ != null ? other.created_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 1;
    private global::PassKit.Grpc.PassProtocol protocol_ = global::PassKit.Grpc.PassProtocol.DoNotUse;
    /// <summary>
    /// the protocol that this message is associated with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKit.Grpc.PassProtocol Protocol {
      get { return protocol_; }
      set {
        protocol_ = value;
      }
    }

    /// <summary>Field number for the "companyId" field.</summary>
    public const int CompanyIdFieldNumber = 2;
    private string companyId_ = "";
    /// <summary>
    /// the id of the company that made the message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "classId" field.</summary>
    public const int ClassIdFieldNumber = 3;
    private string classId_ = "";
    /// <summary>
    /// the higher level class id for the protocol.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClassId {
      get { return classId_; }
      set {
        classId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 4;
    private string uuid_ = "";
    /// <summary>
    /// the unique id for this message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::PassKit.Grpc.MessageStatus status_ = global::PassKit.Grpc.MessageStatus.Created;
    /// <summary>
    /// the status of the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKit.Grpc.MessageStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "warning" field.</summary>
    public const int WarningFieldNumber = 6;
    private string warning_ = "";
    /// <summary>
    /// warning of any errors that may have occurred.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Warning {
      get { return warning_; }
      set {
        warning_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "imageId" field.</summary>
    public const int ImageIdFieldNumber = 7;
    private uint imageId_;
    /// <summary>
    /// Optional Image ID; for the Main Image that will be shown in Google Pay (Google Pay only; no image is shown for Apple Wallet).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ImageId {
      get { return imageId_; }
      set {
        imageId_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 8;
    private string title_ = "";
    /// <summary>
    /// Title (summary) of the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedTitle" field.</summary>
    public const int LocalizedTitleFieldNumber = 9;
    private global::PassKit.Grpc.LocalizedString localizedTitle_;
    /// <summary>
    /// Localized title of the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKit.Grpc.LocalizedString LocalizedTitle {
      get { return localizedTitle_; }
      set {
        localizedTitle_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 10;
    private string content_ = "";
    /// <summary>
    /// Content of the message (finer details).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedContent" field.</summary>
    public const int LocalizedContentFieldNumber = 11;
    private global::PassKit.Grpc.LocalizedString localizedContent_;
    /// <summary>
    /// Localized content of the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKit.Grpc.LocalizedString LocalizedContent {
      get { return localizedContent_; }
      set {
        localizedContent_ = value;
      }
    }

    /// <summary>Field number for the "startDate" field.</summary>
    public const int StartDateFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startDate_;
    /// <summary>
    /// Start date indicates when the message is shown on the pass.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "endDate" field.</summary>
    public const int EndDateFieldNumber = 13;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endDate_;
    /// <summary>
    /// End date indicates when the message is removed from the pass.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 14;
    private global::PassKit.Grpc.Filter filter_;
    /// <summary>
    /// optional filter used determine which members qualify for this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PassKit.Grpc.Filter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "recordsMatchingSegment" field.</summary>
    public const int RecordsMatchingSegmentFieldNumber = 15;
    private uint recordsMatchingSegment_;
    /// <summary>
    /// number of records this message will be sent to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RecordsMatchingSegment {
      get { return recordsMatchingSegment_; }
      set {
        recordsMatchingSegment_ = value;
      }
    }

    /// <summary>Field number for the "recordsSuccessfullyUpdate" field.</summary>
    public const int RecordsSuccessfullyUpdateFieldNumber = 16;
    private uint recordsSuccessfullyUpdate_;
    /// <summary>
    /// number of records updated with this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RecordsSuccessfullyUpdate {
      get { return recordsSuccessfullyUpdate_; }
      set {
        recordsSuccessfullyUpdate_ = value;
      }
    }

    /// <summary>Field number for the "recordsFailedToUpdate" field.</summary>
    public const int RecordsFailedToUpdateFieldNumber = 17;
    private uint recordsFailedToUpdate_;
    /// <summary>
    /// number of records that failed updated with this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RecordsFailedToUpdate {
      get { return recordsFailedToUpdate_; }
      set {
        recordsFailedToUpdate_ = value;
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 18;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// The date the message was created in the PassKit system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Protocol != other.Protocol) return false;
      if (CompanyId != other.CompanyId) return false;
      if (ClassId != other.ClassId) return false;
      if (Uuid != other.Uuid) return false;
      if (Status != other.Status) return false;
      if (Warning != other.Warning) return false;
      if (ImageId != other.ImageId) return false;
      if (Title != other.Title) return false;
      if (!object.Equals(LocalizedTitle, other.LocalizedTitle)) return false;
      if (Content != other.Content) return false;
      if (!object.Equals(LocalizedContent, other.LocalizedContent)) return false;
      if (!object.Equals(StartDate, other.StartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if (RecordsMatchingSegment != other.RecordsMatchingSegment) return false;
      if (RecordsSuccessfullyUpdate != other.RecordsSuccessfullyUpdate) return false;
      if (RecordsFailedToUpdate != other.RecordsFailedToUpdate) return false;
      if (!object.Equals(Created, other.Created)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Protocol != global::PassKit.Grpc.PassProtocol.DoNotUse) hash ^= Protocol.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (ClassId.Length != 0) hash ^= ClassId.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Status != global::PassKit.Grpc.MessageStatus.Created) hash ^= Status.GetHashCode();
      if (Warning.Length != 0) hash ^= Warning.GetHashCode();
      if (ImageId != 0) hash ^= ImageId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (localizedTitle_ != null) hash ^= LocalizedTitle.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (localizedContent_ != null) hash ^= LocalizedContent.GetHashCode();
      if (startDate_ != null) hash ^= StartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (RecordsMatchingSegment != 0) hash ^= RecordsMatchingSegment.GetHashCode();
      if (RecordsSuccessfullyUpdate != 0) hash ^= RecordsSuccessfullyUpdate.GetHashCode();
      if (RecordsFailedToUpdate != 0) hash ^= RecordsFailedToUpdate.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Protocol != global::PassKit.Grpc.PassProtocol.DoNotUse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Protocol);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyId);
      }
      if (ClassId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClassId);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Uuid);
      }
      if (Status != global::PassKit.Grpc.MessageStatus.Created) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      if (Warning.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Warning);
      }
      if (ImageId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ImageId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Title);
      }
      if (localizedTitle_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LocalizedTitle);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Content);
      }
      if (localizedContent_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LocalizedContent);
      }
      if (startDate_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(EndDate);
      }
      if (filter_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Filter);
      }
      if (RecordsMatchingSegment != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(RecordsMatchingSegment);
      }
      if (RecordsSuccessfullyUpdate != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(RecordsSuccessfullyUpdate);
      }
      if (RecordsFailedToUpdate != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(RecordsFailedToUpdate);
      }
      if (created_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Created);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Protocol != global::PassKit.Grpc.PassProtocol.DoNotUse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Protocol);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyId);
      }
      if (ClassId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClassId);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Uuid);
      }
      if (Status != global::PassKit.Grpc.MessageStatus.Created) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      if (Warning.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Warning);
      }
      if (ImageId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(ImageId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Title);
      }
      if (localizedTitle_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LocalizedTitle);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Content);
      }
      if (localizedContent_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LocalizedContent);
      }
      if (startDate_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(EndDate);
      }
      if (filter_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Filter);
      }
      if (RecordsMatchingSegment != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(RecordsMatchingSegment);
      }
      if (RecordsSuccessfullyUpdate != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(RecordsSuccessfullyUpdate);
      }
      if (RecordsFailedToUpdate != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(RecordsFailedToUpdate);
      }
      if (created_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Created);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Protocol != global::PassKit.Grpc.PassProtocol.DoNotUse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (ClassId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClassId);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Status != global::PassKit.Grpc.MessageStatus.Created) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Warning.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Warning);
      }
      if (ImageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ImageId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (localizedTitle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedTitle);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (localizedContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedContent);
      }
      if (startDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (RecordsMatchingSegment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RecordsMatchingSegment);
      }
      if (RecordsSuccessfullyUpdate != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RecordsSuccessfullyUpdate);
      }
      if (RecordsFailedToUpdate != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RecordsFailedToUpdate);
      }
      if (created_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.Protocol != global::PassKit.Grpc.PassProtocol.DoNotUse) {
        Protocol = other.Protocol;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.ClassId.Length != 0) {
        ClassId = other.ClassId;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Status != global::PassKit.Grpc.MessageStatus.Created) {
        Status = other.Status;
      }
      if (other.Warning.Length != 0) {
        Warning = other.Warning;
      }
      if (other.ImageId != 0) {
        ImageId = other.ImageId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.localizedTitle_ != null) {
        if (localizedTitle_ == null) {
          LocalizedTitle = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedTitle.MergeFrom(other.LocalizedTitle);
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.localizedContent_ != null) {
        if (localizedContent_ == null) {
          LocalizedContent = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedContent.MergeFrom(other.LocalizedContent);
      }
      if (other.startDate_ != null) {
        if (startDate_ == null) {
          StartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartDate.MergeFrom(other.StartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndDate.MergeFrom(other.EndDate);
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::PassKit.Grpc.Filter();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.RecordsMatchingSegment != 0) {
        RecordsMatchingSegment = other.RecordsMatchingSegment;
      }
      if (other.RecordsSuccessfullyUpdate != 0) {
        RecordsSuccessfullyUpdate = other.RecordsSuccessfullyUpdate;
      }
      if (other.RecordsFailedToUpdate != 0) {
        RecordsFailedToUpdate = other.RecordsFailedToUpdate;
      }
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Protocol = (global::PassKit.Grpc.PassProtocol) input.ReadEnum();
            break;
          }
          case 18: {
            CompanyId = input.ReadString();
            break;
          }
          case 26: {
            ClassId = input.ReadString();
            break;
          }
          case 34: {
            Uuid = input.ReadString();
            break;
          }
          case 40: {
            Status = (global::PassKit.Grpc.MessageStatus) input.ReadEnum();
            break;
          }
          case 50: {
            Warning = input.ReadString();
            break;
          }
          case 56: {
            ImageId = input.ReadUInt32();
            break;
          }
          case 66: {
            Title = input.ReadString();
            break;
          }
          case 74: {
            if (localizedTitle_ == null) {
              LocalizedTitle = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedTitle);
            break;
          }
          case 82: {
            Content = input.ReadString();
            break;
          }
          case 90: {
            if (localizedContent_ == null) {
              LocalizedContent = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedContent);
            break;
          }
          case 98: {
            if (startDate_ == null) {
              StartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 106: {
            if (endDate_ == null) {
              EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 114: {
            if (filter_ == null) {
              Filter = new global::PassKit.Grpc.Filter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 120: {
            RecordsMatchingSegment = input.ReadUInt32();
            break;
          }
          case 128: {
            RecordsSuccessfullyUpdate = input.ReadUInt32();
            break;
          }
          case 136: {
            RecordsFailedToUpdate = input.ReadUInt32();
            break;
          }
          case 146: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Protocol = (global::PassKit.Grpc.PassProtocol) input.ReadEnum();
            break;
          }
          case 18: {
            CompanyId = input.ReadString();
            break;
          }
          case 26: {
            ClassId = input.ReadString();
            break;
          }
          case 34: {
            Uuid = input.ReadString();
            break;
          }
          case 40: {
            Status = (global::PassKit.Grpc.MessageStatus) input.ReadEnum();
            break;
          }
          case 50: {
            Warning = input.ReadString();
            break;
          }
          case 56: {
            ImageId = input.ReadUInt32();
            break;
          }
          case 66: {
            Title = input.ReadString();
            break;
          }
          case 74: {
            if (localizedTitle_ == null) {
              LocalizedTitle = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedTitle);
            break;
          }
          case 82: {
            Content = input.ReadString();
            break;
          }
          case 90: {
            if (localizedContent_ == null) {
              LocalizedContent = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedContent);
            break;
          }
          case 98: {
            if (startDate_ == null) {
              StartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 106: {
            if (endDate_ == null) {
              EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 114: {
            if (filter_ == null) {
              Filter = new global::PassKit.Grpc.Filter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 120: {
            RecordsMatchingSegment = input.ReadUInt32();
            break;
          }
          case 128: {
            RecordsSuccessfullyUpdate = input.ReadUInt32();
            break;
          }
          case 136: {
            RecordsFailedToUpdate = input.ReadUInt32();
            break;
          }
          case 146: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
