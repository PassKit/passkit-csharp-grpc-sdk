// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/flights/passenger.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PassKit.Grpc.Flights {

  /// <summary>Holder for reflection information generated from io/flights/passenger.proto</summary>
  public static partial class PassengerReflection {

    #region Descriptor
    /// <summary>File descriptor for io/flights/passenger.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PassengerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chppby9mbGlnaHRzL3Bhc3Nlbmdlci5wcm90bxIHZmxpZ2h0cxoYaW8vZmxp",
            "Z2h0cy9iYXJjb2RlLnByb3RvGh5pby9jb21tb24vY29tbW9uX29iamVjdHMu",
            "cHJvdG8aGGlvL2NvbW1vbi9wZXJzb25hbC5wcm90bxoucHJvdG9jLWdlbi1v",
            "cGVuYXBpdjIvb3B0aW9ucy9hbm5vdGF0aW9ucy5wcm90byLJBAoJUGFzc2Vu",
            "Z2VyEiQKEHBhc3NlbmdlckRldGFpbHMYASABKAsyCi5pby5QZXJzb24SNQoR",
            "ZnJlcXVlbnRGbHllckluZm8YAiABKAsyGi5mbGlnaHRzLkZyZXF1ZW50Rmx5",
            "ZXJJbmZvEjEKD2lkZW50aXR5RGV0YWlscxgDIAEoCzIYLmZsaWdodHMuSWRl",
            "bnRpdHlEZXRhaWxzEhIKCndpdGhJbmZhbnQYBCABKAgSJgoNaW5mYW50RGV0",
            "YWlscxgFIAEoCzIPLmZsaWdodHMuSW5mYW50EhsKE2tub3duVHJhdmVsZXJO",
            "dW1iZXIYByABKAk60gKSQc4CCssCKglQYXNzZW5nZXIyqgJQYXNzZW5nZXIg",
            "aW5mb3JtYXRpb24gY2FuIG9wdGlvbmFsbHkgYmUgcHJvdmlkZWQuIEFsbCBm",
            "aWVsZHMgYXJlIG9wdGlvbmFsIHdpdGggdGhlIGV4Y2VwdGlvbiBvZiB0aGUg",
            "UGFzc2VuZ2VyIG5hbWUgdG8gYmUgcmVuZGVyZWQgb24gdGhlIGJvYXJkaW5n",
            "IHBhc3MuIEFsbCBwYXNzZW5nZXIgaXMgdHJlYXRlZCBhcyBQSUkgYW5kIGVu",
            "Y3J5cHRlZCBhdCByZXN0LiBQYXNzZW5nZXIgaW5mb3JtYXRpb24gaXMgZGVs",
            "ZXRlZCBvciByZW5kZXJlZCB1bnVzYWJsZSBvbmNlIHRoZSBwYXNzIHJlY29y",
            "ZCBoYXMgaW52YWxpZGF0ZWQu0gEQcGFzc2VuZ2VyRGV0YWlscyJhChFGcmVx",
            "dWVudEZseWVySW5mbxITCgtwcm9ncmFtTmFtZRgBIAEoCRIZChFhaXJsaW5l",
            "RGVzaWduYXRvchgCIAEoCRIOCgZudW1iZXIYAyABKAkSDAoEdGllchgEIAEo",
            "CSKCAgoPSWRlbnRpdHlEZXRhaWxzEjMKEGlkZW50aXR5RG9jdW1lbnQYASAB",
            "KA4yGS5mbGlnaHRzLklkZW50aXR5RG9jdW1lbnQSFgoOaXNzdWluZ0NvdW50",
            "cnkYAiABKAkSEwoLbmF0aW9uYWxpdHkYAyABKAkSFgoOZG9jdW1lbnROdW1i",
            "ZXIYBCABKAkSHQoLZGF0ZU9mQmlydGgYBSABKAsyCC5pby5EYXRlEhoKBmdl",
            "bmRlchgGIAEoDjIKLmlvLkdlbmRlchIcCgppc3N1ZWREYXRlGAcgASgLMggu",
            "aW8uRGF0ZRIcCgpleHBpcnlEYXRlGAggASgLMgguaW8uRGF0ZSKOAgoGSW5m",
            "YW50EiEKDWluZmFudERldGFpbHMYASABKAsyCi5pby5QZXJzb24SMQoPaWRl",
            "bnRpdHlEZXRhaWxzGAIgASgLMhguZmxpZ2h0cy5JZGVudGl0eURldGFpbHMS",
            "FgoOYmFyY29kZVBheWxvYWQYAyABKAkSMwoQY29uZGl0aW9uYWxJdGVtcxgE",
            "IAEoCzIZLmZsaWdodHMuQ29uZGl0aW9uYWxJdGVtcxIdChViYXJjb2RlQWRk",
            "aXRpb25hbERhdGEYBSABKAkSFQoNc2VjdXJpdHlJbWFnZRgGIAEoCRIWCg5w",
            "cml2aWxlZ2VJbWFnZRgHIAEoCRITCgtmb290ZXJJbWFnZRgIIAEoCSqQAQoQ",
            "SWRlbnRpdHlEb2N1bWVudBIMCghQQVNTUE9SVBAAEhQKEE5BVElPTkFMX0lE",
            "X0NBUkQQARITCg9EUklWSU5HX0xJQ0VOU0UQAhIPCgtDUkVESVRfQ0FSRBAD",
            "EhcKE0ZSRVFVRU5UX0ZMWUVSX0NBUkQQBBIZChVPVEhFUl9UUkFWRUxfRE9D",
            "VU1FTlQQBUJfChhjb20ucGFzc2tpdC5ncnBjLkZsaWdodHNaLHN0YXNoLnBh",
            "c3NraXQuY29tL2lvL21vZGVsL3Nkay9nby9pby9mbGlnaHRzqgIUUGFzc0tp",
            "dC5HcnBjLkZsaWdodHNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PassKit.Grpc.Flights.BarcodeReflection.Descriptor, global::PassKit.Grpc.CommonObjectsReflection.Descriptor, global::PassKit.Grpc.PersonalReflection.Descriptor, global::PassKit.Grpc.Gateway.ProtocGenOpenapiv2.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PassKit.Grpc.Flights.IdentityDocument), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Flights.Passenger), global::PassKit.Grpc.Flights.Passenger.Parser, new[]{ "PassengerDetails", "FrequentFlyerInfo", "IdentityDetails", "WithInfant", "InfantDetails", "KnownTravelerNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Flights.FrequentFlyerInfo), global::PassKit.Grpc.Flights.FrequentFlyerInfo.Parser, new[]{ "ProgramName", "AirlineDesignator", "Number", "Tier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Flights.IdentityDetails), global::PassKit.Grpc.Flights.IdentityDetails.Parser, new[]{ "IdentityDocument", "IssuingCountry", "Nationality", "DocumentNumber", "DateOfBirth", "Gender", "IssuedDate", "ExpiryDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Flights.Infant), global::PassKit.Grpc.Flights.Infant.Parser, new[]{ "InfantDetails", "IdentityDetails", "BarcodePayload", "ConditionalItems", "BarcodeAdditionalData", "SecurityImage", "PrivilegeImage", "FooterImage" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Type of document used to validate the traveler's identity.
  /// </summary>
  public enum IdentityDocument {
    /// <summary>
    /// Passport
    /// </summary>
    [pbr::OriginalName("PASSPORT")] Passport = 0,
    /// <summary>
    /// National ID card
    /// </summary>
    [pbr::OriginalName("NATIONAL_ID_CARD")] NationalIdCard = 1,
    /// <summary>
    /// Driving license
    /// </summary>
    [pbr::OriginalName("DRIVING_LICENSE")] DrivingLicense = 2,
    /// <summary>
    /// Credit card
    /// </summary>
    [pbr::OriginalName("CREDIT_CARD")] CreditCard = 3,
    /// <summary>
    /// Frequent flyer card
    /// </summary>
    [pbr::OriginalName("FREQUENT_FLYER_CARD")] FrequentFlyerCard = 4,
    /// <summary>
    /// Other travel document
    /// </summary>
    [pbr::OriginalName("OTHER_TRAVEL_DOCUMENT")] OtherTravelDocument = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Details of a passenger and any infant.
  /// </summary>
  public sealed partial class Passenger : pb::IMessage<Passenger>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Passenger> _parser = new pb::MessageParser<Passenger>(() => new Passenger());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Passenger> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.Flights.PassengerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Passenger() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Passenger(Passenger other) : this() {
      passengerDetails_ = other.passengerDetails_ != null ? other.passengerDetails_.Clone() : null;
      frequentFlyerInfo_ = other.frequentFlyerInfo_ != null ? other.frequentFlyerInfo_.Clone() : null;
      identityDetails_ = other.identityDetails_ != null ? other.identityDetails_.Clone() : null;
      withInfant_ = other.withInfant_;
      infantDetails_ = other.infantDetails_ != null ? other.infantDetails_.Clone() : null;
      knownTravelerNumber_ = other.knownTravelerNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Passenger Clone() {
      return new Passenger(this);
    }

    /// <summary>Field number for the "passengerDetails" field.</summary>
    public const int PassengerDetailsFieldNumber = 1;
    private global::PassKit.Grpc.Person passengerDetails_;
    /// <summary>
    /// Personal details of the passenger.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Person PassengerDetails {
      get { return passengerDetails_; }
      set {
        passengerDetails_ = value;
      }
    }

    /// <summary>Field number for the "frequentFlyerInfo" field.</summary>
    public const int FrequentFlyerInfoFieldNumber = 2;
    private global::PassKit.Grpc.Flights.FrequentFlyerInfo frequentFlyerInfo_;
    /// <summary>
    /// Frequent flyer details for th passenger.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Flights.FrequentFlyerInfo FrequentFlyerInfo {
      get { return frequentFlyerInfo_; }
      set {
        frequentFlyerInfo_ = value;
      }
    }

    /// <summary>Field number for the "identityDetails" field.</summary>
    public const int IdentityDetailsFieldNumber = 3;
    private global::PassKit.Grpc.Flights.IdentityDetails identityDetails_;
    /// <summary>
    /// Optional identity details, only required if need to be rendered on the pass, or for analytics purposes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Flights.IdentityDetails IdentityDetails {
      get { return identityDetails_; }
      set {
        identityDetails_ = value;
      }
    }

    /// <summary>Field number for the "withInfant" field.</summary>
    public const int WithInfantFieldNumber = 4;
    private bool withInfant_;
    /// <summary>
    /// If the passenger is travelling with an infant under 2 years old, not occupying a seat, set to true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WithInfant {
      get { return withInfant_; }
      set {
        withInfant_ = value;
      }
    }

    /// <summary>Field number for the "infantDetails" field.</summary>
    public const int InfantDetailsFieldNumber = 5;
    private global::PassKit.Grpc.Flights.Infant infantDetails_;
    /// <summary>
    /// Details of the infant travelling with the passenger.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Flights.Infant InfantDetails {
      get { return infantDetails_; }
      set {
        infantDetails_ = value;
      }
    }

    /// <summary>Field number for the "knownTravelerNumber" field.</summary>
    public const int KnownTravelerNumberFieldNumber = 7;
    private string knownTravelerNumber_ = "";
    /// <summary>
    /// If a passenger has a Known Traveler Number (KTN) or trusted traveler number, record it here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string KnownTravelerNumber {
      get { return knownTravelerNumber_; }
      set {
        knownTravelerNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Passenger);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Passenger other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PassengerDetails, other.PassengerDetails)) return false;
      if (!object.Equals(FrequentFlyerInfo, other.FrequentFlyerInfo)) return false;
      if (!object.Equals(IdentityDetails, other.IdentityDetails)) return false;
      if (WithInfant != other.WithInfant) return false;
      if (!object.Equals(InfantDetails, other.InfantDetails)) return false;
      if (KnownTravelerNumber != other.KnownTravelerNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (passengerDetails_ != null) hash ^= PassengerDetails.GetHashCode();
      if (frequentFlyerInfo_ != null) hash ^= FrequentFlyerInfo.GetHashCode();
      if (identityDetails_ != null) hash ^= IdentityDetails.GetHashCode();
      if (WithInfant != false) hash ^= WithInfant.GetHashCode();
      if (infantDetails_ != null) hash ^= InfantDetails.GetHashCode();
      if (KnownTravelerNumber.Length != 0) hash ^= KnownTravelerNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (passengerDetails_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PassengerDetails);
      }
      if (frequentFlyerInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FrequentFlyerInfo);
      }
      if (identityDetails_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(IdentityDetails);
      }
      if (WithInfant != false) {
        output.WriteRawTag(32);
        output.WriteBool(WithInfant);
      }
      if (infantDetails_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(InfantDetails);
      }
      if (KnownTravelerNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(KnownTravelerNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (passengerDetails_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PassengerDetails);
      }
      if (frequentFlyerInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FrequentFlyerInfo);
      }
      if (identityDetails_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(IdentityDetails);
      }
      if (WithInfant != false) {
        output.WriteRawTag(32);
        output.WriteBool(WithInfant);
      }
      if (infantDetails_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(InfantDetails);
      }
      if (KnownTravelerNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(KnownTravelerNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (passengerDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PassengerDetails);
      }
      if (frequentFlyerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FrequentFlyerInfo);
      }
      if (identityDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdentityDetails);
      }
      if (WithInfant != false) {
        size += 1 + 1;
      }
      if (infantDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfantDetails);
      }
      if (KnownTravelerNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KnownTravelerNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Passenger other) {
      if (other == null) {
        return;
      }
      if (other.passengerDetails_ != null) {
        if (passengerDetails_ == null) {
          PassengerDetails = new global::PassKit.Grpc.Person();
        }
        PassengerDetails.MergeFrom(other.PassengerDetails);
      }
      if (other.frequentFlyerInfo_ != null) {
        if (frequentFlyerInfo_ == null) {
          FrequentFlyerInfo = new global::PassKit.Grpc.Flights.FrequentFlyerInfo();
        }
        FrequentFlyerInfo.MergeFrom(other.FrequentFlyerInfo);
      }
      if (other.identityDetails_ != null) {
        if (identityDetails_ == null) {
          IdentityDetails = new global::PassKit.Grpc.Flights.IdentityDetails();
        }
        IdentityDetails.MergeFrom(other.IdentityDetails);
      }
      if (other.WithInfant != false) {
        WithInfant = other.WithInfant;
      }
      if (other.infantDetails_ != null) {
        if (infantDetails_ == null) {
          InfantDetails = new global::PassKit.Grpc.Flights.Infant();
        }
        InfantDetails.MergeFrom(other.InfantDetails);
      }
      if (other.KnownTravelerNumber.Length != 0) {
        KnownTravelerNumber = other.KnownTravelerNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (passengerDetails_ == null) {
              PassengerDetails = new global::PassKit.Grpc.Person();
            }
            input.ReadMessage(PassengerDetails);
            break;
          }
          case 18: {
            if (frequentFlyerInfo_ == null) {
              FrequentFlyerInfo = new global::PassKit.Grpc.Flights.FrequentFlyerInfo();
            }
            input.ReadMessage(FrequentFlyerInfo);
            break;
          }
          case 26: {
            if (identityDetails_ == null) {
              IdentityDetails = new global::PassKit.Grpc.Flights.IdentityDetails();
            }
            input.ReadMessage(IdentityDetails);
            break;
          }
          case 32: {
            WithInfant = input.ReadBool();
            break;
          }
          case 42: {
            if (infantDetails_ == null) {
              InfantDetails = new global::PassKit.Grpc.Flights.Infant();
            }
            input.ReadMessage(InfantDetails);
            break;
          }
          case 58: {
            KnownTravelerNumber = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (passengerDetails_ == null) {
              PassengerDetails = new global::PassKit.Grpc.Person();
            }
            input.ReadMessage(PassengerDetails);
            break;
          }
          case 18: {
            if (frequentFlyerInfo_ == null) {
              FrequentFlyerInfo = new global::PassKit.Grpc.Flights.FrequentFlyerInfo();
            }
            input.ReadMessage(FrequentFlyerInfo);
            break;
          }
          case 26: {
            if (identityDetails_ == null) {
              IdentityDetails = new global::PassKit.Grpc.Flights.IdentityDetails();
            }
            input.ReadMessage(IdentityDetails);
            break;
          }
          case 32: {
            WithInfant = input.ReadBool();
            break;
          }
          case 42: {
            if (infantDetails_ == null) {
              InfantDetails = new global::PassKit.Grpc.Flights.Infant();
            }
            input.ReadMessage(InfantDetails);
            break;
          }
          case 58: {
            KnownTravelerNumber = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Passenger Frequent Flyer information
  /// </summary>
  public sealed partial class FrequentFlyerInfo : pb::IMessage<FrequentFlyerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FrequentFlyerInfo> _parser = new pb::MessageParser<FrequentFlyerInfo>(() => new FrequentFlyerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FrequentFlyerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.Flights.PassengerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrequentFlyerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrequentFlyerInfo(FrequentFlyerInfo other) : this() {
      programName_ = other.programName_;
      airlineDesignator_ = other.airlineDesignator_;
      number_ = other.number_;
      tier_ = other.tier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrequentFlyerInfo Clone() {
      return new FrequentFlyerInfo(this);
    }

    /// <summary>Field number for the "programName" field.</summary>
    public const int ProgramNameFieldNumber = 1;
    private string programName_ = "";
    /// <summary>
    /// The the marketing name for the frequent flyer program, e.g. KrisFlyer, Miles &amp; More, Skymiles, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProgramName {
      get { return programName_; }
      set {
        programName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "airlineDesignator" field.</summary>
    public const int AirlineDesignatorFieldNumber = 2;
    private string airlineDesignator_ = "";
    /// <summary>
    /// The airline designator of the traveler's frequent flyer program.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AirlineDesignator {
      get { return airlineDesignator_; }
      set {
        airlineDesignator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 3;
    private string number_ = "";
    /// <summary>
    /// The traveler frequent flyer number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Number {
      get { return number_; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tier" field.</summary>
    public const int TierFieldNumber = 4;
    private string tier_ = "";
    /// <summary>
    /// An optional code to represent the tier of the traveler, if known. This field may be used to render a tier specific logo on the boarding pass.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tier {
      get { return tier_; }
      set {
        tier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FrequentFlyerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FrequentFlyerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProgramName != other.ProgramName) return false;
      if (AirlineDesignator != other.AirlineDesignator) return false;
      if (Number != other.Number) return false;
      if (Tier != other.Tier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ProgramName.Length != 0) hash ^= ProgramName.GetHashCode();
      if (AirlineDesignator.Length != 0) hash ^= AirlineDesignator.GetHashCode();
      if (Number.Length != 0) hash ^= Number.GetHashCode();
      if (Tier.Length != 0) hash ^= Tier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProgramName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProgramName);
      }
      if (AirlineDesignator.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AirlineDesignator);
      }
      if (Number.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Number);
      }
      if (Tier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Tier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProgramName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProgramName);
      }
      if (AirlineDesignator.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AirlineDesignator);
      }
      if (Number.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Number);
      }
      if (Tier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Tier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ProgramName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramName);
      }
      if (AirlineDesignator.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AirlineDesignator);
      }
      if (Number.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (Tier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FrequentFlyerInfo other) {
      if (other == null) {
        return;
      }
      if (other.ProgramName.Length != 0) {
        ProgramName = other.ProgramName;
      }
      if (other.AirlineDesignator.Length != 0) {
        AirlineDesignator = other.AirlineDesignator;
      }
      if (other.Number.Length != 0) {
        Number = other.Number;
      }
      if (other.Tier.Length != 0) {
        Tier = other.Tier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProgramName = input.ReadString();
            break;
          }
          case 18: {
            AirlineDesignator = input.ReadString();
            break;
          }
          case 26: {
            Number = input.ReadString();
            break;
          }
          case 34: {
            Tier = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ProgramName = input.ReadString();
            break;
          }
          case 18: {
            AirlineDesignator = input.ReadString();
            break;
          }
          case 26: {
            Number = input.ReadString();
            break;
          }
          case 34: {
            Tier = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Details of document used to identify the traveler's identity.
  /// </summary>
  public sealed partial class IdentityDetails : pb::IMessage<IdentityDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IdentityDetails> _parser = new pb::MessageParser<IdentityDetails>(() => new IdentityDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IdentityDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.Flights.PassengerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IdentityDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IdentityDetails(IdentityDetails other) : this() {
      identityDocument_ = other.identityDocument_;
      issuingCountry_ = other.issuingCountry_;
      nationality_ = other.nationality_;
      documentNumber_ = other.documentNumber_;
      dateOfBirth_ = other.dateOfBirth_ != null ? other.dateOfBirth_.Clone() : null;
      gender_ = other.gender_;
      issuedDate_ = other.issuedDate_ != null ? other.issuedDate_.Clone() : null;
      expiryDate_ = other.expiryDate_ != null ? other.expiryDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IdentityDetails Clone() {
      return new IdentityDetails(this);
    }

    /// <summary>Field number for the "identityDocument" field.</summary>
    public const int IdentityDocumentFieldNumber = 1;
    private global::PassKit.Grpc.Flights.IdentityDocument identityDocument_ = global::PassKit.Grpc.Flights.IdentityDocument.Passport;
    /// <summary>
    /// Type of document used to validate the traveler's identity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Flights.IdentityDocument IdentityDocument {
      get { return identityDocument_; }
      set {
        identityDocument_ = value;
      }
    }

    /// <summary>Field number for the "issuingCountry" field.</summary>
    public const int IssuingCountryFieldNumber = 2;
    private string issuingCountry_ = "";
    /// <summary>
    /// The two digit ISO 3166 country code of the country of the travel document issuing authority.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IssuingCountry {
      get { return issuingCountry_; }
      set {
        issuingCountry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nationality" field.</summary>
    public const int NationalityFieldNumber = 3;
    private string nationality_ = "";
    /// <summary>
    /// The two digit ISO 3166 country code of the traveler's nationality.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nationality {
      get { return nationality_; }
      set {
        nationality_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "documentNumber" field.</summary>
    public const int DocumentNumberFieldNumber = 4;
    private string documentNumber_ = "";
    /// <summary>
    /// The number or other unique identifying reference of the traveler's document.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DocumentNumber {
      get { return documentNumber_; }
      set {
        documentNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dateOfBirth" field.</summary>
    public const int DateOfBirthFieldNumber = 5;
    private global::PassKit.Grpc.Date dateOfBirth_;
    /// <summary>
    /// The date of birth as marked on the traveler's identity document.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Date DateOfBirth {
      get { return dateOfBirth_; }
      set {
        dateOfBirth_ = value;
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 6;
    private global::PassKit.Grpc.Gender gender_ = global::PassKit.Grpc.Gender.NotKnown;
    /// <summary>
    /// The gender as marked on the traveler's identity document.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Gender Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "issuedDate" field.</summary>
    public const int IssuedDateFieldNumber = 7;
    private global::PassKit.Grpc.Date issuedDate_;
    /// <summary>
    /// The issue date of the traveler's identity document.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Date IssuedDate {
      get { return issuedDate_; }
      set {
        issuedDate_ = value;
      }
    }

    /// <summary>Field number for the "expiryDate" field.</summary>
    public const int ExpiryDateFieldNumber = 8;
    private global::PassKit.Grpc.Date expiryDate_;
    /// <summary>
    /// The expiry date of the traveler's identity document.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Date ExpiryDate {
      get { return expiryDate_; }
      set {
        expiryDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IdentityDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IdentityDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdentityDocument != other.IdentityDocument) return false;
      if (IssuingCountry != other.IssuingCountry) return false;
      if (Nationality != other.Nationality) return false;
      if (DocumentNumber != other.DocumentNumber) return false;
      if (!object.Equals(DateOfBirth, other.DateOfBirth)) return false;
      if (Gender != other.Gender) return false;
      if (!object.Equals(IssuedDate, other.IssuedDate)) return false;
      if (!object.Equals(ExpiryDate, other.ExpiryDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IdentityDocument != global::PassKit.Grpc.Flights.IdentityDocument.Passport) hash ^= IdentityDocument.GetHashCode();
      if (IssuingCountry.Length != 0) hash ^= IssuingCountry.GetHashCode();
      if (Nationality.Length != 0) hash ^= Nationality.GetHashCode();
      if (DocumentNumber.Length != 0) hash ^= DocumentNumber.GetHashCode();
      if (dateOfBirth_ != null) hash ^= DateOfBirth.GetHashCode();
      if (Gender != global::PassKit.Grpc.Gender.NotKnown) hash ^= Gender.GetHashCode();
      if (issuedDate_ != null) hash ^= IssuedDate.GetHashCode();
      if (expiryDate_ != null) hash ^= ExpiryDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IdentityDocument != global::PassKit.Grpc.Flights.IdentityDocument.Passport) {
        output.WriteRawTag(8);
        output.WriteEnum((int) IdentityDocument);
      }
      if (IssuingCountry.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IssuingCountry);
      }
      if (Nationality.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Nationality);
      }
      if (DocumentNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DocumentNumber);
      }
      if (dateOfBirth_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DateOfBirth);
      }
      if (Gender != global::PassKit.Grpc.Gender.NotKnown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Gender);
      }
      if (issuedDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(IssuedDate);
      }
      if (expiryDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ExpiryDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IdentityDocument != global::PassKit.Grpc.Flights.IdentityDocument.Passport) {
        output.WriteRawTag(8);
        output.WriteEnum((int) IdentityDocument);
      }
      if (IssuingCountry.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IssuingCountry);
      }
      if (Nationality.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Nationality);
      }
      if (DocumentNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DocumentNumber);
      }
      if (dateOfBirth_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DateOfBirth);
      }
      if (Gender != global::PassKit.Grpc.Gender.NotKnown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Gender);
      }
      if (issuedDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(IssuedDate);
      }
      if (expiryDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ExpiryDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IdentityDocument != global::PassKit.Grpc.Flights.IdentityDocument.Passport) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IdentityDocument);
      }
      if (IssuingCountry.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IssuingCountry);
      }
      if (Nationality.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nationality);
      }
      if (DocumentNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DocumentNumber);
      }
      if (dateOfBirth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateOfBirth);
      }
      if (Gender != global::PassKit.Grpc.Gender.NotKnown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Gender);
      }
      if (issuedDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IssuedDate);
      }
      if (expiryDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpiryDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IdentityDetails other) {
      if (other == null) {
        return;
      }
      if (other.IdentityDocument != global::PassKit.Grpc.Flights.IdentityDocument.Passport) {
        IdentityDocument = other.IdentityDocument;
      }
      if (other.IssuingCountry.Length != 0) {
        IssuingCountry = other.IssuingCountry;
      }
      if (other.Nationality.Length != 0) {
        Nationality = other.Nationality;
      }
      if (other.DocumentNumber.Length != 0) {
        DocumentNumber = other.DocumentNumber;
      }
      if (other.dateOfBirth_ != null) {
        if (dateOfBirth_ == null) {
          DateOfBirth = new global::PassKit.Grpc.Date();
        }
        DateOfBirth.MergeFrom(other.DateOfBirth);
      }
      if (other.Gender != global::PassKit.Grpc.Gender.NotKnown) {
        Gender = other.Gender;
      }
      if (other.issuedDate_ != null) {
        if (issuedDate_ == null) {
          IssuedDate = new global::PassKit.Grpc.Date();
        }
        IssuedDate.MergeFrom(other.IssuedDate);
      }
      if (other.expiryDate_ != null) {
        if (expiryDate_ == null) {
          ExpiryDate = new global::PassKit.Grpc.Date();
        }
        ExpiryDate.MergeFrom(other.ExpiryDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdentityDocument = (global::PassKit.Grpc.Flights.IdentityDocument) input.ReadEnum();
            break;
          }
          case 18: {
            IssuingCountry = input.ReadString();
            break;
          }
          case 26: {
            Nationality = input.ReadString();
            break;
          }
          case 34: {
            DocumentNumber = input.ReadString();
            break;
          }
          case 42: {
            if (dateOfBirth_ == null) {
              DateOfBirth = new global::PassKit.Grpc.Date();
            }
            input.ReadMessage(DateOfBirth);
            break;
          }
          case 48: {
            Gender = (global::PassKit.Grpc.Gender) input.ReadEnum();
            break;
          }
          case 58: {
            if (issuedDate_ == null) {
              IssuedDate = new global::PassKit.Grpc.Date();
            }
            input.ReadMessage(IssuedDate);
            break;
          }
          case 66: {
            if (expiryDate_ == null) {
              ExpiryDate = new global::PassKit.Grpc.Date();
            }
            input.ReadMessage(ExpiryDate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IdentityDocument = (global::PassKit.Grpc.Flights.IdentityDocument) input.ReadEnum();
            break;
          }
          case 18: {
            IssuingCountry = input.ReadString();
            break;
          }
          case 26: {
            Nationality = input.ReadString();
            break;
          }
          case 34: {
            DocumentNumber = input.ReadString();
            break;
          }
          case 42: {
            if (dateOfBirth_ == null) {
              DateOfBirth = new global::PassKit.Grpc.Date();
            }
            input.ReadMessage(DateOfBirth);
            break;
          }
          case 48: {
            Gender = (global::PassKit.Grpc.Gender) input.ReadEnum();
            break;
          }
          case 58: {
            if (issuedDate_ == null) {
              IssuedDate = new global::PassKit.Grpc.Date();
            }
            input.ReadMessage(IssuedDate);
            break;
          }
          case 66: {
            if (expiryDate_ == null) {
              ExpiryDate = new global::PassKit.Grpc.Date();
            }
            input.ReadMessage(ExpiryDate);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Details of infant under 2 years not occupying a seat.
  /// </summary>
  public sealed partial class Infant : pb::IMessage<Infant>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Infant> _parser = new pb::MessageParser<Infant>(() => new Infant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Infant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.Flights.PassengerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Infant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Infant(Infant other) : this() {
      infantDetails_ = other.infantDetails_ != null ? other.infantDetails_.Clone() : null;
      identityDetails_ = other.identityDetails_ != null ? other.identityDetails_.Clone() : null;
      barcodePayload_ = other.barcodePayload_;
      conditionalItems_ = other.conditionalItems_ != null ? other.conditionalItems_.Clone() : null;
      barcodeAdditionalData_ = other.barcodeAdditionalData_;
      securityImage_ = other.securityImage_;
      privilegeImage_ = other.privilegeImage_;
      footerImage_ = other.footerImage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Infant Clone() {
      return new Infant(this);
    }

    /// <summary>Field number for the "infantDetails" field.</summary>
    public const int InfantDetailsFieldNumber = 1;
    private global::PassKit.Grpc.Person infantDetails_;
    /// <summary>
    /// Personal details of the infant.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Person InfantDetails {
      get { return infantDetails_; }
      set {
        infantDetails_ = value;
      }
    }

    /// <summary>Field number for the "identityDetails" field.</summary>
    public const int IdentityDetailsFieldNumber = 2;
    private global::PassKit.Grpc.Flights.IdentityDetails identityDetails_;
    /// <summary>
    /// Optional identity details, only required if need to be rendered on the pass, or for analytics purposes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Flights.IdentityDetails IdentityDetails {
      get { return identityDetails_; }
      set {
        identityDetails_ = value;
      }
    }

    /// <summary>Field number for the "barcodePayload" field.</summary>
    public const int BarcodePayloadFieldNumber = 3;
    private string barcodePayload_ = "";
    /// <summary>
    /// The barcode payload to be rendered on the infant boarding pass. If not provided, an IATA barcode will be compiled, based on the adult boarding pass barcode data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BarcodePayload {
      get { return barcodePayload_; }
      set {
        barcodePayload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "conditionalItems" field.</summary>
    public const int ConditionalItemsFieldNumber = 4;
    private global::PassKit.Grpc.Flights.ConditionalItems conditionalItems_;
    /// <summary>
    /// Optional conditional items for the infant barcode.  Not required if barcode payload is set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Flights.ConditionalItems ConditionalItems {
      get { return conditionalItems_; }
      set {
        conditionalItems_ = value;
      }
    }

    /// <summary>Field number for the "barcodeAdditionalData" field.</summary>
    public const int BarcodeAdditionalDataFieldNumber = 5;
    private string barcodeAdditionalData_ = "";
    /// <summary>
    /// Optional additional barcode data. If PassKit are generating barcodes, airline use data (IATA item 4) to be included in the infant barcode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BarcodeAdditionalData {
      get { return barcodeAdditionalData_; }
      set {
        barcodeAdditionalData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "securityImage" field.</summary>
    public const int SecurityImageFieldNumber = 6;
    private string securityImage_ = "";
    /// <summary>
    /// Security image id for display above the barcode on a Google Pay pass.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SecurityImage {
      get { return securityImage_; }
      set {
        securityImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "privilegeImage" field.</summary>
    public const int PrivilegeImageFieldNumber = 7;
    private string privilegeImage_ = "";
    /// <summary>
    /// Privilege image id for display above the barcode on a Google Pay pass.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PrivilegeImage {
      get { return privilegeImage_; }
      set {
        privilegeImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "footerImage" field.</summary>
    public const int FooterImageFieldNumber = 8;
    private string footerImage_ = "";
    /// <summary>
    /// Footer image id for display above the barcode on iOS devices.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FooterImage {
      get { return footerImage_; }
      set {
        footerImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Infant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Infant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InfantDetails, other.InfantDetails)) return false;
      if (!object.Equals(IdentityDetails, other.IdentityDetails)) return false;
      if (BarcodePayload != other.BarcodePayload) return false;
      if (!object.Equals(ConditionalItems, other.ConditionalItems)) return false;
      if (BarcodeAdditionalData != other.BarcodeAdditionalData) return false;
      if (SecurityImage != other.SecurityImage) return false;
      if (PrivilegeImage != other.PrivilegeImage) return false;
      if (FooterImage != other.FooterImage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (infantDetails_ != null) hash ^= InfantDetails.GetHashCode();
      if (identityDetails_ != null) hash ^= IdentityDetails.GetHashCode();
      if (BarcodePayload.Length != 0) hash ^= BarcodePayload.GetHashCode();
      if (conditionalItems_ != null) hash ^= ConditionalItems.GetHashCode();
      if (BarcodeAdditionalData.Length != 0) hash ^= BarcodeAdditionalData.GetHashCode();
      if (SecurityImage.Length != 0) hash ^= SecurityImage.GetHashCode();
      if (PrivilegeImage.Length != 0) hash ^= PrivilegeImage.GetHashCode();
      if (FooterImage.Length != 0) hash ^= FooterImage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (infantDetails_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InfantDetails);
      }
      if (identityDetails_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IdentityDetails);
      }
      if (BarcodePayload.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BarcodePayload);
      }
      if (conditionalItems_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ConditionalItems);
      }
      if (BarcodeAdditionalData.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BarcodeAdditionalData);
      }
      if (SecurityImage.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SecurityImage);
      }
      if (PrivilegeImage.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PrivilegeImage);
      }
      if (FooterImage.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(FooterImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (infantDetails_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InfantDetails);
      }
      if (identityDetails_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IdentityDetails);
      }
      if (BarcodePayload.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BarcodePayload);
      }
      if (conditionalItems_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ConditionalItems);
      }
      if (BarcodeAdditionalData.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BarcodeAdditionalData);
      }
      if (SecurityImage.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SecurityImage);
      }
      if (PrivilegeImage.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PrivilegeImage);
      }
      if (FooterImage.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(FooterImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (infantDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfantDetails);
      }
      if (identityDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdentityDetails);
      }
      if (BarcodePayload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BarcodePayload);
      }
      if (conditionalItems_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConditionalItems);
      }
      if (BarcodeAdditionalData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BarcodeAdditionalData);
      }
      if (SecurityImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecurityImage);
      }
      if (PrivilegeImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivilegeImage);
      }
      if (FooterImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FooterImage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Infant other) {
      if (other == null) {
        return;
      }
      if (other.infantDetails_ != null) {
        if (infantDetails_ == null) {
          InfantDetails = new global::PassKit.Grpc.Person();
        }
        InfantDetails.MergeFrom(other.InfantDetails);
      }
      if (other.identityDetails_ != null) {
        if (identityDetails_ == null) {
          IdentityDetails = new global::PassKit.Grpc.Flights.IdentityDetails();
        }
        IdentityDetails.MergeFrom(other.IdentityDetails);
      }
      if (other.BarcodePayload.Length != 0) {
        BarcodePayload = other.BarcodePayload;
      }
      if (other.conditionalItems_ != null) {
        if (conditionalItems_ == null) {
          ConditionalItems = new global::PassKit.Grpc.Flights.ConditionalItems();
        }
        ConditionalItems.MergeFrom(other.ConditionalItems);
      }
      if (other.BarcodeAdditionalData.Length != 0) {
        BarcodeAdditionalData = other.BarcodeAdditionalData;
      }
      if (other.SecurityImage.Length != 0) {
        SecurityImage = other.SecurityImage;
      }
      if (other.PrivilegeImage.Length != 0) {
        PrivilegeImage = other.PrivilegeImage;
      }
      if (other.FooterImage.Length != 0) {
        FooterImage = other.FooterImage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (infantDetails_ == null) {
              InfantDetails = new global::PassKit.Grpc.Person();
            }
            input.ReadMessage(InfantDetails);
            break;
          }
          case 18: {
            if (identityDetails_ == null) {
              IdentityDetails = new global::PassKit.Grpc.Flights.IdentityDetails();
            }
            input.ReadMessage(IdentityDetails);
            break;
          }
          case 26: {
            BarcodePayload = input.ReadString();
            break;
          }
          case 34: {
            if (conditionalItems_ == null) {
              ConditionalItems = new global::PassKit.Grpc.Flights.ConditionalItems();
            }
            input.ReadMessage(ConditionalItems);
            break;
          }
          case 42: {
            BarcodeAdditionalData = input.ReadString();
            break;
          }
          case 50: {
            SecurityImage = input.ReadString();
            break;
          }
          case 58: {
            PrivilegeImage = input.ReadString();
            break;
          }
          case 66: {
            FooterImage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (infantDetails_ == null) {
              InfantDetails = new global::PassKit.Grpc.Person();
            }
            input.ReadMessage(InfantDetails);
            break;
          }
          case 18: {
            if (identityDetails_ == null) {
              IdentityDetails = new global::PassKit.Grpc.Flights.IdentityDetails();
            }
            input.ReadMessage(IdentityDetails);
            break;
          }
          case 26: {
            BarcodePayload = input.ReadString();
            break;
          }
          case 34: {
            if (conditionalItems_ == null) {
              ConditionalItems = new global::PassKit.Grpc.Flights.ConditionalItems();
            }
            input.ReadMessage(ConditionalItems);
            break;
          }
          case 42: {
            BarcodeAdditionalData = input.ReadString();
            break;
          }
          case 50: {
            SecurityImage = input.ReadString();
            break;
          }
          case 58: {
            PrivilegeImage = input.ReadString();
            break;
          }
          case 66: {
            FooterImage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
