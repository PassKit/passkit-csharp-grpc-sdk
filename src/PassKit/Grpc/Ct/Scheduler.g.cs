// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ct/scheduler/scheduler.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PassKit.Grpc.Ct {

  /// <summary>Holder for reflection information generated from ct/scheduler/scheduler.proto</summary>
  public static partial class SchedulerReflection {

    #region Descriptor
    /// <summary>File descriptor for ct/scheduler/scheduler.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SchedulerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxjdC9zY2hlZHVsZXIvc2NoZWR1bGVyLnByb3RvEgJjdBoucHJvdG9jLWdl",
            "bi1vcGVuYXBpdjIvb3B0aW9ucy9hbm5vdGF0aW9ucy5wcm90bxofZ29vZ2xl",
            "L3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byKGBAoNU2NoZWR1bGluZ0pvYhIK",
            "CgJpZBgBIAEoCRITCgtqb2JGdW5jdGlvbhgCIAEoCRISCgpqb2JQYXlsb2Fk",
            "GAMgASgJEgwKBG5hbWUYBCABKAkSEwoLZGVzY3JpcHRpb24YBSABKAkSHgoI",
            "c2NoZWR1bGUYBiABKAsyDC5jdC5TY2hlZHVsZRIdCgZzdGF0dXMYByABKA4y",
            "DS5jdC5Kb2JTdGF0dXMSMwoPbmV4dFJ1bkRhdGV0aW1lGAggASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBIzCg9sYXN0UnVuRGF0ZXRpbWUYCSAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhwKBGxvZ3MYCiADKAsy",
            "Di5jdC5Kb2JIaXN0b3J5EisKB2NyZWF0ZWQYCyABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEisKB3VwZGF0ZWQYDCABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEioKBmV4cGlyeRgNIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXA6UJJBTQpLKg5TY2hlZHVsaW5nIEpvYjIZUmVjdXJz",
            "aXZlIG9yIG9uZS1vZmYgam9iLtIBC2pvYkZ1bmN0aW9u0gEEbmFtZdIBCHNj",
            "aGVkdWxlIpECCghTY2hlZHVsZRIQCghzY2hlZHVsZRgBIAEoCRIQCgh0aW1l",
            "em9uZRgCIAEoCRIsCghzdGFydHNBdBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASFQoLcmVwZWF0Q291bnQYDyABKBFIABIwCgpleHBpcnlE",
            "YXRlGBAgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAOmCSQV0K",
            "WyoIU2NoZWR1bGUyRFNldCBhIHNjaGVkdWxlIGZvciB0aGUgam9iLiBTZXQg",
            "cmVwZWF0Q291bnQgdG8gLTEgaWYgam9iIGlzIG9uZS1vZmYu0gEIc2NoZWR1",
            "bGVCCAoGZXhwaXJ5IvwBChVTY2hlZHVsaW5nSm9iUmVzcG9uc2USCgoCaWQY",
            "ASABKAkSHQoGc3RhdHVzGAIgASgOMg0uY3QuSm9iU3RhdHVzEjMKD25leHRS",
            "dW5EYXRldGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "KgoGZXhwaXJ5GAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcDpX",
            "kkFUClIqF1NjaGVkdWxpbmcgSm9iIFJlc3BvbnNlMjdBIHJlc3BvbnNlIG9i",
            "amVjdCBmb3IgY3JlYXRlIGFuZCB1cGRhdGUgc2NoZWR1bGluZyBqb2IuIo8C",
            "CgpKb2JIaXN0b3J5EgoKAmlkGAEgASgJEg0KBWpvYklkGAIgASgJEg8KB3N1",
            "Y2Nlc3MYAyABKAgSCwoDbG9nGAQgASgJEhIKCnN0YXR1c0NvZGUYBSABKA0S",
            "OAoUc2NoZWR1bGVkUnVuRGF0ZVRpbWUYBiABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEi8KC2NvbXBsZXRlZEF0GAcgASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLlRpbWVzdGFtcDpJkkFGCkQqC0pvYiBIaXN0b3J5MhlSZXN1bHRz",
            "IG9mIGV4ZWN1dGVkIGpvYnMu0gEFam9iSWTSAQNsb2fSAQtjb21wbGV0ZWRB",
            "dCrfAQoJSm9iU3RhdHVzEhMKD0pPQl9TVEFUVVNfTk9ORRAAEhYKEkpPQl9T",
            "VEFUVVNfQ1JFQVRFRBABEhQKEEpPQl9TVEFUVVNfUkVBRFkQAhIXChNKT0Jf",
            "U1RBVFVTX0lORkxJR0hUEAMSGAoUSk9CX1NUQVRVU19TVUNDRUVERUQQBBIV",
            "ChFKT0JfU1RBVFVTX0ZBSUxFRBAFEhUKEUpPQl9TVEFUVVNfUEFVU0VEEAYS",
            "FgoSSk9CX1NUQVRVU19FWFBJUkVEEAcSFgoSSk9CX1NUQVRVU19ERUxFVEVE",
            "EAhCTQoTY29tLnBhc3NraXQuZ3JwYy5jdFokc3Rhc2gucGFzc2tpdC5jb20v",
            "aW8vbW9kZWwvc2RrL2dvL2N0qgIPUGFzc0tpdC5HcnBjLkN0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PassKit.Grpc.Gateway.ProtocGenOpenapiv2.Options.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PassKit.Grpc.Ct.JobStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Ct.SchedulingJob), global::PassKit.Grpc.Ct.SchedulingJob.Parser, new[]{ "Id", "JobFunction", "JobPayload", "Name", "Description", "Schedule", "Status", "NextRunDatetime", "LastRunDatetime", "Logs", "Created", "Updated", "Expiry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Ct.Schedule), global::PassKit.Grpc.Ct.Schedule.Parser, new[]{ "Schedule_", "Timezone", "StartsAt", "RepeatCount", "ExpiryDate" }, new[]{ "Expiry" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Ct.SchedulingJobResponse), global::PassKit.Grpc.Ct.SchedulingJobResponse.Parser, new[]{ "Id", "Status", "NextRunDatetime", "Expiry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Ct.JobHistory), global::PassKit.Grpc.Ct.JobHistory.Parser, new[]{ "Id", "JobId", "Success", "Log", "StatusCode", "ScheduledRunDateTime", "CompletedAt" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum JobStatus {
    [pbr::OriginalName("JOB_STATUS_NONE")] None = 0,
    /// <summary>
    /// A job has been successfully created.
    /// </summary>
    [pbr::OriginalName("JOB_STATUS_CREATED")] Created = 1,
    /// <summary>
    /// A job has a next run datetime and in standby mode.
    /// </summary>
    [pbr::OriginalName("JOB_STATUS_READY")] Ready = 2,
    /// <summary>
    /// When a job is flagged with inflight, the job has been dispatched and in process.
    /// </summary>
    [pbr::OriginalName("JOB_STATUS_INFLIGHT")] Inflight = 3,
    /// <summary>
    /// A job has been completed and waiting to be assigned the next run datetime.
    /// </summary>
    [pbr::OriginalName("JOB_STATUS_SUCCEEDED")] Succeeded = 4,
    /// <summary>
    /// A job has been failed. The history logging is available for the details.
    /// </summary>
    [pbr::OriginalName("JOB_STATUS_FAILED")] Failed = 5,
    /// <summary>
    /// A job has been paused until resumed datetime or when resumed.
    /// </summary>
    [pbr::OriginalName("JOB_STATUS_PAUSED")] Paused = 6,
    /// <summary>
    /// A job has been expired and ready to be deleted. Expired jobs will be deleted.
    /// </summary>
    [pbr::OriginalName("JOB_STATUS_EXPIRED")] Expired = 7,
    /// <summary>
    /// A job has been deleted and the SchedulingJob record does not exist.
    /// </summary>
    [pbr::OriginalName("JOB_STATUS_DELETED")] Deleted = 8,
  }

  #endregion

  #region Messages
  public sealed partial class SchedulingJob : pb::IMessage<SchedulingJob>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SchedulingJob> _parser = new pb::MessageParser<SchedulingJob>(() => new SchedulingJob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SchedulingJob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.Ct.SchedulerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchedulingJob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchedulingJob(SchedulingJob other) : this() {
      id_ = other.id_;
      jobFunction_ = other.jobFunction_;
      jobPayload_ = other.jobPayload_;
      name_ = other.name_;
      description_ = other.description_;
      schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
      status_ = other.status_;
      nextRunDatetime_ = other.nextRunDatetime_ != null ? other.nextRunDatetime_.Clone() : null;
      lastRunDatetime_ = other.lastRunDatetime_ != null ? other.lastRunDatetime_.Clone() : null;
      logs_ = other.logs_.Clone();
      created_ = other.created_ != null ? other.created_.Clone() : null;
      updated_ = other.updated_ != null ? other.updated_.Clone() : null;
      expiry_ = other.expiry_ != null ? other.expiry_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchedulingJob Clone() {
      return new SchedulingJob(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Auto generated 22 char identifier. Read only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jobFunction" field.</summary>
    public const int JobFunctionFieldNumber = 2;
    private string jobFunction_ = "";
    /// <summary>
    /// HttpMethod and Endpoint with comma separation.
    /// Eg. POST,https://api.pub1.passkit.io/members/count/05QFES9HNRMZb1gwcsepww
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string JobFunction {
      get { return jobFunction_; }
      set {
        jobFunction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jobPayload" field.</summary>
    public const int JobPayloadFieldNumber = 3;
    private string jobPayload_ = "";
    /// <summary>
    /// Json string of the job function payload.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string JobPayload {
      get { return jobPayload_; }
      set {
        jobPayload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// Job name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// Job description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 6;
    private global::PassKit.Grpc.Ct.Schedule schedule_;
    /// <summary>
    /// Job schedule. You can set recursive or one-off job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Ct.Schedule Schedule {
      get { return schedule_; }
      set {
        schedule_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 7;
    private global::PassKit.Grpc.Ct.JobStatus status_ = global::PassKit.Grpc.Ct.JobStatus.None;
    /// <summary>
    /// Job status. Writable values are JOB_STATUS_READY and JOB_STATUS_PAUSED only. Default is JOB_STATUS_READY.
    /// Setting status=JOB_STATUS_PAUSED sets nextRunDatetime=null only when Schedule.StartsAt is not set.
    /// Status will be always JOB_STATUS_READY, if you set Schedule.StartsAt.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Ct.JobStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "nextRunDatetime" field.</summary>
    public const int NextRunDatetimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp nextRunDatetime_;
    /// <summary>
    /// Next scheduled run datetime. Read only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp NextRunDatetime {
      get { return nextRunDatetime_; }
      set {
        nextRunDatetime_ = value;
      }
    }

    /// <summary>Field number for the "lastRunDatetime" field.</summary>
    public const int LastRunDatetimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastRunDatetime_;
    /// <summary>
    /// The datetime when the job was executed last time. Read only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastRunDatetime {
      get { return lastRunDatetime_; }
      set {
        lastRunDatetime_ = value;
      }
    }

    /// <summary>Field number for the "logs" field.</summary>
    public const int LogsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::PassKit.Grpc.Ct.JobHistory> _repeated_logs_codec
        = pb::FieldCodec.ForMessage(82, global::PassKit.Grpc.Ct.JobHistory.Parser);
    private readonly pbc::RepeatedField<global::PassKit.Grpc.Ct.JobHistory> logs_ = new pbc::RepeatedField<global::PassKit.Grpc.Ct.JobHistory>();
    /// <summary>
    /// 5 latest logs of executed jobs. Read only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::PassKit.Grpc.Ct.JobHistory> Logs {
      get { return logs_; }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// Datetime the job was created. Read only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updated_;
    /// <summary>
    /// Datetime the job was last updated. Read only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    /// <summary>Field number for the "expiry" field.</summary>
    public const int ExpiryFieldNumber = 13;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiry_;
    /// <summary>
    /// Datetime when the job will for the last time and expires. Read only. Expiry setting is available in the Schedule field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Expiry {
      get { return expiry_; }
      set {
        expiry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SchedulingJob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SchedulingJob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (JobFunction != other.JobFunction) return false;
      if (JobPayload != other.JobPayload) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Schedule, other.Schedule)) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(NextRunDatetime, other.NextRunDatetime)) return false;
      if (!object.Equals(LastRunDatetime, other.LastRunDatetime)) return false;
      if(!logs_.Equals(other.logs_)) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (!object.Equals(Updated, other.Updated)) return false;
      if (!object.Equals(Expiry, other.Expiry)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (JobFunction.Length != 0) hash ^= JobFunction.GetHashCode();
      if (JobPayload.Length != 0) hash ^= JobPayload.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (schedule_ != null) hash ^= Schedule.GetHashCode();
      if (Status != global::PassKit.Grpc.Ct.JobStatus.None) hash ^= Status.GetHashCode();
      if (nextRunDatetime_ != null) hash ^= NextRunDatetime.GetHashCode();
      if (lastRunDatetime_ != null) hash ^= LastRunDatetime.GetHashCode();
      hash ^= logs_.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (updated_ != null) hash ^= Updated.GetHashCode();
      if (expiry_ != null) hash ^= Expiry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (JobFunction.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JobFunction);
      }
      if (JobPayload.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(JobPayload);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (schedule_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Schedule);
      }
      if (Status != global::PassKit.Grpc.Ct.JobStatus.None) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Status);
      }
      if (nextRunDatetime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(NextRunDatetime);
      }
      if (lastRunDatetime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LastRunDatetime);
      }
      logs_.WriteTo(output, _repeated_logs_codec);
      if (created_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Updated);
      }
      if (expiry_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Expiry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (JobFunction.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JobFunction);
      }
      if (JobPayload.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(JobPayload);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (schedule_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Schedule);
      }
      if (Status != global::PassKit.Grpc.Ct.JobStatus.None) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Status);
      }
      if (nextRunDatetime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(NextRunDatetime);
      }
      if (lastRunDatetime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LastRunDatetime);
      }
      logs_.WriteTo(ref output, _repeated_logs_codec);
      if (created_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Updated);
      }
      if (expiry_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Expiry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (JobFunction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobFunction);
      }
      if (JobPayload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobPayload);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (schedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
      }
      if (Status != global::PassKit.Grpc.Ct.JobStatus.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (nextRunDatetime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextRunDatetime);
      }
      if (lastRunDatetime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastRunDatetime);
      }
      size += logs_.CalculateSize(_repeated_logs_codec);
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (updated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Updated);
      }
      if (expiry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expiry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SchedulingJob other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.JobFunction.Length != 0) {
        JobFunction = other.JobFunction;
      }
      if (other.JobPayload.Length != 0) {
        JobPayload = other.JobPayload;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.schedule_ != null) {
        if (schedule_ == null) {
          Schedule = new global::PassKit.Grpc.Ct.Schedule();
        }
        Schedule.MergeFrom(other.Schedule);
      }
      if (other.Status != global::PassKit.Grpc.Ct.JobStatus.None) {
        Status = other.Status;
      }
      if (other.nextRunDatetime_ != null) {
        if (nextRunDatetime_ == null) {
          NextRunDatetime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        NextRunDatetime.MergeFrom(other.NextRunDatetime);
      }
      if (other.lastRunDatetime_ != null) {
        if (lastRunDatetime_ == null) {
          LastRunDatetime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastRunDatetime.MergeFrom(other.LastRunDatetime);
      }
      logs_.Add(other.logs_);
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      if (other.updated_ != null) {
        if (updated_ == null) {
          Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Updated.MergeFrom(other.Updated);
      }
      if (other.expiry_ != null) {
        if (expiry_ == null) {
          Expiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Expiry.MergeFrom(other.Expiry);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            JobFunction = input.ReadString();
            break;
          }
          case 26: {
            JobPayload = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            if (schedule_ == null) {
              Schedule = new global::PassKit.Grpc.Ct.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
          case 56: {
            Status = (global::PassKit.Grpc.Ct.JobStatus) input.ReadEnum();
            break;
          }
          case 66: {
            if (nextRunDatetime_ == null) {
              NextRunDatetime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NextRunDatetime);
            break;
          }
          case 74: {
            if (lastRunDatetime_ == null) {
              LastRunDatetime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastRunDatetime);
            break;
          }
          case 82: {
            logs_.AddEntriesFrom(input, _repeated_logs_codec);
            break;
          }
          case 90: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 98: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
          case 106: {
            if (expiry_ == null) {
              Expiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Expiry);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            JobFunction = input.ReadString();
            break;
          }
          case 26: {
            JobPayload = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            if (schedule_ == null) {
              Schedule = new global::PassKit.Grpc.Ct.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
          case 56: {
            Status = (global::PassKit.Grpc.Ct.JobStatus) input.ReadEnum();
            break;
          }
          case 66: {
            if (nextRunDatetime_ == null) {
              NextRunDatetime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NextRunDatetime);
            break;
          }
          case 74: {
            if (lastRunDatetime_ == null) {
              LastRunDatetime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastRunDatetime);
            break;
          }
          case 82: {
            logs_.AddEntriesFrom(ref input, _repeated_logs_codec);
            break;
          }
          case 90: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 98: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
          case 106: {
            if (expiry_ == null) {
              Expiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Expiry);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Schedule : pb::IMessage<Schedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Schedule> _parser = new pb::MessageParser<Schedule>(() => new Schedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Schedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.Ct.SchedulerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule(Schedule other) : this() {
      schedule_ = other.schedule_;
      timezone_ = other.timezone_;
      startsAt_ = other.startsAt_ != null ? other.startsAt_.Clone() : null;
      switch (other.ExpiryCase) {
        case ExpiryOneofCase.RepeatCount:
          RepeatCount = other.RepeatCount;
          break;
        case ExpiryOneofCase.ExpiryDate:
          ExpiryDate = other.ExpiryDate.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule Clone() {
      return new Schedule(this);
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int Schedule_FieldNumber = 1;
    private string schedule_ = "";
    /// <summary>
    /// Crontab schedule expression. e.g. '0 * * * *', '@hourly'
    /// For month end job, '@monthend' is available.
    /// To run a one-off job now, '@now' is available.
    /// Crontab generator tool https://crontab.guru
    /// Reference https://en.wikipedia.org/wiki/Cron
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Schedule_ {
      get { return schedule_; }
      set {
        schedule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 2;
    private string timezone_ = "";
    /// <summary>
    /// Iana timezone. Default is UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Timezone {
      get { return timezone_; }
      set {
        timezone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "startsAt" field.</summary>
    public const int StartsAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startsAt_;
    /// <summary>
    /// Datetime to start the first job or resume the paused job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartsAt {
      get { return startsAt_; }
      set {
        startsAt_ = value;
      }
    }

    /// <summary>Field number for the "repeatCount" field.</summary>
    public const int RepeatCountFieldNumber = 15;
    /// <summary>
    /// Set repeat count to repeat the job for certain times (eg. 3 will repeat the job for 3 times).
    /// If job is one off, set -1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RepeatCount {
      get { return expiryCase_ == ExpiryOneofCase.RepeatCount ? (int) expiry_ : 0; }
      set {
        expiry_ = value;
        expiryCase_ = ExpiryOneofCase.RepeatCount;
      }
    }

    /// <summary>Field number for the "expiryDate" field.</summary>
    public const int ExpiryDateFieldNumber = 16;
    /// <summary>
    /// The date which job will be expired.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpiryDate {
      get { return expiryCase_ == ExpiryOneofCase.ExpiryDate ? (global::Google.Protobuf.WellKnownTypes.Timestamp) expiry_ : null; }
      set {
        expiry_ = value;
        expiryCase_ = value == null ? ExpiryOneofCase.None : ExpiryOneofCase.ExpiryDate;
      }
    }

    private object expiry_;
    /// <summary>Enum of possible cases for the "expiry" oneof.</summary>
    public enum ExpiryOneofCase {
      None = 0,
      RepeatCount = 15,
      ExpiryDate = 16,
    }
    private ExpiryOneofCase expiryCase_ = ExpiryOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExpiryOneofCase ExpiryCase {
      get { return expiryCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpiry() {
      expiryCase_ = ExpiryOneofCase.None;
      expiry_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Schedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Schedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Schedule_ != other.Schedule_) return false;
      if (Timezone != other.Timezone) return false;
      if (!object.Equals(StartsAt, other.StartsAt)) return false;
      if (RepeatCount != other.RepeatCount) return false;
      if (!object.Equals(ExpiryDate, other.ExpiryDate)) return false;
      if (ExpiryCase != other.ExpiryCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Schedule_.Length != 0) hash ^= Schedule_.GetHashCode();
      if (Timezone.Length != 0) hash ^= Timezone.GetHashCode();
      if (startsAt_ != null) hash ^= StartsAt.GetHashCode();
      if (expiryCase_ == ExpiryOneofCase.RepeatCount) hash ^= RepeatCount.GetHashCode();
      if (expiryCase_ == ExpiryOneofCase.ExpiryDate) hash ^= ExpiryDate.GetHashCode();
      hash ^= (int) expiryCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Schedule_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Schedule_);
      }
      if (Timezone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Timezone);
      }
      if (startsAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartsAt);
      }
      if (expiryCase_ == ExpiryOneofCase.RepeatCount) {
        output.WriteRawTag(120);
        output.WriteSInt32(RepeatCount);
      }
      if (expiryCase_ == ExpiryOneofCase.ExpiryDate) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ExpiryDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Schedule_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Schedule_);
      }
      if (Timezone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Timezone);
      }
      if (startsAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartsAt);
      }
      if (expiryCase_ == ExpiryOneofCase.RepeatCount) {
        output.WriteRawTag(120);
        output.WriteSInt32(RepeatCount);
      }
      if (expiryCase_ == ExpiryOneofCase.ExpiryDate) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ExpiryDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Schedule_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Schedule_);
      }
      if (Timezone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timezone);
      }
      if (startsAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartsAt);
      }
      if (expiryCase_ == ExpiryOneofCase.RepeatCount) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(RepeatCount);
      }
      if (expiryCase_ == ExpiryOneofCase.ExpiryDate) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExpiryDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Schedule other) {
      if (other == null) {
        return;
      }
      if (other.Schedule_.Length != 0) {
        Schedule_ = other.Schedule_;
      }
      if (other.Timezone.Length != 0) {
        Timezone = other.Timezone;
      }
      if (other.startsAt_ != null) {
        if (startsAt_ == null) {
          StartsAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartsAt.MergeFrom(other.StartsAt);
      }
      switch (other.ExpiryCase) {
        case ExpiryOneofCase.RepeatCount:
          RepeatCount = other.RepeatCount;
          break;
        case ExpiryOneofCase.ExpiryDate:
          if (ExpiryDate == null) {
            ExpiryDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          ExpiryDate.MergeFrom(other.ExpiryDate);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Schedule_ = input.ReadString();
            break;
          }
          case 18: {
            Timezone = input.ReadString();
            break;
          }
          case 26: {
            if (startsAt_ == null) {
              StartsAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartsAt);
            break;
          }
          case 120: {
            RepeatCount = input.ReadSInt32();
            break;
          }
          case 130: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (expiryCase_ == ExpiryOneofCase.ExpiryDate) {
              subBuilder.MergeFrom(ExpiryDate);
            }
            input.ReadMessage(subBuilder);
            ExpiryDate = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Schedule_ = input.ReadString();
            break;
          }
          case 18: {
            Timezone = input.ReadString();
            break;
          }
          case 26: {
            if (startsAt_ == null) {
              StartsAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartsAt);
            break;
          }
          case 120: {
            RepeatCount = input.ReadSInt32();
            break;
          }
          case 130: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (expiryCase_ == ExpiryOneofCase.ExpiryDate) {
              subBuilder.MergeFrom(ExpiryDate);
            }
            input.ReadMessage(subBuilder);
            ExpiryDate = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SchedulingJobResponse : pb::IMessage<SchedulingJobResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SchedulingJobResponse> _parser = new pb::MessageParser<SchedulingJobResponse>(() => new SchedulingJobResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SchedulingJobResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.Ct.SchedulerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchedulingJobResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchedulingJobResponse(SchedulingJobResponse other) : this() {
      id_ = other.id_;
      status_ = other.status_;
      nextRunDatetime_ = other.nextRunDatetime_ != null ? other.nextRunDatetime_.Clone() : null;
      expiry_ = other.expiry_ != null ? other.expiry_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SchedulingJobResponse Clone() {
      return new SchedulingJobResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Auto generated 22 char identifier. Read only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::PassKit.Grpc.Ct.JobStatus status_ = global::PassKit.Grpc.Ct.JobStatus.None;
    /// <summary>
    /// Job status. Writable values are JOB_STATUS_READY and JOB_STATUS_PAUSED only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Ct.JobStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "nextRunDatetime" field.</summary>
    public const int NextRunDatetimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp nextRunDatetime_;
    /// <summary>
    /// Next scheduled run datetime. Read only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp NextRunDatetime {
      get { return nextRunDatetime_; }
      set {
        nextRunDatetime_ = value;
      }
    }

    /// <summary>Field number for the "expiry" field.</summary>
    public const int ExpiryFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiry_;
    /// <summary>
    /// Datetime when the job will for the last time and expires. Read only. Expiry setting is available in the Schedule field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Expiry {
      get { return expiry_; }
      set {
        expiry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SchedulingJobResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SchedulingJobResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(NextRunDatetime, other.NextRunDatetime)) return false;
      if (!object.Equals(Expiry, other.Expiry)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Status != global::PassKit.Grpc.Ct.JobStatus.None) hash ^= Status.GetHashCode();
      if (nextRunDatetime_ != null) hash ^= NextRunDatetime.GetHashCode();
      if (expiry_ != null) hash ^= Expiry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Status != global::PassKit.Grpc.Ct.JobStatus.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (nextRunDatetime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NextRunDatetime);
      }
      if (expiry_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Expiry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Status != global::PassKit.Grpc.Ct.JobStatus.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (nextRunDatetime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NextRunDatetime);
      }
      if (expiry_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Expiry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Status != global::PassKit.Grpc.Ct.JobStatus.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (nextRunDatetime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextRunDatetime);
      }
      if (expiry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expiry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SchedulingJobResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Status != global::PassKit.Grpc.Ct.JobStatus.None) {
        Status = other.Status;
      }
      if (other.nextRunDatetime_ != null) {
        if (nextRunDatetime_ == null) {
          NextRunDatetime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        NextRunDatetime.MergeFrom(other.NextRunDatetime);
      }
      if (other.expiry_ != null) {
        if (expiry_ == null) {
          Expiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Expiry.MergeFrom(other.Expiry);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Status = (global::PassKit.Grpc.Ct.JobStatus) input.ReadEnum();
            break;
          }
          case 26: {
            if (nextRunDatetime_ == null) {
              NextRunDatetime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NextRunDatetime);
            break;
          }
          case 34: {
            if (expiry_ == null) {
              Expiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Expiry);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Status = (global::PassKit.Grpc.Ct.JobStatus) input.ReadEnum();
            break;
          }
          case 26: {
            if (nextRunDatetime_ == null) {
              NextRunDatetime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NextRunDatetime);
            break;
          }
          case 34: {
            if (expiry_ == null) {
              Expiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Expiry);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class JobHistory : pb::IMessage<JobHistory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JobHistory> _parser = new pb::MessageParser<JobHistory>(() => new JobHistory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JobHistory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.Ct.SchedulerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobHistory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobHistory(JobHistory other) : this() {
      id_ = other.id_;
      jobId_ = other.jobId_;
      success_ = other.success_;
      log_ = other.log_;
      statusCode_ = other.statusCode_;
      scheduledRunDateTime_ = other.scheduledRunDateTime_ != null ? other.scheduledRunDateTime_.Clone() : null;
      completedAt_ = other.completedAt_ != null ? other.completedAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobHistory Clone() {
      return new JobHistory(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Job history id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jobId" field.</summary>
    public const int JobIdFieldNumber = 2;
    private string jobId_ = "";
    /// <summary>
    /// Job ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string JobId {
      get { return jobId_; }
      set {
        jobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 3;
    private bool success_;
    /// <summary>
    /// True if the job has succeeded. False if the job has failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "log" field.</summary>
    public const int LogFieldNumber = 4;
    private string log_ = "";
    /// <summary>
    /// The job output log.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Log {
      get { return log_; }
      set {
        log_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "statusCode" field.</summary>
    public const int StatusCodeFieldNumber = 5;
    private uint statusCode_;
    /// <summary>
    /// The status code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "scheduledRunDateTime" field.</summary>
    public const int ScheduledRunDateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp scheduledRunDateTime_;
    /// <summary>
    /// Scheduled run datetime for the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ScheduledRunDateTime {
      get { return scheduledRunDateTime_; }
      set {
        scheduledRunDateTime_ = value;
      }
    }

    /// <summary>Field number for the "completedAt" field.</summary>
    public const int CompletedAtFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp completedAt_;
    /// <summary>
    /// Job completion datetime.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CompletedAt {
      get { return completedAt_; }
      set {
        completedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JobHistory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JobHistory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (JobId != other.JobId) return false;
      if (Success != other.Success) return false;
      if (Log != other.Log) return false;
      if (StatusCode != other.StatusCode) return false;
      if (!object.Equals(ScheduledRunDateTime, other.ScheduledRunDateTime)) return false;
      if (!object.Equals(CompletedAt, other.CompletedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (JobId.Length != 0) hash ^= JobId.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (Log.Length != 0) hash ^= Log.GetHashCode();
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (scheduledRunDateTime_ != null) hash ^= ScheduledRunDateTime.GetHashCode();
      if (completedAt_ != null) hash ^= CompletedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JobId);
      }
      if (Success != false) {
        output.WriteRawTag(24);
        output.WriteBool(Success);
      }
      if (Log.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Log);
      }
      if (StatusCode != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(StatusCode);
      }
      if (scheduledRunDateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ScheduledRunDateTime);
      }
      if (completedAt_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CompletedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (JobId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JobId);
      }
      if (Success != false) {
        output.WriteRawTag(24);
        output.WriteBool(Success);
      }
      if (Log.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Log);
      }
      if (StatusCode != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(StatusCode);
      }
      if (scheduledRunDateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ScheduledRunDateTime);
      }
      if (completedAt_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CompletedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (JobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobId);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (Log.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Log);
      }
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatusCode);
      }
      if (scheduledRunDateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledRunDateTime);
      }
      if (completedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompletedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JobHistory other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.JobId.Length != 0) {
        JobId = other.JobId;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.Log.Length != 0) {
        Log = other.Log;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.scheduledRunDateTime_ != null) {
        if (scheduledRunDateTime_ == null) {
          ScheduledRunDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ScheduledRunDateTime.MergeFrom(other.ScheduledRunDateTime);
      }
      if (other.completedAt_ != null) {
        if (completedAt_ == null) {
          CompletedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CompletedAt.MergeFrom(other.CompletedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            JobId = input.ReadString();
            break;
          }
          case 24: {
            Success = input.ReadBool();
            break;
          }
          case 34: {
            Log = input.ReadString();
            break;
          }
          case 40: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 50: {
            if (scheduledRunDateTime_ == null) {
              ScheduledRunDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledRunDateTime);
            break;
          }
          case 58: {
            if (completedAt_ == null) {
              CompletedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CompletedAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            JobId = input.ReadString();
            break;
          }
          case 24: {
            Success = input.ReadBool();
            break;
          }
          case 34: {
            Log = input.ReadString();
            break;
          }
          case 40: {
            StatusCode = input.ReadUInt32();
            break;
          }
          case 50: {
            if (scheduledRunDateTime_ == null) {
              ScheduledRunDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledRunDateTime);
            break;
          }
          case 58: {
            if (completedAt_ == null) {
              CompletedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CompletedAt);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
