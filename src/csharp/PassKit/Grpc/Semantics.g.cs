// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/common/semantics.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PassKit.Grpc {

  /// <summary>Holder for reflection information generated from io/common/semantics.proto</summary>
  public static partial class SemanticsReflection {

    #region Descriptor
    /// <summary>File descriptor for io/common/semantics.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SemanticsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chlpby9jb21tb24vc2VtYW50aWNzLnByb3RvEgJpbxofZ29vZ2xlL3Byb3Rv",
            "YnVmL3RpbWVzdGFtcC5wcm90bxocaW8vY29tbW9uL2xvY2FsaXphdGlvbi5w",
            "cm90byI+ChZTZW1hbnRpY0N1cnJlbmN5QW1vdW50Eg4KBmFtb3VudBgBIAEo",
            "AhIUCgxjdXJyZW5jeUNvZGUYAiABKAUiNwoQU2VtYW50aWNMb2NhdGlvbhIQ",
            "CghsYXRpdHVkZRgBIAEoARIRCglsb25naXR1ZGUYAiABKAEiqQEKElNlbWFu",
            "dGljUGVyc29uTmFtZRISCgpmYW1pbHlOYW1lGAEgASgJEhEKCWdpdmVuTmFt",
            "ZRgCIAEoCRISCgptaWRkbGVOYW1lGAMgASgJEhIKCm5hbWVQcmVmaXgYBCAB",
            "KAkSEgoKbmFtZVN1ZmZpeBgFIAEoCRIQCghuaWNrbmFtZRgGIAEoCRIeChZw",
            "aG9uZXRpY1JlcHJlc2VudGF0aW9uGAcgASgJIssBCgxTZW1hbnRpY1NlYXQS",
            "FwoPc2VhdERlc2NyaXB0aW9uGAEgASgJEhYKDnNlYXRJZGVudGlmaWVyGAIg",
            "ASgJEhIKCnNlYXROdW1iZXIYAyABKAkSDwoHc2VhdFJvdxgEIAEoCRITCgtz",
            "ZWF0U2VjdGlvbhgFIAEoCRIQCghzZWF0VHlwZRgGIAEoCRIYChBzZWF0U2Vj",
            "dGlvbkNvbG9yGAcgASgJEhEKCXNlYXRMZXZlbBgIIAEoCRIRCglzZWF0QWlz",
            "bGUYCSABKAkiNQoTU2VtYW50aWNXaWZpTmV0d29yaxIQCghwYXNzd29yZBgB",
            "IAEoCRIMCgRzc2lkGAIgASgJInIKFVNlbWFudGljRXZlbnREYXRlSW5mbxIo",
            "CgRkYXRlGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIcChRp",
            "Z25vcmVUaW1lQ29tcG9uZW50cxgCIAEoCBIRCgl0aW1lX3pvbmUYAyABKAki",
            "tg4KEUV2ZW50U2VtYW50aWNUYWdzEhEKCWFydGlzdElkcxgBIAMoCRIcChRh",
            "d2F5VGVhbUFiYnJldmlhdGlvbhgCIAEoCRI6Ch1sb2NhbGl6ZWRBd2F5VGVh",
            "bUFiYnJldmlhdGlvbhgDIAEoCzITLmlvLkxvY2FsaXplZFN0cmluZxIYChBh",
            "d2F5VGVhbUxvY2F0aW9uGAQgASgJEjYKGWxvY2FsaXplZEF3YXlUZWFtTG9j",
            "YXRpb24YBSABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcSFAoMYXdheVRlYW1O",
            "YW1lGAYgASgJEjIKFWxvY2FsaXplZEF3YXlUZWFtTmFtZRgHIAEoCzITLmlv",
            "LkxvY2FsaXplZFN0cmluZxIwCgxldmVudEVuZERhdGUYCCABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wEhEKCWV2ZW50TmFtZRgJIAEoCRIvChJs",
            "b2NhbGl6ZWRFdmVudE5hbWUYCiABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcS",
            "MgoOZXZlbnRTdGFydERhdGUYCyABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wEg0KBWdlbnJlGAwgASgJEisKDmxvY2FsaXplZEdlbnJlGA0gASgL",
            "MhMuaW8uTG9jYWxpemVkU3RyaW5nEhwKFGhvbWVUZWFtQWJicmV2aWF0aW9u",
            "GA4gASgJEjoKHWxvY2FsaXplZEhvbWVUZWFtQWJicmV2aWF0aW9uGA8gASgL",
            "MhMuaW8uTG9jYWxpemVkU3RyaW5nEhgKEGhvbWVUZWFtTG9jYXRpb24YECAB",
            "KAkSNgoZbG9jYWxpemVkSG9tZVRlYW1Mb2NhdGlvbhgRIAEoCzITLmlvLkxv",
            "Y2FsaXplZFN0cmluZxIUCgxob21lVGVhbU5hbWUYEiABKAkSMgoVbG9jYWxp",
            "emVkSG9tZVRlYW1OYW1lGBMgASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEhoK",
            "EmxlYWd1ZUFiYnJldmlhdGlvbhgUIAEoCRI4Chtsb2NhbGl6ZWRMZWFndWVB",
            "YmJyZXZpYXRpb24YFSABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcSEgoKbGVh",
            "Z3VlTmFtZRgWIAEoCRIwChNsb2NhbGl6ZWRMZWFndWVOYW1lGBcgASgLMhMu",
            "aW8uTG9jYWxpemVkU3RyaW5nEhYKDnBlcmZvcm1lck5hbWVzGBggAygJEhgK",
            "EHNpbGVuY2VSZXF1ZXN0ZWQYGSABKAgSEQoJc3BvcnROYW1lGBogASgJEi8K",
            "EmxvY2FsaXplZFNwb3J0TmFtZRgbIAEoCzITLmlvLkxvY2FsaXplZFN0cmlu",
            "ZxIrCg12ZW51ZUxvY2F0aW9uGBwgASgLMhQuaW8uU2VtYW50aWNMb2NhdGlv",
            "bhIYChB2ZW51ZVBob25lTnVtYmVyGB0gASgJEhEKCXZlbnVlUm9vbRgeIAEo",
            "CRIvChJsb2NhbGl6ZWRWZW51ZVJvb20YHyABKAsyEy5pby5Mb2NhbGl6ZWRT",
            "dHJpbmcSKwoKd2lmaUFjY2VzcxggIAMoCzIXLmlvLlNlbWFudGljV2lmaU5l",
            "dHdvcmsSFwoPdmVudWVSZWdpb25OYW1lGCEgASgJEjUKGGxvY2FsaXplZFZl",
            "bnVlUmVnaW9uTmFtZRgiIAEoCzITLmlvLkxvY2FsaXplZFN0cmluZxIZChF0",
            "YWlsZ2F0aW5nQWxsb3dlZBgjIAEoCBIbChNlbnRyYW5jZURlc2NyaXB0aW9u",
            "GCQgASgJEjkKHGxvY2FsaXplZEVudHJhbmNlRGVzY3JpcHRpb24YJSABKAsy",
            "Ey5pby5Mb2NhbGl6ZWRTdHJpbmcSNgoSdmVudWVHYXRlc09wZW5EYXRlGCYg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI4ChR2ZW51ZUZhblpv",
            "bmVPcGVuRGF0ZRgnIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "PAoYdmVudWVQYXJraW5nTG90c09wZW5EYXRlGCggASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLlRpbWVzdGFtcBI6ChZ2ZW51ZUJveE9mZmljZU9wZW5EYXRlGCkg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIxCg12ZW51ZU9wZW5E",
            "YXRlGCogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIyCg52ZW51",
            "ZUNsb3NlRGF0ZRgrIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "EwoLcGxheWxpc3RJZHMYLCADKAkSEAoIYWxidW1JZHMYLSADKAkSNQoSZXZl",
            "bnRTdGFydERhdGVJbmZvGC4gASgLMhkuaW8uU2VtYW50aWNFdmVudERhdGVJ",
            "bmZvIuMtCgxTZW1hbnRpY1RhZ3MSFgoOYWRtaXNzaW9uTGV2ZWwYASABKAkS",
            "NAoXbG9jYWxpemVkQWRtaXNzaW9uTGV2ZWwYAiABKAsyEy5pby5Mb2NhbGl6",
            "ZWRTdHJpbmcSIgoaYWRtaXNzaW9uTGV2ZWxBYmJyZXZpYXRpb24YAyABKAkS",
            "QAojbG9jYWxpemVkQWRtaXNzaW9uTGV2ZWxBYmJyZXZpYXRpb24YBCABKAsy",
            "Ey5pby5Mb2NhbGl6ZWRTdHJpbmcSIgoaYWRkaXRpb25hbFRpY2tldEF0dHJp",
            "YnV0ZXMYBSABKAkSQAojbG9jYWxpemVkQWRkaXRpb25hbFRpY2tldEF0dHJp",
            "YnV0ZXMYBiABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcSEwoLYWlybGluZUNv",
            "ZGUYByABKAkSMQoUbG9jYWxpemVkQWlybGluZUNvZGUYCCABKAsyEy5pby5M",
            "b2NhbGl6ZWRTdHJpbmcSFAoMYXR0ZW5kZWVOYW1lGAkgASgJEjIKFWxvY2Fs",
            "aXplZEF0dGVuZGVlTmFtZRgKIAEoCzITLmlvLkxvY2FsaXplZFN0cmluZxIR",
            "CglhcnRpc3RJZHMYCyADKAkSHAoUYXdheVRlYW1BYmJyZXZpYXRpb24YDCAB",
            "KAkSOgodbG9jYWxpemVkQXdheVRlYW1BYmJyZXZpYXRpb24YDSABKAsyEy5p",
            "by5Mb2NhbGl6ZWRTdHJpbmcSGAoQYXdheVRlYW1Mb2NhdGlvbhgOIAEoCRI2",
            "Chlsb2NhbGl6ZWRBd2F5VGVhbUxvY2F0aW9uGA8gASgLMhMuaW8uTG9jYWxp",
            "emVkU3RyaW5nEhQKDGF3YXlUZWFtTmFtZRgQIAEoCRIyChVsb2NhbGl6ZWRB",
            "d2F5VGVhbU5hbWUYESABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcSKwoHYmFs",
            "YW5jZRgSIAEoCzIaLmlvLlNlbWFudGljQ3VycmVuY3lBbW91bnQSFQoNYm9h",
            "cmRpbmdHcm91cBgTIAEoCRIzChZsb2NhbGl6ZWRCb2FyZGluZ0dyb3VwGBQg",
            "ASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEh4KFmJvYXJkaW5nU2VxdWVuY2VO",
            "dW1iZXIYFSABKAkSEQoJY2FyTnVtYmVyGBYgASgJEi8KEmxvY2FsaXplZENh",
            "ck51bWJlchgXIAEoCzITLmlvLkxvY2FsaXplZFN0cmluZxIaChJjb25maXJt",
            "YXRpb25OdW1iZXIYGCABKAkSOAobbG9jYWxpemVkQ29uZmlybWF0aW9uTnVt",
            "YmVyGBkgASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEjYKEmN1cnJlbnRBcnJp",
            "dmFsRGF0ZRgaIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNwoT",
            "Y3VycmVudEJvYXJkaW5nRGF0ZRgbIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXASOAoUY3VycmVudERlcGFydHVyZURhdGUYHCABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wEhwKFGRlcGFydHVyZUFpcnBvcnRDb2Rl",
            "GB0gASgJEjoKHWxvY2FsaXplZERlcGFydHVyZUFpcnBvcnRDb2RlGB4gASgL",
            "MhMuaW8uTG9jYWxpemVkU3RyaW5nEhwKFGRlcGFydHVyZUFpcnBvcnROYW1l",
            "GB8gASgJEjoKHWxvY2FsaXplZERlcGFydHVyZUFpcnBvcnROYW1lGCAgASgL",
            "MhMuaW8uTG9jYWxpemVkU3RyaW5nEhUKDWRlcGFydHVyZUdhdGUYISABKAkS",
            "MwoWbG9jYWxpemVkRGVwYXJ0dXJlR2F0ZRgiIAEoCzITLmlvLkxvY2FsaXpl",
            "ZFN0cmluZxIZChFkZXBhcnR1cmVMb2NhdGlvbhgjIAEoCRI3Chpsb2NhbGl6",
            "ZWREZXBhcnR1cmVMb2NhdGlvbhgkIAEoCzITLmlvLkxvY2FsaXplZFN0cmlu",
            "ZxIkChxkZXBhcnR1cmVMb2NhdGlvbkRlc2NyaXB0aW9uGCUgASgJEkIKJWxv",
            "Y2FsaXplZERlcGFydHVyZUxvY2F0aW9uRGVzY3JpcHRpb24YJiABKAsyEy5p",
            "by5Mb2NhbGl6ZWRTdHJpbmcSGQoRZGVwYXJ0dXJlUGxhdGZvcm0YJyABKAkS",
            "NwoabG9jYWxpemVkRGVwYXJ0dXJlUGxhdGZvcm0YKCABKAsyEy5pby5Mb2Nh",
            "bGl6ZWRTdHJpbmcSHAoUZGVwYXJ0dXJlU3RhdGlvbk5hbWUYKSABKAkSOgod",
            "bG9jYWxpemVkRGVwYXJ0dXJlU3RhdGlvbk5hbWUYKiABKAsyEy5pby5Mb2Nh",
            "bGl6ZWRTdHJpbmcSGQoRZGVwYXJ0dXJlVGVybWluYWwYKyABKAkSNwoabG9j",
            "YWxpemVkRGVwYXJ0dXJlVGVybWluYWwYLCABKAsyEy5pby5Mb2NhbGl6ZWRT",
            "dHJpbmcSHgoWZGVzdGluYXRpb25BaXJwb3J0Q29kZRgtIAEoCRI8Ch9sb2Nh",
            "bGl6ZWREZXN0aW5hdGlvbkFpcnBvcnRDb2RlGC4gASgLMhMuaW8uTG9jYWxp",
            "emVkU3RyaW5nEh4KFmRlc3RpbmF0aW9uQWlycG9ydE5hbWUYLyABKAkSPAof",
            "bG9jYWxpemVkRGVzdGluYXRpb25BaXJwb3J0TmFtZRgwIAEoCzITLmlvLkxv",
            "Y2FsaXplZFN0cmluZxIXCg9kZXN0aW5hdGlvbkdhdGUYMSABKAkSNQoYbG9j",
            "YWxpemVkRGVzdGluYXRpb25HYXRlGDIgASgLMhMuaW8uTG9jYWxpemVkU3Ry",
            "aW5nEhsKE2Rlc3RpbmF0aW9uTG9jYXRpb24YMyABKAkSOQocbG9jYWxpemVk",
            "RGVzdGluYXRpb25Mb2NhdGlvbhg0IAEoCzITLmlvLkxvY2FsaXplZFN0cmlu",
            "ZxImCh5kZXN0aW5hdGlvbkxvY2F0aW9uRGVzY3JpcHRpb24YNSABKAkSRAon",
            "bG9jYWxpemVkRGVzdGluYXRpb25Mb2NhdGlvbkRlc2NyaXB0aW9uGDYgASgL",
            "MhMuaW8uTG9jYWxpemVkU3RyaW5nEhsKE2Rlc3RpbmF0aW9uUGxhdGZvcm0Y",
            "NyABKAkSOQocbG9jYWxpemVkRGVzdGluYXRpb25QbGF0Zm9ybRg4IAEoCzIT",
            "LmlvLkxvY2FsaXplZFN0cmluZxIeChZkZXN0aW5hdGlvblN0YXRpb25OYW1l",
            "GDkgASgJEjwKH2xvY2FsaXplZERlc3RpbmF0aW9uU3RhdGlvbk5hbWUYOiAB",
            "KAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcSGwoTZGVzdGluYXRpb25UZXJtaW5h",
            "bBg7IAEoCRI5Chxsb2NhbGl6ZWREZXN0aW5hdGlvblRlcm1pbmFsGDwgASgL",
            "MhMuaW8uTG9jYWxpemVkU3RyaW5nEhAKCGR1cmF0aW9uGD0gASgEEjAKDGV2",
            "ZW50RW5kRGF0ZRg+IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "EQoJZXZlbnROYW1lGD8gASgJEi8KEmxvY2FsaXplZEV2ZW50TmFtZRhAIAEo",
            "CzITLmlvLkxvY2FsaXplZFN0cmluZxIyCg5ldmVudFN0YXJ0RGF0ZRhBIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNQoSZXZlbnRTdGFydERh",
            "dGVJbmZvGEIgASgLMhkuaW8uU2VtYW50aWNFdmVudERhdGVJbmZvEiAKCWV2",
            "ZW50VHlwZRhDIAEoDjINLmlvLkV2ZW50VHlwZRISCgpmbGlnaHRDb2RlGEQg",
            "ASgJEjAKE2xvY2FsaXplZEZsaWdodENvZGUYRSABKAsyEy5pby5Mb2NhbGl6",
            "ZWRTdHJpbmcSFAoMZmxpZ2h0TnVtYmVyGEYgASgNEg0KBWdlbnJlGEcgASgJ",
            "EisKDmxvY2FsaXplZEdlbnJlGEggASgLMhMuaW8uTG9jYWxpemVkU3RyaW5n",
            "EhwKFGhvbWVUZWFtQWJicmV2aWF0aW9uGEkgASgJEjoKHWxvY2FsaXplZEhv",
            "bWVUZWFtQWJicmV2aWF0aW9uGEogASgLMhMuaW8uTG9jYWxpemVkU3RyaW5n",
            "EhgKEGhvbWVUZWFtTG9jYXRpb24YSyABKAkSNgoZbG9jYWxpemVkSG9tZVRl",
            "YW1Mb2NhdGlvbhhMIAEoCzITLmlvLkxvY2FsaXplZFN0cmluZxIUCgxob21l",
            "VGVhbU5hbWUYTSABKAkSMgoVbG9jYWxpemVkSG9tZVRlYW1OYW1lGE4gASgL",
            "MhMuaW8uTG9jYWxpemVkU3RyaW5nEhoKEmxlYWd1ZUFiYnJldmlhdGlvbhhP",
            "IAEoCRI4Chtsb2NhbGl6ZWRMZWFndWVBYmJyZXZpYXRpb24YUCABKAsyEy5p",
            "by5Mb2NhbGl6ZWRTdHJpbmcSEgoKbGVhZ3VlTmFtZRhRIAEoCRIwChNsb2Nh",
            "bGl6ZWRMZWFndWVOYW1lGFIgASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEh0K",
            "FW1lbWJlcnNoaXBQcm9ncmFtTmFtZRhTIAEoCRI7Ch5sb2NhbGl6ZWRNZW1i",
            "ZXJzaGlwUHJvZ3JhbU5hbWUYVCABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcS",
            "HwoXbWVtYmVyc2hpcFByb2dyYW1OdW1iZXIYVSABKAkSNwoTb3JpZ2luYWxB",
            "cnJpdmFsRGF0ZRhWIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "OAoUb3JpZ2luYWxCb2FyZGluZ0RhdGUYVyABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEjkKFW9yaWdpbmFsRGVwYXJ0dXJlRGF0ZRhYIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLQoNcGFzc2VuZ2VyTmFtZRhZ",
            "IAEoCzIWLmlvLlNlbWFudGljUGVyc29uTmFtZRIWCg5wZXJmb3JtZXJOYW1l",
            "cxhaIAMoCRIWCg5wcmlvcml0eVN0YXR1cxhbIAEoCRI0Chdsb2NhbGl6ZWRQ",
            "cmlvcml0eVN0YXR1cxhcIAEoCzITLmlvLkxvY2FsaXplZFN0cmluZxIQCghh",
            "bGJ1bUlkcxhdIAMoCRITCgtwbGF5bGlzdElkcxheIAMoCRIfCgVzZWF0cxhf",
            "IAMoCzIQLmlvLlNlbWFudGljU2VhdBIZChFzZWN1cml0eVNjcmVlbmluZxhg",
            "IAEoCRI3Chpsb2NhbGl6ZWRTZWN1cml0eVNjcmVlbmluZxhhIAEoCzITLmlv",
            "LkxvY2FsaXplZFN0cmluZxIYChBzaWxlbmNlUmVxdWVzdGVkGGIgASgIEhEK",
            "CXNwb3J0TmFtZRhjIAEoCRIvChJsb2NhbGl6ZWRTcG9ydE5hbWUYZCABKAsy",
            "Ey5pby5Mb2NhbGl6ZWRTdHJpbmcSLgoKdG90YWxQcmljZRhlIAEoCzIaLmlv",
            "LlNlbWFudGljQ3VycmVuY3lBbW91bnQSFwoPdHJhbnNpdFByb3ZpZGVyGGYg",
            "ASgJEjUKGGxvY2FsaXplZFRyYW5zaXRQcm92aWRlchhnIAEoCzITLmlvLkxv",
            "Y2FsaXplZFN0cmluZxIVCg10cmFuc2l0U3RhdHVzGGggASgJEjMKFmxvY2Fs",
            "aXplZFRyYW5zaXRTdGF0dXMYaSABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcS",
            "GwoTdHJhbnNpdFN0YXR1c1JlYXNvbhhqIAEoCRI5Chxsb2NhbGl6ZWRUcmFu",
            "c2l0U3RhdHVzUmVhc29uGGsgASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEhMK",
            "C3ZlaGljbGVOYW1lGGwgASgJEjEKFGxvY2FsaXplZFZlaGljbGVOYW1lGG0g",
            "ASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEhUKDXZlaGljbGVOdW1iZXIYbiAB",
            "KAkSMwoWbG9jYWxpemVkVmVoaWNsZU51bWJlchhvIAEoCzITLmlvLkxvY2Fs",
            "aXplZFN0cmluZxITCgt2ZWhpY2xlVHlwZRhwIAEoCRIxChRsb2NhbGl6ZWRW",
            "ZWhpY2xlVHlwZRhxIAEoCzITLmlvLkxvY2FsaXplZFN0cmluZxI6ChZ2ZW51",
            "ZUJveE9mZmljZU9wZW5EYXRlGHIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBIyCg52ZW51ZUNsb3NlRGF0ZRhzIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXASNgoSdmVudWVEb29yc09wZW5EYXRlGHQgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIVCg12ZW51ZUVudHJhbmNlGHUg",
            "ASgJEjMKFmxvY2FsaXplZFZlbnVlRW50cmFuY2UYdiABKAsyEy5pby5Mb2Nh",
            "bGl6ZWRTdHJpbmcSKwoNdmVudWVMb2NhdGlvbhh3IAEoCzIULmlvLlNlbWFu",
            "dGljTG9jYXRpb24SEQoJdmVudWVOYW1lGHggASgJEi8KEmxvY2FsaXplZFZl",
            "bnVlTmFtZRh5IAEoCzITLmlvLkxvY2FsaXplZFN0cmluZxIZChF2ZW51ZVBo",
            "b25lX251bWJlchh6IAEoCRI2Chlsb2NhbGl6ZWRWZW51ZVBob25lTnVtYmVy",
            "GHsgASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEhcKD3ZlbnVlUmVnaW9uTmFt",
            "ZRh8IAEoCRI1Chhsb2NhbGl6ZWRWZW51ZVJlZ2lvbk5hbWUYfSABKAsyEy5p",
            "by5Mb2NhbGl6ZWRTdHJpbmcSEQoJdmVudWVSb29tGH4gASgJEi8KEmxvY2Fs",
            "aXplZFZlbnVlUm9vbRh/IAEoCzITLmlvLkxvY2FsaXplZFN0cmluZxIsCgp3",
            "aWZpQWNjZXNzGIABIAMoCzIXLmlvLlNlbWFudGljV2lmaU5ldHdvcmsSOQoU",
            "dmVudWVGYW5ab25lT3BlbkRhdGUYgQEgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBI3ChJ2ZW51ZUdhdGVzT3BlbkRhdGUYggEgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBI9Chh2ZW51ZVBhcmtpbmdMb3RzT3Bl",
            "bkRhdGUYgwEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIaChF2",
            "ZW51ZUVudHJhbmNlRG9vchiEASABKAkSOAoabG9jYWxpemVkVmVudWVFbnRy",
            "YW5jZURvb3IYhQEgASgLMhMuaW8uTG9jYWxpemVkU3RyaW5nEhoKEXZlbnVl",
            "RW50cmFuY2VHYXRlGIYBIAEoCRI4Chpsb2NhbGl6ZWRWZW51ZUVudHJhbmNl",
            "R2F0ZRiHASABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcSHAoTdmVudWVFbnRy",
            "YW5jZVBvcnRhbBiIASABKAkSOgocbG9jYWxpemVkVmVudWVFbnRyYW5jZVBv",
            "cnRhbBiJASABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcSHAoTZW50cmFuY2VE",
            "ZXNjcmlwdGlvbhiKASABKAkSOgocbG9jYWxpemVkRW50cmFuY2VEZXNjcmlw",
            "dGlvbhiLASABKAsyEy5pby5Mb2NhbGl6ZWRTdHJpbmcSGgoRdGFpbGdhdGlu",
            "Z0FsbG93ZWQYjAEgASgIKvYBCglFdmVudFR5cGUSEwoPRVZFTlRfVFlQRV9O",
            "T05FEAASFgoSRVZFTlRfVFlQRV9HRU5FUklDEAESFAoQRVZFTlRfVFlQRV9N",
            "T1ZJRRACEhkKFUVWRU5UX1RZUEVfQ09ORkVSRU5DRRADEhkKFUVWRU5UX1RZ",
            "UEVfQ09OVkVOVElPThAEEhcKE0VWRU5UX1RZUEVfV09SS1NIT1AQBRIfChtF",
            "VkVOVF9UWVBFX1NPQ0lBTF9HQVRIRVJJTkcQBhIVChFFVkVOVF9UWVBFX1NQ",
            "T1JUUxAHEh8KG0VWRU5UX1RZUEVfTElWRV9QRVJGT1JNQU5DRRAIQkcKEGNv",
            "bS5wYXNza2l0LmdycGNaJHN0YXNoLnBhc3NraXQuY29tL2lvL21vZGVsL3Nk",
            "ay9nby9pb6oCDFBhc3NLaXQuR3JwY2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::PassKit.Grpc.LocalizationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PassKit.Grpc.EventType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.SemanticCurrencyAmount), global::PassKit.Grpc.SemanticCurrencyAmount.Parser, new[]{ "Amount", "CurrencyCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.SemanticLocation), global::PassKit.Grpc.SemanticLocation.Parser, new[]{ "Latitude", "Longitude" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.SemanticPersonName), global::PassKit.Grpc.SemanticPersonName.Parser, new[]{ "FamilyName", "GivenName", "MiddleName", "NamePrefix", "NameSuffix", "Nickname", "PhoneticRepresentation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.SemanticSeat), global::PassKit.Grpc.SemanticSeat.Parser, new[]{ "SeatDescription", "SeatIdentifier", "SeatNumber", "SeatRow", "SeatSection", "SeatType", "SeatSectionColor", "SeatLevel", "SeatAisle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.SemanticWifiNetwork), global::PassKit.Grpc.SemanticWifiNetwork.Parser, new[]{ "Password", "Ssid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.SemanticEventDateInfo), global::PassKit.Grpc.SemanticEventDateInfo.Parser, new[]{ "Date", "IgnoreTimeComponents", "TimeZone" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.EventSemanticTags), global::PassKit.Grpc.EventSemanticTags.Parser, new[]{ "ArtistIds", "AwayTeamAbbreviation", "LocalizedAwayTeamAbbreviation", "AwayTeamLocation", "LocalizedAwayTeamLocation", "AwayTeamName", "LocalizedAwayTeamName", "EventEndDate", "EventName", "LocalizedEventName", "EventStartDate", "Genre", "LocalizedGenre", "HomeTeamAbbreviation", "LocalizedHomeTeamAbbreviation", "HomeTeamLocation", "LocalizedHomeTeamLocation", "HomeTeamName", "LocalizedHomeTeamName", "LeagueAbbreviation", "LocalizedLeagueAbbreviation", "LeagueName", "LocalizedLeagueName", "PerformerNames", "SilenceRequested", "SportName", "LocalizedSportName", "VenueLocation", "VenuePhoneNumber", "VenueRoom", "LocalizedVenueRoom", "WifiAccess", "VenueRegionName", "LocalizedVenueRegionName", "TailgatingAllowed", "EntranceDescription", "LocalizedEntranceDescription", "VenueGatesOpenDate", "VenueFanZoneOpenDate", "VenueParkingLotsOpenDate", "VenueBoxOfficeOpenDate", "VenueOpenDate", "VenueCloseDate", "PlaylistIds", "AlbumIds", "EventStartDateInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.SemanticTags), global::PassKit.Grpc.SemanticTags.Parser, new[]{ "AdmissionLevel", "LocalizedAdmissionLevel", "AdmissionLevelAbbreviation", "LocalizedAdmissionLevelAbbreviation", "AdditionalTicketAttributes", "LocalizedAdditionalTicketAttributes", "AirlineCode", "LocalizedAirlineCode", "AttendeeName", "LocalizedAttendeeName", "ArtistIds", "AwayTeamAbbreviation", "LocalizedAwayTeamAbbreviation", "AwayTeamLocation", "LocalizedAwayTeamLocation", "AwayTeamName", "LocalizedAwayTeamName", "Balance", "BoardingGroup", "LocalizedBoardingGroup", "BoardingSequenceNumber", "CarNumber", "LocalizedCarNumber", "ConfirmationNumber", "LocalizedConfirmationNumber", "CurrentArrivalDate", "CurrentBoardingDate", "CurrentDepartureDate", "DepartureAirportCode", "LocalizedDepartureAirportCode", "DepartureAirportName", "LocalizedDepartureAirportName", "DepartureGate", "LocalizedDepartureGate", "DepartureLocation", "LocalizedDepartureLocation", "DepartureLocationDescription", "LocalizedDepartureLocationDescription", "DeparturePlatform", "LocalizedDeparturePlatform", "DepartureStationName", "LocalizedDepartureStationName", "DepartureTerminal", "LocalizedDepartureTerminal", "DestinationAirportCode", "LocalizedDestinationAirportCode", "DestinationAirportName", "LocalizedDestinationAirportName", "DestinationGate", "LocalizedDestinationGate", "DestinationLocation", "LocalizedDestinationLocation", "DestinationLocationDescription", "LocalizedDestinationLocationDescription", "DestinationPlatform", "LocalizedDestinationPlatform", "DestinationStationName", "LocalizedDestinationStationName", "DestinationTerminal", "LocalizedDestinationTerminal", "Duration", "EventEndDate", "EventName", "LocalizedEventName", "EventStartDate", "EventStartDateInfo", "EventType", "FlightCode", "LocalizedFlightCode", "FlightNumber", "Genre", "LocalizedGenre", "HomeTeamAbbreviation", "LocalizedHomeTeamAbbreviation", "HomeTeamLocation", "LocalizedHomeTeamLocation", "HomeTeamName", "LocalizedHomeTeamName", "LeagueAbbreviation", "LocalizedLeagueAbbreviation", "LeagueName", "LocalizedLeagueName", "MembershipProgramName", "LocalizedMembershipProgramName", "MembershipProgramNumber", "OriginalArrivalDate", "OriginalBoardingDate", "OriginalDepartureDate", "PassengerName", "PerformerNames", "PriorityStatus", "LocalizedPriorityStatus", "AlbumIds", "PlaylistIds", "Seats", "SecurityScreening", "LocalizedSecurityScreening", "SilenceRequested", "SportName", "LocalizedSportName", "TotalPrice", "TransitProvider", "LocalizedTransitProvider", "TransitStatus", "LocalizedTransitStatus", "TransitStatusReason", "LocalizedTransitStatusReason", "VehicleName", "LocalizedVehicleName", "VehicleNumber", "LocalizedVehicleNumber", "VehicleType", "LocalizedVehicleType", "VenueBoxOfficeOpenDate", "VenueCloseDate", "VenueDoorsOpenDate", "VenueEntrance", "LocalizedVenueEntrance", "VenueLocation", "VenueName", "LocalizedVenueName", "VenuePhoneNumber", "LocalizedVenuePhoneNumber", "VenueRegionName", "LocalizedVenueRegionName", "VenueRoom", "LocalizedVenueRoom", "WifiAccess", "VenueFanZoneOpenDate", "VenueGatesOpenDate", "VenueParkingLotsOpenDate", "VenueEntranceDoor", "LocalizedVenueEntranceDoor", "VenueEntranceGate", "LocalizedVenueEntranceGate", "VenueEntrancePortal", "LocalizedVenueEntrancePortal", "EntranceDescription", "LocalizedEntranceDescription", "TailgatingAllowed" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Enumerates supported event types.
  /// </summary>
  public enum EventType {
    [pbr::OriginalName("EVENT_TYPE_NONE")] None = 0,
    [pbr::OriginalName("EVENT_TYPE_GENERIC")] Generic = 1,
    [pbr::OriginalName("EVENT_TYPE_MOVIE")] Movie = 2,
    [pbr::OriginalName("EVENT_TYPE_CONFERENCE")] Conference = 3,
    [pbr::OriginalName("EVENT_TYPE_CONVENTION")] Convention = 4,
    [pbr::OriginalName("EVENT_TYPE_WORKSHOP")] Workshop = 5,
    [pbr::OriginalName("EVENT_TYPE_SOCIAL_GATHERING")] SocialGathering = 6,
    [pbr::OriginalName("EVENT_TYPE_SPORTS")] Sports = 7,
    [pbr::OriginalName("EVENT_TYPE_LIVE_PERFORMANCE")] LivePerformance = 8,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Represents a currency amount with a numeric value and ISO currency code.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SemanticCurrencyAmount : pb::IMessage<SemanticCurrencyAmount>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SemanticCurrencyAmount> _parser = new pb::MessageParser<SemanticCurrencyAmount>(() => new SemanticCurrencyAmount());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SemanticCurrencyAmount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.SemanticsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticCurrencyAmount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticCurrencyAmount(SemanticCurrencyAmount other) : this() {
      amount_ = other.amount_;
      currencyCode_ = other.currencyCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticCurrencyAmount Clone() {
      return new SemanticCurrencyAmount(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private float amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 2;
    private int currencyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SemanticCurrencyAmount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SemanticCurrencyAmount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Amount, other.Amount)) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Amount != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Amount);
      if (CurrencyCode != 0) hash ^= CurrencyCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Amount != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Amount);
      }
      if (CurrencyCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrencyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Amount != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Amount);
      }
      if (CurrencyCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrencyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Amount != 0F) {
        size += 1 + 4;
      }
      if (CurrencyCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrencyCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SemanticCurrencyAmount other) {
      if (other == null) {
        return;
      }
      if (other.Amount != 0F) {
        Amount = other.Amount;
      }
      if (other.CurrencyCode != 0) {
        CurrencyCode = other.CurrencyCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Amount = input.ReadFloat();
            break;
          }
          case 16: {
            CurrencyCode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Amount = input.ReadFloat();
            break;
          }
          case 16: {
            CurrencyCode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a geographical location using latitude and longitude.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SemanticLocation : pb::IMessage<SemanticLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SemanticLocation> _parser = new pb::MessageParser<SemanticLocation>(() => new SemanticLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SemanticLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.SemanticsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticLocation(SemanticLocation other) : this() {
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticLocation Clone() {
      return new SemanticLocation(this);
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 1;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 2;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SemanticLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SemanticLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Latitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Longitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Latitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Longitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SemanticLocation other) {
      if (other == null) {
        return;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Latitude = input.ReadDouble();
            break;
          }
          case 17: {
            Longitude = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Latitude = input.ReadDouble();
            break;
          }
          case 17: {
            Longitude = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a person's full name and related phonetic details.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SemanticPersonName : pb::IMessage<SemanticPersonName>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SemanticPersonName> _parser = new pb::MessageParser<SemanticPersonName>(() => new SemanticPersonName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SemanticPersonName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.SemanticsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticPersonName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticPersonName(SemanticPersonName other) : this() {
      familyName_ = other.familyName_;
      givenName_ = other.givenName_;
      middleName_ = other.middleName_;
      namePrefix_ = other.namePrefix_;
      nameSuffix_ = other.nameSuffix_;
      nickname_ = other.nickname_;
      phoneticRepresentation_ = other.phoneticRepresentation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticPersonName Clone() {
      return new SemanticPersonName(this);
    }

    /// <summary>Field number for the "familyName" field.</summary>
    public const int FamilyNameFieldNumber = 1;
    private string familyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FamilyName {
      get { return familyName_; }
      set {
        familyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "givenName" field.</summary>
    public const int GivenNameFieldNumber = 2;
    private string givenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GivenName {
      get { return givenName_; }
      set {
        givenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "middleName" field.</summary>
    public const int MiddleNameFieldNumber = 3;
    private string middleName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MiddleName {
      get { return middleName_; }
      set {
        middleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "namePrefix" field.</summary>
    public const int NamePrefixFieldNumber = 4;
    private string namePrefix_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NamePrefix {
      get { return namePrefix_; }
      set {
        namePrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nameSuffix" field.</summary>
    public const int NameSuffixFieldNumber = 5;
    private string nameSuffix_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NameSuffix {
      get { return nameSuffix_; }
      set {
        nameSuffix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 6;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phoneticRepresentation" field.</summary>
    public const int PhoneticRepresentationFieldNumber = 7;
    private string phoneticRepresentation_ = "";
    /// <summary>
    /// The phonetic representation of the person’s name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PhoneticRepresentation {
      get { return phoneticRepresentation_; }
      set {
        phoneticRepresentation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SemanticPersonName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SemanticPersonName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FamilyName != other.FamilyName) return false;
      if (GivenName != other.GivenName) return false;
      if (MiddleName != other.MiddleName) return false;
      if (NamePrefix != other.NamePrefix) return false;
      if (NameSuffix != other.NameSuffix) return false;
      if (Nickname != other.Nickname) return false;
      if (PhoneticRepresentation != other.PhoneticRepresentation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FamilyName.Length != 0) hash ^= FamilyName.GetHashCode();
      if (GivenName.Length != 0) hash ^= GivenName.GetHashCode();
      if (MiddleName.Length != 0) hash ^= MiddleName.GetHashCode();
      if (NamePrefix.Length != 0) hash ^= NamePrefix.GetHashCode();
      if (NameSuffix.Length != 0) hash ^= NameSuffix.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (PhoneticRepresentation.Length != 0) hash ^= PhoneticRepresentation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FamilyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FamilyName);
      }
      if (GivenName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GivenName);
      }
      if (MiddleName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MiddleName);
      }
      if (NamePrefix.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NamePrefix);
      }
      if (NameSuffix.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NameSuffix);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Nickname);
      }
      if (PhoneticRepresentation.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PhoneticRepresentation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FamilyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FamilyName);
      }
      if (GivenName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GivenName);
      }
      if (MiddleName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MiddleName);
      }
      if (NamePrefix.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NamePrefix);
      }
      if (NameSuffix.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NameSuffix);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Nickname);
      }
      if (PhoneticRepresentation.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PhoneticRepresentation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FamilyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FamilyName);
      }
      if (GivenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GivenName);
      }
      if (MiddleName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MiddleName);
      }
      if (NamePrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NamePrefix);
      }
      if (NameSuffix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameSuffix);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (PhoneticRepresentation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneticRepresentation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SemanticPersonName other) {
      if (other == null) {
        return;
      }
      if (other.FamilyName.Length != 0) {
        FamilyName = other.FamilyName;
      }
      if (other.GivenName.Length != 0) {
        GivenName = other.GivenName;
      }
      if (other.MiddleName.Length != 0) {
        MiddleName = other.MiddleName;
      }
      if (other.NamePrefix.Length != 0) {
        NamePrefix = other.NamePrefix;
      }
      if (other.NameSuffix.Length != 0) {
        NameSuffix = other.NameSuffix;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.PhoneticRepresentation.Length != 0) {
        PhoneticRepresentation = other.PhoneticRepresentation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FamilyName = input.ReadString();
            break;
          }
          case 18: {
            GivenName = input.ReadString();
            break;
          }
          case 26: {
            MiddleName = input.ReadString();
            break;
          }
          case 34: {
            NamePrefix = input.ReadString();
            break;
          }
          case 42: {
            NameSuffix = input.ReadString();
            break;
          }
          case 50: {
            Nickname = input.ReadString();
            break;
          }
          case 58: {
            PhoneticRepresentation = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FamilyName = input.ReadString();
            break;
          }
          case 18: {
            GivenName = input.ReadString();
            break;
          }
          case 26: {
            MiddleName = input.ReadString();
            break;
          }
          case 34: {
            NamePrefix = input.ReadString();
            break;
          }
          case 42: {
            NameSuffix = input.ReadString();
            break;
          }
          case 50: {
            Nickname = input.ReadString();
            break;
          }
          case 58: {
            PhoneticRepresentation = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Seat assignment and related metadata for event or transportation.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SemanticSeat : pb::IMessage<SemanticSeat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SemanticSeat> _parser = new pb::MessageParser<SemanticSeat>(() => new SemanticSeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SemanticSeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.SemanticsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticSeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticSeat(SemanticSeat other) : this() {
      seatDescription_ = other.seatDescription_;
      seatIdentifier_ = other.seatIdentifier_;
      seatNumber_ = other.seatNumber_;
      seatRow_ = other.seatRow_;
      seatSection_ = other.seatSection_;
      seatType_ = other.seatType_;
      seatSectionColor_ = other.seatSectionColor_;
      seatLevel_ = other.seatLevel_;
      seatAisle_ = other.seatAisle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticSeat Clone() {
      return new SemanticSeat(this);
    }

    /// <summary>Field number for the "seatDescription" field.</summary>
    public const int SeatDescriptionFieldNumber = 1;
    private string seatDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SeatDescription {
      get { return seatDescription_; }
      set {
        seatDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seatIdentifier" field.</summary>
    public const int SeatIdentifierFieldNumber = 2;
    private string seatIdentifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SeatIdentifier {
      get { return seatIdentifier_; }
      set {
        seatIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seatNumber" field.</summary>
    public const int SeatNumberFieldNumber = 3;
    private string seatNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SeatNumber {
      get { return seatNumber_; }
      set {
        seatNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seatRow" field.</summary>
    public const int SeatRowFieldNumber = 4;
    private string seatRow_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SeatRow {
      get { return seatRow_; }
      set {
        seatRow_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seatSection" field.</summary>
    public const int SeatSectionFieldNumber = 5;
    private string seatSection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SeatSection {
      get { return seatSection_; }
      set {
        seatSection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seatType" field.</summary>
    public const int SeatTypeFieldNumber = 6;
    private string seatType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SeatType {
      get { return seatType_; }
      set {
        seatType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seatSectionColor" field.</summary>
    public const int SeatSectionColorFieldNumber = 7;
    private string seatSectionColor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SeatSectionColor {
      get { return seatSectionColor_; }
      set {
        seatSectionColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seatLevel" field.</summary>
    public const int SeatLevelFieldNumber = 8;
    private string seatLevel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SeatLevel {
      get { return seatLevel_; }
      set {
        seatLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seatAisle" field.</summary>
    public const int SeatAisleFieldNumber = 9;
    private string seatAisle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SeatAisle {
      get { return seatAisle_; }
      set {
        seatAisle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SemanticSeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SemanticSeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SeatDescription != other.SeatDescription) return false;
      if (SeatIdentifier != other.SeatIdentifier) return false;
      if (SeatNumber != other.SeatNumber) return false;
      if (SeatRow != other.SeatRow) return false;
      if (SeatSection != other.SeatSection) return false;
      if (SeatType != other.SeatType) return false;
      if (SeatSectionColor != other.SeatSectionColor) return false;
      if (SeatLevel != other.SeatLevel) return false;
      if (SeatAisle != other.SeatAisle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SeatDescription.Length != 0) hash ^= SeatDescription.GetHashCode();
      if (SeatIdentifier.Length != 0) hash ^= SeatIdentifier.GetHashCode();
      if (SeatNumber.Length != 0) hash ^= SeatNumber.GetHashCode();
      if (SeatRow.Length != 0) hash ^= SeatRow.GetHashCode();
      if (SeatSection.Length != 0) hash ^= SeatSection.GetHashCode();
      if (SeatType.Length != 0) hash ^= SeatType.GetHashCode();
      if (SeatSectionColor.Length != 0) hash ^= SeatSectionColor.GetHashCode();
      if (SeatLevel.Length != 0) hash ^= SeatLevel.GetHashCode();
      if (SeatAisle.Length != 0) hash ^= SeatAisle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SeatDescription.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SeatDescription);
      }
      if (SeatIdentifier.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SeatIdentifier);
      }
      if (SeatNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SeatNumber);
      }
      if (SeatRow.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SeatRow);
      }
      if (SeatSection.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SeatSection);
      }
      if (SeatType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SeatType);
      }
      if (SeatSectionColor.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SeatSectionColor);
      }
      if (SeatLevel.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SeatLevel);
      }
      if (SeatAisle.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SeatAisle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SeatDescription.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SeatDescription);
      }
      if (SeatIdentifier.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SeatIdentifier);
      }
      if (SeatNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SeatNumber);
      }
      if (SeatRow.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SeatRow);
      }
      if (SeatSection.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SeatSection);
      }
      if (SeatType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SeatType);
      }
      if (SeatSectionColor.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SeatSectionColor);
      }
      if (SeatLevel.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SeatLevel);
      }
      if (SeatAisle.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SeatAisle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SeatDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatDescription);
      }
      if (SeatIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatIdentifier);
      }
      if (SeatNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatNumber);
      }
      if (SeatRow.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatRow);
      }
      if (SeatSection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatSection);
      }
      if (SeatType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatType);
      }
      if (SeatSectionColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatSectionColor);
      }
      if (SeatLevel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatLevel);
      }
      if (SeatAisle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatAisle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SemanticSeat other) {
      if (other == null) {
        return;
      }
      if (other.SeatDescription.Length != 0) {
        SeatDescription = other.SeatDescription;
      }
      if (other.SeatIdentifier.Length != 0) {
        SeatIdentifier = other.SeatIdentifier;
      }
      if (other.SeatNumber.Length != 0) {
        SeatNumber = other.SeatNumber;
      }
      if (other.SeatRow.Length != 0) {
        SeatRow = other.SeatRow;
      }
      if (other.SeatSection.Length != 0) {
        SeatSection = other.SeatSection;
      }
      if (other.SeatType.Length != 0) {
        SeatType = other.SeatType;
      }
      if (other.SeatSectionColor.Length != 0) {
        SeatSectionColor = other.SeatSectionColor;
      }
      if (other.SeatLevel.Length != 0) {
        SeatLevel = other.SeatLevel;
      }
      if (other.SeatAisle.Length != 0) {
        SeatAisle = other.SeatAisle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SeatDescription = input.ReadString();
            break;
          }
          case 18: {
            SeatIdentifier = input.ReadString();
            break;
          }
          case 26: {
            SeatNumber = input.ReadString();
            break;
          }
          case 34: {
            SeatRow = input.ReadString();
            break;
          }
          case 42: {
            SeatSection = input.ReadString();
            break;
          }
          case 50: {
            SeatType = input.ReadString();
            break;
          }
          case 58: {
            SeatSectionColor = input.ReadString();
            break;
          }
          case 66: {
            SeatLevel = input.ReadString();
            break;
          }
          case 74: {
            SeatAisle = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SeatDescription = input.ReadString();
            break;
          }
          case 18: {
            SeatIdentifier = input.ReadString();
            break;
          }
          case 26: {
            SeatNumber = input.ReadString();
            break;
          }
          case 34: {
            SeatRow = input.ReadString();
            break;
          }
          case 42: {
            SeatSection = input.ReadString();
            break;
          }
          case 50: {
            SeatType = input.ReadString();
            break;
          }
          case 58: {
            SeatSectionColor = input.ReadString();
            break;
          }
          case 66: {
            SeatLevel = input.ReadString();
            break;
          }
          case 74: {
            SeatAisle = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a WiFi network’s SSID and password.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SemanticWifiNetwork : pb::IMessage<SemanticWifiNetwork>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SemanticWifiNetwork> _parser = new pb::MessageParser<SemanticWifiNetwork>(() => new SemanticWifiNetwork());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SemanticWifiNetwork> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.SemanticsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticWifiNetwork() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticWifiNetwork(SemanticWifiNetwork other) : this() {
      password_ = other.password_;
      ssid_ = other.ssid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticWifiNetwork Clone() {
      return new SemanticWifiNetwork(this);
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 1;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ssid" field.</summary>
    public const int SsidFieldNumber = 2;
    private string ssid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ssid {
      get { return ssid_; }
      set {
        ssid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SemanticWifiNetwork);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SemanticWifiNetwork other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Password != other.Password) return false;
      if (Ssid != other.Ssid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Ssid.Length != 0) hash ^= Ssid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Password.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Password);
      }
      if (Ssid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ssid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Password.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Password);
      }
      if (Ssid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Ssid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Ssid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ssid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SemanticWifiNetwork other) {
      if (other == null) {
        return;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Ssid.Length != 0) {
        Ssid = other.Ssid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Password = input.ReadString();
            break;
          }
          case 18: {
            Ssid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Password = input.ReadString();
            break;
          }
          case 18: {
            Ssid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents event date information with optional time and timezone.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SemanticEventDateInfo : pb::IMessage<SemanticEventDateInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SemanticEventDateInfo> _parser = new pb::MessageParser<SemanticEventDateInfo>(() => new SemanticEventDateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SemanticEventDateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.SemanticsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticEventDateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticEventDateInfo(SemanticEventDateInfo other) : this() {
      date_ = other.date_ != null ? other.date_.Clone() : null;
      ignoreTimeComponents_ = other.ignoreTimeComponents_;
      timeZone_ = other.timeZone_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticEventDateInfo Clone() {
      return new SemanticEventDateInfo(this);
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp date_;
    /// <summary>
    /// Date and time of the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Date {
      get { return date_; }
      set {
        date_ = value;
      }
    }

    /// <summary>Field number for the "ignoreTimeComponents" field.</summary>
    public const int IgnoreTimeComponentsFieldNumber = 2;
    private bool ignoreTimeComponents_;
    /// <summary>
    /// Indicates whether the pass omit displaying the time label i.e. just show the date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IgnoreTimeComponents {
      get { return ignoreTimeComponents_; }
      set {
        ignoreTimeComponents_ = value;
      }
    }

    /// <summary>Field number for the "time_zone" field.</summary>
    public const int TimeZoneFieldNumber = 3;
    private string timeZone_ = "";
    /// <summary>
    /// The time zone in which the event takes place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimeZone {
      get { return timeZone_; }
      set {
        timeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SemanticEventDateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SemanticEventDateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Date, other.Date)) return false;
      if (IgnoreTimeComponents != other.IgnoreTimeComponents) return false;
      if (TimeZone != other.TimeZone) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (date_ != null) hash ^= Date.GetHashCode();
      if (IgnoreTimeComponents != false) hash ^= IgnoreTimeComponents.GetHashCode();
      if (TimeZone.Length != 0) hash ^= TimeZone.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (date_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Date);
      }
      if (IgnoreTimeComponents != false) {
        output.WriteRawTag(16);
        output.WriteBool(IgnoreTimeComponents);
      }
      if (TimeZone.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TimeZone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (date_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Date);
      }
      if (IgnoreTimeComponents != false) {
        output.WriteRawTag(16);
        output.WriteBool(IgnoreTimeComponents);
      }
      if (TimeZone.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TimeZone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (date_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
      }
      if (IgnoreTimeComponents != false) {
        size += 1 + 1;
      }
      if (TimeZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeZone);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SemanticEventDateInfo other) {
      if (other == null) {
        return;
      }
      if (other.date_ != null) {
        if (date_ == null) {
          Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Date.MergeFrom(other.Date);
      }
      if (other.IgnoreTimeComponents != false) {
        IgnoreTimeComponents = other.IgnoreTimeComponents;
      }
      if (other.TimeZone.Length != 0) {
        TimeZone = other.TimeZone;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (date_ == null) {
              Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Date);
            break;
          }
          case 16: {
            IgnoreTimeComponents = input.ReadBool();
            break;
          }
          case 26: {
            TimeZone = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (date_ == null) {
              Date = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Date);
            break;
          }
          case 16: {
            IgnoreTimeComponents = input.ReadBool();
            break;
          }
          case 26: {
            TimeZone = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used to display details such as teams, event timing, venue info, and artist IDs.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EventSemanticTags : pb::IMessage<EventSemanticTags>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventSemanticTags> _parser = new pb::MessageParser<EventSemanticTags>(() => new EventSemanticTags());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EventSemanticTags> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.SemanticsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventSemanticTags() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventSemanticTags(EventSemanticTags other) : this() {
      artistIds_ = other.artistIds_.Clone();
      awayTeamAbbreviation_ = other.awayTeamAbbreviation_;
      localizedAwayTeamAbbreviation_ = other.localizedAwayTeamAbbreviation_ != null ? other.localizedAwayTeamAbbreviation_.Clone() : null;
      awayTeamLocation_ = other.awayTeamLocation_;
      localizedAwayTeamLocation_ = other.localizedAwayTeamLocation_ != null ? other.localizedAwayTeamLocation_.Clone() : null;
      awayTeamName_ = other.awayTeamName_;
      localizedAwayTeamName_ = other.localizedAwayTeamName_ != null ? other.localizedAwayTeamName_.Clone() : null;
      eventEndDate_ = other.eventEndDate_ != null ? other.eventEndDate_.Clone() : null;
      eventName_ = other.eventName_;
      localizedEventName_ = other.localizedEventName_ != null ? other.localizedEventName_.Clone() : null;
      eventStartDate_ = other.eventStartDate_ != null ? other.eventStartDate_.Clone() : null;
      genre_ = other.genre_;
      localizedGenre_ = other.localizedGenre_ != null ? other.localizedGenre_.Clone() : null;
      homeTeamAbbreviation_ = other.homeTeamAbbreviation_;
      localizedHomeTeamAbbreviation_ = other.localizedHomeTeamAbbreviation_ != null ? other.localizedHomeTeamAbbreviation_.Clone() : null;
      homeTeamLocation_ = other.homeTeamLocation_;
      localizedHomeTeamLocation_ = other.localizedHomeTeamLocation_ != null ? other.localizedHomeTeamLocation_.Clone() : null;
      homeTeamName_ = other.homeTeamName_;
      localizedHomeTeamName_ = other.localizedHomeTeamName_ != null ? other.localizedHomeTeamName_.Clone() : null;
      leagueAbbreviation_ = other.leagueAbbreviation_;
      localizedLeagueAbbreviation_ = other.localizedLeagueAbbreviation_ != null ? other.localizedLeagueAbbreviation_.Clone() : null;
      leagueName_ = other.leagueName_;
      localizedLeagueName_ = other.localizedLeagueName_ != null ? other.localizedLeagueName_.Clone() : null;
      performerNames_ = other.performerNames_.Clone();
      silenceRequested_ = other.silenceRequested_;
      sportName_ = other.sportName_;
      localizedSportName_ = other.localizedSportName_ != null ? other.localizedSportName_.Clone() : null;
      venueLocation_ = other.venueLocation_ != null ? other.venueLocation_.Clone() : null;
      venuePhoneNumber_ = other.venuePhoneNumber_;
      venueRoom_ = other.venueRoom_;
      localizedVenueRoom_ = other.localizedVenueRoom_ != null ? other.localizedVenueRoom_.Clone() : null;
      wifiAccess_ = other.wifiAccess_.Clone();
      venueRegionName_ = other.venueRegionName_;
      localizedVenueRegionName_ = other.localizedVenueRegionName_ != null ? other.localizedVenueRegionName_.Clone() : null;
      tailgatingAllowed_ = other.tailgatingAllowed_;
      entranceDescription_ = other.entranceDescription_;
      localizedEntranceDescription_ = other.localizedEntranceDescription_ != null ? other.localizedEntranceDescription_.Clone() : null;
      venueGatesOpenDate_ = other.venueGatesOpenDate_ != null ? other.venueGatesOpenDate_.Clone() : null;
      venueFanZoneOpenDate_ = other.venueFanZoneOpenDate_ != null ? other.venueFanZoneOpenDate_.Clone() : null;
      venueParkingLotsOpenDate_ = other.venueParkingLotsOpenDate_ != null ? other.venueParkingLotsOpenDate_.Clone() : null;
      venueBoxOfficeOpenDate_ = other.venueBoxOfficeOpenDate_ != null ? other.venueBoxOfficeOpenDate_.Clone() : null;
      venueOpenDate_ = other.venueOpenDate_ != null ? other.venueOpenDate_.Clone() : null;
      venueCloseDate_ = other.venueCloseDate_ != null ? other.venueCloseDate_.Clone() : null;
      playlistIds_ = other.playlistIds_.Clone();
      albumIds_ = other.albumIds_.Clone();
      eventStartDateInfo_ = other.eventStartDateInfo_ != null ? other.eventStartDateInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventSemanticTags Clone() {
      return new EventSemanticTags(this);
    }

    /// <summary>Field number for the "artistIds" field.</summary>
    public const int ArtistIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_artistIds_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> artistIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The Apple ID(s) for the artists featuring in an event. If the ID is not known or provided for a given artist, the ID can be found in the iTunes share URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ArtistIds {
      get { return artistIds_; }
    }

    /// <summary>Field number for the "awayTeamAbbreviation" field.</summary>
    public const int AwayTeamAbbreviationFieldNumber = 2;
    private string awayTeamAbbreviation_ = "";
    /// <summary>
    /// On tickets leveraging the team sports template, the logo text is hardcoded to be HOME TEAM ABBREVIATION vs AWAY TEAM ABBREVIATION. The abbreviations are fetched from the homeTeamAbbreviation and awayTeamAbbreviation semantic tags respectively.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AwayTeamAbbreviation {
      get { return awayTeamAbbreviation_; }
      set {
        awayTeamAbbreviation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedAwayTeamAbbreviation" field.</summary>
    public const int LocalizedAwayTeamAbbreviationFieldNumber = 3;
    private global::PassKit.Grpc.LocalizedString localizedAwayTeamAbbreviation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedAwayTeamAbbreviation {
      get { return localizedAwayTeamAbbreviation_; }
      set {
        localizedAwayTeamAbbreviation_ = value;
      }
    }

    /// <summary>Field number for the "awayTeamLocation" field.</summary>
    public const int AwayTeamLocationFieldNumber = 4;
    private string awayTeamLocation_ = "";
    /// <summary>
    /// The home location of the away team. Use this key only for a sports event ticket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AwayTeamLocation {
      get { return awayTeamLocation_; }
      set {
        awayTeamLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedAwayTeamLocation" field.</summary>
    public const int LocalizedAwayTeamLocationFieldNumber = 5;
    private global::PassKit.Grpc.LocalizedString localizedAwayTeamLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedAwayTeamLocation {
      get { return localizedAwayTeamLocation_; }
      set {
        localizedAwayTeamLocation_ = value;
      }
    }

    /// <summary>Field number for the "awayTeamName" field.</summary>
    public const int AwayTeamNameFieldNumber = 6;
    private string awayTeamName_ = "";
    /// <summary>
    /// The name of the away team. Use this key only for a sports event ticket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AwayTeamName {
      get { return awayTeamName_; }
      set {
        awayTeamName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedAwayTeamName" field.</summary>
    public const int LocalizedAwayTeamNameFieldNumber = 7;
    private global::PassKit.Grpc.LocalizedString localizedAwayTeamName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedAwayTeamName {
      get { return localizedAwayTeamName_; }
      set {
        localizedAwayTeamName_ = value;
      }
    }

    /// <summary>Field number for the "eventEndDate" field.</summary>
    public const int EventEndDateFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp eventEndDate_;
    /// <summary>
    /// The date and time the event ends. Use this key for any type of event ticket. If not provided, the end date value from the event object will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EventEndDate {
      get { return eventEndDate_; }
      set {
        eventEndDate_ = value;
      }
    }

    /// <summary>Field number for the "eventName" field.</summary>
    public const int EventNameFieldNumber = 9;
    private string eventName_ = "";
    /// <summary>
    /// The full name of the event, such as the title of a movie. Use this key for any type of event ticket.  Use if the event name requires localization, otherwise the production name will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventName {
      get { return eventName_; }
      set {
        eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedEventName" field.</summary>
    public const int LocalizedEventNameFieldNumber = 10;
    private global::PassKit.Grpc.LocalizedString localizedEventName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedEventName {
      get { return localizedEventName_; }
      set {
        localizedEventName_ = value;
      }
    }

    /// <summary>Field number for the "eventStartDate" field.</summary>
    public const int EventStartDateFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp eventStartDate_;
    /// <summary>
    ///  // The date and time the event starts. Use this key for any type of event ticket. If not provided, the scheduled or actual start date value from the event object will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EventStartDate {
      get { return eventStartDate_; }
      set {
        eventStartDate_ = value;
      }
    }

    /// <summary>Field number for the "genre" field.</summary>
    public const int GenreFieldNumber = 12;
    private string genre_ = "";
    /// <summary>
    /// The genre of the performance, such as “Classical”. Use this key for any type of event ticket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Genre {
      get { return genre_; }
      set {
        genre_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedGenre" field.</summary>
    public const int LocalizedGenreFieldNumber = 13;
    private global::PassKit.Grpc.LocalizedString localizedGenre_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedGenre {
      get { return localizedGenre_; }
      set {
        localizedGenre_ = value;
      }
    }

    /// <summary>Field number for the "homeTeamAbbreviation" field.</summary>
    public const int HomeTeamAbbreviationFieldNumber = 14;
    private string homeTeamAbbreviation_ = "";
    /// <summary>
    /// On tickets leveraging the team sports template, the logo text is hardcoded to be HOME TEAM ABBREVIATION vs AWAY TEAM ABBREVIATION. The abbreviations are fetched from the homeTeamAbbreviation and awayTeamAbbreviation semantic tags respectively.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HomeTeamAbbreviation {
      get { return homeTeamAbbreviation_; }
      set {
        homeTeamAbbreviation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedHomeTeamAbbreviation" field.</summary>
    public const int LocalizedHomeTeamAbbreviationFieldNumber = 15;
    private global::PassKit.Grpc.LocalizedString localizedHomeTeamAbbreviation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedHomeTeamAbbreviation {
      get { return localizedHomeTeamAbbreviation_; }
      set {
        localizedHomeTeamAbbreviation_ = value;
      }
    }

    /// <summary>Field number for the "homeTeamLocation" field.</summary>
    public const int HomeTeamLocationFieldNumber = 16;
    private string homeTeamLocation_ = "";
    /// <summary>
    /// The home location of the home team. Use this key only for a sports event ticket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HomeTeamLocation {
      get { return homeTeamLocation_; }
      set {
        homeTeamLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedHomeTeamLocation" field.</summary>
    public const int LocalizedHomeTeamLocationFieldNumber = 17;
    private global::PassKit.Grpc.LocalizedString localizedHomeTeamLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedHomeTeamLocation {
      get { return localizedHomeTeamLocation_; }
      set {
        localizedHomeTeamLocation_ = value;
      }
    }

    /// <summary>Field number for the "homeTeamName" field.</summary>
    public const int HomeTeamNameFieldNumber = 18;
    private string homeTeamName_ = "";
    /// <summary>
    /// The name of the home team. Use this key only for a sports event ticket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HomeTeamName {
      get { return homeTeamName_; }
      set {
        homeTeamName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedHomeTeamName" field.</summary>
    public const int LocalizedHomeTeamNameFieldNumber = 19;
    private global::PassKit.Grpc.LocalizedString localizedHomeTeamName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedHomeTeamName {
      get { return localizedHomeTeamName_; }
      set {
        localizedHomeTeamName_ = value;
      }
    }

    /// <summary>Field number for the "leagueAbbreviation" field.</summary>
    public const int LeagueAbbreviationFieldNumber = 20;
    private string leagueAbbreviation_ = "";
    /// <summary>
    /// The abbreviated league name for a sports event. Use this key only for a sports event ticket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LeagueAbbreviation {
      get { return leagueAbbreviation_; }
      set {
        leagueAbbreviation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedLeagueAbbreviation" field.</summary>
    public const int LocalizedLeagueAbbreviationFieldNumber = 21;
    private global::PassKit.Grpc.LocalizedString localizedLeagueAbbreviation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedLeagueAbbreviation {
      get { return localizedLeagueAbbreviation_; }
      set {
        localizedLeagueAbbreviation_ = value;
      }
    }

    /// <summary>Field number for the "leagueName" field.</summary>
    public const int LeagueNameFieldNumber = 22;
    private string leagueName_ = "";
    /// <summary>
    /// The full league name for a sports event. Use this key only for a sports event ticket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LeagueName {
      get { return leagueName_; }
      set {
        leagueName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedLeagueName" field.</summary>
    public const int LocalizedLeagueNameFieldNumber = 23;
    private global::PassKit.Grpc.LocalizedString localizedLeagueName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedLeagueName {
      get { return localizedLeagueName_; }
      set {
        localizedLeagueName_ = value;
      }
    }

    /// <summary>Field number for the "performerNames" field.</summary>
    public const int PerformerNamesFieldNumber = 24;
    private static readonly pb::FieldCodec<string> _repeated_performerNames_codec
        = pb::FieldCodec.ForString(194);
    private readonly pbc::RepeatedField<string> performerNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// An array of the full names of the performers and opening acts at the event, in decreasing order of significance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PerformerNames {
      get { return performerNames_; }
    }

    /// <summary>Field number for the "silenceRequested" field.</summary>
    public const int SilenceRequestedFieldNumber = 25;
    private bool silenceRequested_;
    /// <summary>
    /// A Boolean value that determines whether the user’s device remains silent during an event or transit journey. The system may override the key and determine the length of the period of silence.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SilenceRequested {
      get { return silenceRequested_; }
      set {
        silenceRequested_ = value;
      }
    }

    /// <summary>Field number for the "sportName" field.</summary>
    public const int SportNameFieldNumber = 26;
    private string sportName_ = "";
    /// <summary>
    /// The commonly used name of the sport. Use this key only for a sports event ticket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SportName {
      get { return sportName_; }
      set {
        sportName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedSportName" field.</summary>
    public const int LocalizedSportNameFieldNumber = 27;
    private global::PassKit.Grpc.LocalizedString localizedSportName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedSportName {
      get { return localizedSportName_; }
      set {
        localizedSportName_ = value;
      }
    }

    /// <summary>Field number for the "venueLocation" field.</summary>
    public const int VenueLocationFieldNumber = 28;
    private global::PassKit.Grpc.SemanticLocation venueLocation_;
    /// <summary>
    /// An object that represents the geographic coordinates of the venue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.SemanticLocation VenueLocation {
      get { return venueLocation_; }
      set {
        venueLocation_ = value;
      }
    }

    /// <summary>Field number for the "venuePhoneNumber" field.</summary>
    public const int VenuePhoneNumberFieldNumber = 29;
    private string venuePhoneNumber_ = "";
    /// <summary>
    /// The phone number for enquiries about the venue’s ticketed event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenuePhoneNumber {
      get { return venuePhoneNumber_; }
      set {
        venuePhoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "venueRoom" field.</summary>
    public const int VenueRoomFieldNumber = 30;
    private string venueRoom_ = "";
    /// <summary>
    /// The full name of the room where the ticketed event is to take place. If a room is provided in the seat information, this value will be overwritten.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueRoom {
      get { return venueRoom_; }
      set {
        venueRoom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedVenueRoom" field.</summary>
    public const int LocalizedVenueRoomFieldNumber = 31;
    private global::PassKit.Grpc.LocalizedString localizedVenueRoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedVenueRoom {
      get { return localizedVenueRoom_; }
      set {
        localizedVenueRoom_ = value;
      }
    }

    /// <summary>Field number for the "wifiAccess" field.</summary>
    public const int WifiAccessFieldNumber = 32;
    private static readonly pb::FieldCodec<global::PassKit.Grpc.SemanticWifiNetwork> _repeated_wifiAccess_codec
        = pb::FieldCodec.ForMessage(258, global::PassKit.Grpc.SemanticWifiNetwork.Parser);
    private readonly pbc::RepeatedField<global::PassKit.Grpc.SemanticWifiNetwork> wifiAccess_ = new pbc::RepeatedField<global::PassKit.Grpc.SemanticWifiNetwork>();
    /// <summary>
    /// An array of objects that represent the WiFi networks associated with the event; for example, the network name and password associated with a developer conference.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::PassKit.Grpc.SemanticWifiNetwork> WifiAccess {
      get { return wifiAccess_; }
    }

    /// <summary>Field number for the "venueRegionName" field.</summary>
    public const int VenueRegionNameFieldNumber = 33;
    private string venueRegionName_ = "";
    /// <summary>
    /// The name of the city or hosting region of the venue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueRegionName {
      get { return venueRegionName_; }
      set {
        venueRegionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedVenueRegionName" field.</summary>
    public const int LocalizedVenueRegionNameFieldNumber = 34;
    private global::PassKit.Grpc.LocalizedString localizedVenueRegionName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedVenueRegionName {
      get { return localizedVenueRegionName_; }
      set {
        localizedVenueRegionName_ = value;
      }
    }

    /// <summary>Field number for the "tailgatingAllowed" field.</summary>
    public const int TailgatingAllowedFieldNumber = 35;
    private bool tailgatingAllowed_;
    /// <summary>
    /// Boolean value indicating that whether tailgating is allowed at the venue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TailgatingAllowed {
      get { return tailgatingAllowed_; }
      set {
        tailgatingAllowed_ = value;
      }
    }

    /// <summary>Field number for the "entranceDescription" field.</summary>
    public const int EntranceDescriptionFieldNumber = 36;
    private string entranceDescription_ = "";
    /// <summary>
    /// Details of the entrance if further information is required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntranceDescription {
      get { return entranceDescription_; }
      set {
        entranceDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedEntranceDescription" field.</summary>
    public const int LocalizedEntranceDescriptionFieldNumber = 37;
    private global::PassKit.Grpc.LocalizedString localizedEntranceDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedEntranceDescription {
      get { return localizedEntranceDescription_; }
      set {
        localizedEntranceDescription_ = value;
      }
    }

    /// <summary>Field number for the "venueGatesOpenDate" field.</summary>
    public const int VenueGatesOpenDateFieldNumber = 38;
    private global::Google.Protobuf.WellKnownTypes.Timestamp venueGatesOpenDate_;
    /// <summary>
    /// Time the gates to the venue open.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VenueGatesOpenDate {
      get { return venueGatesOpenDate_; }
      set {
        venueGatesOpenDate_ = value;
      }
    }

    /// <summary>Field number for the "venueFanZoneOpenDate" field.</summary>
    public const int VenueFanZoneOpenDateFieldNumber = 39;
    private global::Google.Protobuf.WellKnownTypes.Timestamp venueFanZoneOpenDate_;
    /// <summary>
    /// Time the fan zone opens.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VenueFanZoneOpenDate {
      get { return venueFanZoneOpenDate_; }
      set {
        venueFanZoneOpenDate_ = value;
      }
    }

    /// <summary>Field number for the "venueParkingLotsOpenDate" field.</summary>
    public const int VenueParkingLotsOpenDateFieldNumber = 40;
    private global::Google.Protobuf.WellKnownTypes.Timestamp venueParkingLotsOpenDate_;
    /// <summary>
    /// Time the parking lots open.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VenueParkingLotsOpenDate {
      get { return venueParkingLotsOpenDate_; }
      set {
        venueParkingLotsOpenDate_ = value;
      }
    }

    /// <summary>Field number for the "venueBoxOfficeOpenDate" field.</summary>
    public const int VenueBoxOfficeOpenDateFieldNumber = 41;
    private global::Google.Protobuf.WellKnownTypes.Timestamp venueBoxOfficeOpenDate_;
    /// <summary>
    /// Time when the box office opens.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VenueBoxOfficeOpenDate {
      get { return venueBoxOfficeOpenDate_; }
      set {
        venueBoxOfficeOpenDate_ = value;
      }
    }

    /// <summary>Field number for the "venueOpenDate" field.</summary>
    public const int VenueOpenDateFieldNumber = 42;
    private global::Google.Protobuf.WellKnownTypes.Timestamp venueOpenDate_;
    /// <summary>
    /// Time when the venue opens. Use if none of the more specific values above apply.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VenueOpenDate {
      get { return venueOpenDate_; }
      set {
        venueOpenDate_ = value;
      }
    }

    /// <summary>Field number for the "venueCloseDate" field.</summary>
    public const int VenueCloseDateFieldNumber = 43;
    private global::Google.Protobuf.WellKnownTypes.Timestamp venueCloseDate_;
    /// <summary>
    /// Time when the venue closes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VenueCloseDate {
      get { return venueCloseDate_; }
      set {
        venueCloseDate_ = value;
      }
    }

    /// <summary>Field number for the "playlistIds" field.</summary>
    public const int PlaylistIdsFieldNumber = 44;
    private static readonly pb::FieldCodec<string> _repeated_playlistIds_codec
        = pb::FieldCodec.ForString(354);
    private readonly pbc::RepeatedField<string> playlistIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The Apple ID(s) for playlists applicable to the event. If the ID is not known or provided for a given playlist, the ID can be found in the iTunes share URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PlaylistIds {
      get { return playlistIds_; }
    }

    /// <summary>Field number for the "albumIds" field.</summary>
    public const int AlbumIdsFieldNumber = 45;
    private static readonly pb::FieldCodec<string> _repeated_albumIds_codec
        = pb::FieldCodec.ForString(362);
    private readonly pbc::RepeatedField<string> albumIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The Apple ID(s) for the albums for artists featuring in an event. If the ID is not known or provided for a given album, the ID can be found in the iTunes share URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> AlbumIds {
      get { return albumIds_; }
    }

    /// <summary>Field number for the "eventStartDateInfo" field.</summary>
    public const int EventStartDateInfoFieldNumber = 46;
    private global::PassKit.Grpc.SemanticEventDateInfo eventStartDateInfo_;
    /// <summary>
    /// Additional information for the start date of the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.SemanticEventDateInfo EventStartDateInfo {
      get { return eventStartDateInfo_; }
      set {
        eventStartDateInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EventSemanticTags);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EventSemanticTags other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!artistIds_.Equals(other.artistIds_)) return false;
      if (AwayTeamAbbreviation != other.AwayTeamAbbreviation) return false;
      if (!object.Equals(LocalizedAwayTeamAbbreviation, other.LocalizedAwayTeamAbbreviation)) return false;
      if (AwayTeamLocation != other.AwayTeamLocation) return false;
      if (!object.Equals(LocalizedAwayTeamLocation, other.LocalizedAwayTeamLocation)) return false;
      if (AwayTeamName != other.AwayTeamName) return false;
      if (!object.Equals(LocalizedAwayTeamName, other.LocalizedAwayTeamName)) return false;
      if (!object.Equals(EventEndDate, other.EventEndDate)) return false;
      if (EventName != other.EventName) return false;
      if (!object.Equals(LocalizedEventName, other.LocalizedEventName)) return false;
      if (!object.Equals(EventStartDate, other.EventStartDate)) return false;
      if (Genre != other.Genre) return false;
      if (!object.Equals(LocalizedGenre, other.LocalizedGenre)) return false;
      if (HomeTeamAbbreviation != other.HomeTeamAbbreviation) return false;
      if (!object.Equals(LocalizedHomeTeamAbbreviation, other.LocalizedHomeTeamAbbreviation)) return false;
      if (HomeTeamLocation != other.HomeTeamLocation) return false;
      if (!object.Equals(LocalizedHomeTeamLocation, other.LocalizedHomeTeamLocation)) return false;
      if (HomeTeamName != other.HomeTeamName) return false;
      if (!object.Equals(LocalizedHomeTeamName, other.LocalizedHomeTeamName)) return false;
      if (LeagueAbbreviation != other.LeagueAbbreviation) return false;
      if (!object.Equals(LocalizedLeagueAbbreviation, other.LocalizedLeagueAbbreviation)) return false;
      if (LeagueName != other.LeagueName) return false;
      if (!object.Equals(LocalizedLeagueName, other.LocalizedLeagueName)) return false;
      if(!performerNames_.Equals(other.performerNames_)) return false;
      if (SilenceRequested != other.SilenceRequested) return false;
      if (SportName != other.SportName) return false;
      if (!object.Equals(LocalizedSportName, other.LocalizedSportName)) return false;
      if (!object.Equals(VenueLocation, other.VenueLocation)) return false;
      if (VenuePhoneNumber != other.VenuePhoneNumber) return false;
      if (VenueRoom != other.VenueRoom) return false;
      if (!object.Equals(LocalizedVenueRoom, other.LocalizedVenueRoom)) return false;
      if(!wifiAccess_.Equals(other.wifiAccess_)) return false;
      if (VenueRegionName != other.VenueRegionName) return false;
      if (!object.Equals(LocalizedVenueRegionName, other.LocalizedVenueRegionName)) return false;
      if (TailgatingAllowed != other.TailgatingAllowed) return false;
      if (EntranceDescription != other.EntranceDescription) return false;
      if (!object.Equals(LocalizedEntranceDescription, other.LocalizedEntranceDescription)) return false;
      if (!object.Equals(VenueGatesOpenDate, other.VenueGatesOpenDate)) return false;
      if (!object.Equals(VenueFanZoneOpenDate, other.VenueFanZoneOpenDate)) return false;
      if (!object.Equals(VenueParkingLotsOpenDate, other.VenueParkingLotsOpenDate)) return false;
      if (!object.Equals(VenueBoxOfficeOpenDate, other.VenueBoxOfficeOpenDate)) return false;
      if (!object.Equals(VenueOpenDate, other.VenueOpenDate)) return false;
      if (!object.Equals(VenueCloseDate, other.VenueCloseDate)) return false;
      if(!playlistIds_.Equals(other.playlistIds_)) return false;
      if(!albumIds_.Equals(other.albumIds_)) return false;
      if (!object.Equals(EventStartDateInfo, other.EventStartDateInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= artistIds_.GetHashCode();
      if (AwayTeamAbbreviation.Length != 0) hash ^= AwayTeamAbbreviation.GetHashCode();
      if (localizedAwayTeamAbbreviation_ != null) hash ^= LocalizedAwayTeamAbbreviation.GetHashCode();
      if (AwayTeamLocation.Length != 0) hash ^= AwayTeamLocation.GetHashCode();
      if (localizedAwayTeamLocation_ != null) hash ^= LocalizedAwayTeamLocation.GetHashCode();
      if (AwayTeamName.Length != 0) hash ^= AwayTeamName.GetHashCode();
      if (localizedAwayTeamName_ != null) hash ^= LocalizedAwayTeamName.GetHashCode();
      if (eventEndDate_ != null) hash ^= EventEndDate.GetHashCode();
      if (EventName.Length != 0) hash ^= EventName.GetHashCode();
      if (localizedEventName_ != null) hash ^= LocalizedEventName.GetHashCode();
      if (eventStartDate_ != null) hash ^= EventStartDate.GetHashCode();
      if (Genre.Length != 0) hash ^= Genre.GetHashCode();
      if (localizedGenre_ != null) hash ^= LocalizedGenre.GetHashCode();
      if (HomeTeamAbbreviation.Length != 0) hash ^= HomeTeamAbbreviation.GetHashCode();
      if (localizedHomeTeamAbbreviation_ != null) hash ^= LocalizedHomeTeamAbbreviation.GetHashCode();
      if (HomeTeamLocation.Length != 0) hash ^= HomeTeamLocation.GetHashCode();
      if (localizedHomeTeamLocation_ != null) hash ^= LocalizedHomeTeamLocation.GetHashCode();
      if (HomeTeamName.Length != 0) hash ^= HomeTeamName.GetHashCode();
      if (localizedHomeTeamName_ != null) hash ^= LocalizedHomeTeamName.GetHashCode();
      if (LeagueAbbreviation.Length != 0) hash ^= LeagueAbbreviation.GetHashCode();
      if (localizedLeagueAbbreviation_ != null) hash ^= LocalizedLeagueAbbreviation.GetHashCode();
      if (LeagueName.Length != 0) hash ^= LeagueName.GetHashCode();
      if (localizedLeagueName_ != null) hash ^= LocalizedLeagueName.GetHashCode();
      hash ^= performerNames_.GetHashCode();
      if (SilenceRequested != false) hash ^= SilenceRequested.GetHashCode();
      if (SportName.Length != 0) hash ^= SportName.GetHashCode();
      if (localizedSportName_ != null) hash ^= LocalizedSportName.GetHashCode();
      if (venueLocation_ != null) hash ^= VenueLocation.GetHashCode();
      if (VenuePhoneNumber.Length != 0) hash ^= VenuePhoneNumber.GetHashCode();
      if (VenueRoom.Length != 0) hash ^= VenueRoom.GetHashCode();
      if (localizedVenueRoom_ != null) hash ^= LocalizedVenueRoom.GetHashCode();
      hash ^= wifiAccess_.GetHashCode();
      if (VenueRegionName.Length != 0) hash ^= VenueRegionName.GetHashCode();
      if (localizedVenueRegionName_ != null) hash ^= LocalizedVenueRegionName.GetHashCode();
      if (TailgatingAllowed != false) hash ^= TailgatingAllowed.GetHashCode();
      if (EntranceDescription.Length != 0) hash ^= EntranceDescription.GetHashCode();
      if (localizedEntranceDescription_ != null) hash ^= LocalizedEntranceDescription.GetHashCode();
      if (venueGatesOpenDate_ != null) hash ^= VenueGatesOpenDate.GetHashCode();
      if (venueFanZoneOpenDate_ != null) hash ^= VenueFanZoneOpenDate.GetHashCode();
      if (venueParkingLotsOpenDate_ != null) hash ^= VenueParkingLotsOpenDate.GetHashCode();
      if (venueBoxOfficeOpenDate_ != null) hash ^= VenueBoxOfficeOpenDate.GetHashCode();
      if (venueOpenDate_ != null) hash ^= VenueOpenDate.GetHashCode();
      if (venueCloseDate_ != null) hash ^= VenueCloseDate.GetHashCode();
      hash ^= playlistIds_.GetHashCode();
      hash ^= albumIds_.GetHashCode();
      if (eventStartDateInfo_ != null) hash ^= EventStartDateInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      artistIds_.WriteTo(output, _repeated_artistIds_codec);
      if (AwayTeamAbbreviation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AwayTeamAbbreviation);
      }
      if (localizedAwayTeamAbbreviation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LocalizedAwayTeamAbbreviation);
      }
      if (AwayTeamLocation.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AwayTeamLocation);
      }
      if (localizedAwayTeamLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LocalizedAwayTeamLocation);
      }
      if (AwayTeamName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AwayTeamName);
      }
      if (localizedAwayTeamName_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LocalizedAwayTeamName);
      }
      if (eventEndDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EventEndDate);
      }
      if (EventName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(EventName);
      }
      if (localizedEventName_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LocalizedEventName);
      }
      if (eventStartDate_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(EventStartDate);
      }
      if (Genre.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Genre);
      }
      if (localizedGenre_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(LocalizedGenre);
      }
      if (HomeTeamAbbreviation.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(HomeTeamAbbreviation);
      }
      if (localizedHomeTeamAbbreviation_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(LocalizedHomeTeamAbbreviation);
      }
      if (HomeTeamLocation.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(HomeTeamLocation);
      }
      if (localizedHomeTeamLocation_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(LocalizedHomeTeamLocation);
      }
      if (HomeTeamName.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(HomeTeamName);
      }
      if (localizedHomeTeamName_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(LocalizedHomeTeamName);
      }
      if (LeagueAbbreviation.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(LeagueAbbreviation);
      }
      if (localizedLeagueAbbreviation_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(LocalizedLeagueAbbreviation);
      }
      if (LeagueName.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(LeagueName);
      }
      if (localizedLeagueName_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(LocalizedLeagueName);
      }
      performerNames_.WriteTo(output, _repeated_performerNames_codec);
      if (SilenceRequested != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(SilenceRequested);
      }
      if (SportName.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(SportName);
      }
      if (localizedSportName_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(LocalizedSportName);
      }
      if (venueLocation_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(VenueLocation);
      }
      if (VenuePhoneNumber.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(VenuePhoneNumber);
      }
      if (VenueRoom.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(VenueRoom);
      }
      if (localizedVenueRoom_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(LocalizedVenueRoom);
      }
      wifiAccess_.WriteTo(output, _repeated_wifiAccess_codec);
      if (VenueRegionName.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(VenueRegionName);
      }
      if (localizedVenueRegionName_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(LocalizedVenueRegionName);
      }
      if (TailgatingAllowed != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(TailgatingAllowed);
      }
      if (EntranceDescription.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(EntranceDescription);
      }
      if (localizedEntranceDescription_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(LocalizedEntranceDescription);
      }
      if (venueGatesOpenDate_ != null) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(VenueGatesOpenDate);
      }
      if (venueFanZoneOpenDate_ != null) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(VenueFanZoneOpenDate);
      }
      if (venueParkingLotsOpenDate_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(VenueParkingLotsOpenDate);
      }
      if (venueBoxOfficeOpenDate_ != null) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(VenueBoxOfficeOpenDate);
      }
      if (venueOpenDate_ != null) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(VenueOpenDate);
      }
      if (venueCloseDate_ != null) {
        output.WriteRawTag(218, 2);
        output.WriteMessage(VenueCloseDate);
      }
      playlistIds_.WriteTo(output, _repeated_playlistIds_codec);
      albumIds_.WriteTo(output, _repeated_albumIds_codec);
      if (eventStartDateInfo_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(EventStartDateInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      artistIds_.WriteTo(ref output, _repeated_artistIds_codec);
      if (AwayTeamAbbreviation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AwayTeamAbbreviation);
      }
      if (localizedAwayTeamAbbreviation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LocalizedAwayTeamAbbreviation);
      }
      if (AwayTeamLocation.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AwayTeamLocation);
      }
      if (localizedAwayTeamLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LocalizedAwayTeamLocation);
      }
      if (AwayTeamName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AwayTeamName);
      }
      if (localizedAwayTeamName_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LocalizedAwayTeamName);
      }
      if (eventEndDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EventEndDate);
      }
      if (EventName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(EventName);
      }
      if (localizedEventName_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LocalizedEventName);
      }
      if (eventStartDate_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(EventStartDate);
      }
      if (Genre.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Genre);
      }
      if (localizedGenre_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(LocalizedGenre);
      }
      if (HomeTeamAbbreviation.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(HomeTeamAbbreviation);
      }
      if (localizedHomeTeamAbbreviation_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(LocalizedHomeTeamAbbreviation);
      }
      if (HomeTeamLocation.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(HomeTeamLocation);
      }
      if (localizedHomeTeamLocation_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(LocalizedHomeTeamLocation);
      }
      if (HomeTeamName.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(HomeTeamName);
      }
      if (localizedHomeTeamName_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(LocalizedHomeTeamName);
      }
      if (LeagueAbbreviation.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(LeagueAbbreviation);
      }
      if (localizedLeagueAbbreviation_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(LocalizedLeagueAbbreviation);
      }
      if (LeagueName.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(LeagueName);
      }
      if (localizedLeagueName_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(LocalizedLeagueName);
      }
      performerNames_.WriteTo(ref output, _repeated_performerNames_codec);
      if (SilenceRequested != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(SilenceRequested);
      }
      if (SportName.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(SportName);
      }
      if (localizedSportName_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(LocalizedSportName);
      }
      if (venueLocation_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(VenueLocation);
      }
      if (VenuePhoneNumber.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(VenuePhoneNumber);
      }
      if (VenueRoom.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(VenueRoom);
      }
      if (localizedVenueRoom_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(LocalizedVenueRoom);
      }
      wifiAccess_.WriteTo(ref output, _repeated_wifiAccess_codec);
      if (VenueRegionName.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(VenueRegionName);
      }
      if (localizedVenueRegionName_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(LocalizedVenueRegionName);
      }
      if (TailgatingAllowed != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(TailgatingAllowed);
      }
      if (EntranceDescription.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(EntranceDescription);
      }
      if (localizedEntranceDescription_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(LocalizedEntranceDescription);
      }
      if (venueGatesOpenDate_ != null) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(VenueGatesOpenDate);
      }
      if (venueFanZoneOpenDate_ != null) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(VenueFanZoneOpenDate);
      }
      if (venueParkingLotsOpenDate_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(VenueParkingLotsOpenDate);
      }
      if (venueBoxOfficeOpenDate_ != null) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(VenueBoxOfficeOpenDate);
      }
      if (venueOpenDate_ != null) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(VenueOpenDate);
      }
      if (venueCloseDate_ != null) {
        output.WriteRawTag(218, 2);
        output.WriteMessage(VenueCloseDate);
      }
      playlistIds_.WriteTo(ref output, _repeated_playlistIds_codec);
      albumIds_.WriteTo(ref output, _repeated_albumIds_codec);
      if (eventStartDateInfo_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(EventStartDateInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += artistIds_.CalculateSize(_repeated_artistIds_codec);
      if (AwayTeamAbbreviation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AwayTeamAbbreviation);
      }
      if (localizedAwayTeamAbbreviation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedAwayTeamAbbreviation);
      }
      if (AwayTeamLocation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AwayTeamLocation);
      }
      if (localizedAwayTeamLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedAwayTeamLocation);
      }
      if (AwayTeamName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AwayTeamName);
      }
      if (localizedAwayTeamName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedAwayTeamName);
      }
      if (eventEndDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventEndDate);
      }
      if (EventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
      }
      if (localizedEventName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedEventName);
      }
      if (eventStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventStartDate);
      }
      if (Genre.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Genre);
      }
      if (localizedGenre_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedGenre);
      }
      if (HomeTeamAbbreviation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeTeamAbbreviation);
      }
      if (localizedHomeTeamAbbreviation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedHomeTeamAbbreviation);
      }
      if (HomeTeamLocation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HomeTeamLocation);
      }
      if (localizedHomeTeamLocation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedHomeTeamLocation);
      }
      if (HomeTeamName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HomeTeamName);
      }
      if (localizedHomeTeamName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedHomeTeamName);
      }
      if (LeagueAbbreviation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LeagueAbbreviation);
      }
      if (localizedLeagueAbbreviation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedLeagueAbbreviation);
      }
      if (LeagueName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LeagueName);
      }
      if (localizedLeagueName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedLeagueName);
      }
      size += performerNames_.CalculateSize(_repeated_performerNames_codec);
      if (SilenceRequested != false) {
        size += 2 + 1;
      }
      if (SportName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SportName);
      }
      if (localizedSportName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedSportName);
      }
      if (venueLocation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueLocation);
      }
      if (VenuePhoneNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VenuePhoneNumber);
      }
      if (VenueRoom.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VenueRoom);
      }
      if (localizedVenueRoom_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedVenueRoom);
      }
      size += wifiAccess_.CalculateSize(_repeated_wifiAccess_codec);
      if (VenueRegionName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VenueRegionName);
      }
      if (localizedVenueRegionName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedVenueRegionName);
      }
      if (TailgatingAllowed != false) {
        size += 2 + 1;
      }
      if (EntranceDescription.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EntranceDescription);
      }
      if (localizedEntranceDescription_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedEntranceDescription);
      }
      if (venueGatesOpenDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueGatesOpenDate);
      }
      if (venueFanZoneOpenDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueFanZoneOpenDate);
      }
      if (venueParkingLotsOpenDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueParkingLotsOpenDate);
      }
      if (venueBoxOfficeOpenDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueBoxOfficeOpenDate);
      }
      if (venueOpenDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueOpenDate);
      }
      if (venueCloseDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueCloseDate);
      }
      size += playlistIds_.CalculateSize(_repeated_playlistIds_codec);
      size += albumIds_.CalculateSize(_repeated_albumIds_codec);
      if (eventStartDateInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EventStartDateInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EventSemanticTags other) {
      if (other == null) {
        return;
      }
      artistIds_.Add(other.artistIds_);
      if (other.AwayTeamAbbreviation.Length != 0) {
        AwayTeamAbbreviation = other.AwayTeamAbbreviation;
      }
      if (other.localizedAwayTeamAbbreviation_ != null) {
        if (localizedAwayTeamAbbreviation_ == null) {
          LocalizedAwayTeamAbbreviation = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedAwayTeamAbbreviation.MergeFrom(other.LocalizedAwayTeamAbbreviation);
      }
      if (other.AwayTeamLocation.Length != 0) {
        AwayTeamLocation = other.AwayTeamLocation;
      }
      if (other.localizedAwayTeamLocation_ != null) {
        if (localizedAwayTeamLocation_ == null) {
          LocalizedAwayTeamLocation = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedAwayTeamLocation.MergeFrom(other.LocalizedAwayTeamLocation);
      }
      if (other.AwayTeamName.Length != 0) {
        AwayTeamName = other.AwayTeamName;
      }
      if (other.localizedAwayTeamName_ != null) {
        if (localizedAwayTeamName_ == null) {
          LocalizedAwayTeamName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedAwayTeamName.MergeFrom(other.LocalizedAwayTeamName);
      }
      if (other.eventEndDate_ != null) {
        if (eventEndDate_ == null) {
          EventEndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EventEndDate.MergeFrom(other.EventEndDate);
      }
      if (other.EventName.Length != 0) {
        EventName = other.EventName;
      }
      if (other.localizedEventName_ != null) {
        if (localizedEventName_ == null) {
          LocalizedEventName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedEventName.MergeFrom(other.LocalizedEventName);
      }
      if (other.eventStartDate_ != null) {
        if (eventStartDate_ == null) {
          EventStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EventStartDate.MergeFrom(other.EventStartDate);
      }
      if (other.Genre.Length != 0) {
        Genre = other.Genre;
      }
      if (other.localizedGenre_ != null) {
        if (localizedGenre_ == null) {
          LocalizedGenre = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedGenre.MergeFrom(other.LocalizedGenre);
      }
      if (other.HomeTeamAbbreviation.Length != 0) {
        HomeTeamAbbreviation = other.HomeTeamAbbreviation;
      }
      if (other.localizedHomeTeamAbbreviation_ != null) {
        if (localizedHomeTeamAbbreviation_ == null) {
          LocalizedHomeTeamAbbreviation = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedHomeTeamAbbreviation.MergeFrom(other.LocalizedHomeTeamAbbreviation);
      }
      if (other.HomeTeamLocation.Length != 0) {
        HomeTeamLocation = other.HomeTeamLocation;
      }
      if (other.localizedHomeTeamLocation_ != null) {
        if (localizedHomeTeamLocation_ == null) {
          LocalizedHomeTeamLocation = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedHomeTeamLocation.MergeFrom(other.LocalizedHomeTeamLocation);
      }
      if (other.HomeTeamName.Length != 0) {
        HomeTeamName = other.HomeTeamName;
      }
      if (other.localizedHomeTeamName_ != null) {
        if (localizedHomeTeamName_ == null) {
          LocalizedHomeTeamName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedHomeTeamName.MergeFrom(other.LocalizedHomeTeamName);
      }
      if (other.LeagueAbbreviation.Length != 0) {
        LeagueAbbreviation = other.LeagueAbbreviation;
      }
      if (other.localizedLeagueAbbreviation_ != null) {
        if (localizedLeagueAbbreviation_ == null) {
          LocalizedLeagueAbbreviation = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedLeagueAbbreviation.MergeFrom(other.LocalizedLeagueAbbreviation);
      }
      if (other.LeagueName.Length != 0) {
        LeagueName = other.LeagueName;
      }
      if (other.localizedLeagueName_ != null) {
        if (localizedLeagueName_ == null) {
          LocalizedLeagueName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedLeagueName.MergeFrom(other.LocalizedLeagueName);
      }
      performerNames_.Add(other.performerNames_);
      if (other.SilenceRequested != false) {
        SilenceRequested = other.SilenceRequested;
      }
      if (other.SportName.Length != 0) {
        SportName = other.SportName;
      }
      if (other.localizedSportName_ != null) {
        if (localizedSportName_ == null) {
          LocalizedSportName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedSportName.MergeFrom(other.LocalizedSportName);
      }
      if (other.venueLocation_ != null) {
        if (venueLocation_ == null) {
          VenueLocation = new global::PassKit.Grpc.SemanticLocation();
        }
        VenueLocation.MergeFrom(other.VenueLocation);
      }
      if (other.VenuePhoneNumber.Length != 0) {
        VenuePhoneNumber = other.VenuePhoneNumber;
      }
      if (other.VenueRoom.Length != 0) {
        VenueRoom = other.VenueRoom;
      }
      if (other.localizedVenueRoom_ != null) {
        if (localizedVenueRoom_ == null) {
          LocalizedVenueRoom = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedVenueRoom.MergeFrom(other.LocalizedVenueRoom);
      }
      wifiAccess_.Add(other.wifiAccess_);
      if (other.VenueRegionName.Length != 0) {
        VenueRegionName = other.VenueRegionName;
      }
      if (other.localizedVenueRegionName_ != null) {
        if (localizedVenueRegionName_ == null) {
          LocalizedVenueRegionName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedVenueRegionName.MergeFrom(other.LocalizedVenueRegionName);
      }
      if (other.TailgatingAllowed != false) {
        TailgatingAllowed = other.TailgatingAllowed;
      }
      if (other.EntranceDescription.Length != 0) {
        EntranceDescription = other.EntranceDescription;
      }
      if (other.localizedEntranceDescription_ != null) {
        if (localizedEntranceDescription_ == null) {
          LocalizedEntranceDescription = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedEntranceDescription.MergeFrom(other.LocalizedEntranceDescription);
      }
      if (other.venueGatesOpenDate_ != null) {
        if (venueGatesOpenDate_ == null) {
          VenueGatesOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VenueGatesOpenDate.MergeFrom(other.VenueGatesOpenDate);
      }
      if (other.venueFanZoneOpenDate_ != null) {
        if (venueFanZoneOpenDate_ == null) {
          VenueFanZoneOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VenueFanZoneOpenDate.MergeFrom(other.VenueFanZoneOpenDate);
      }
      if (other.venueParkingLotsOpenDate_ != null) {
        if (venueParkingLotsOpenDate_ == null) {
          VenueParkingLotsOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VenueParkingLotsOpenDate.MergeFrom(other.VenueParkingLotsOpenDate);
      }
      if (other.venueBoxOfficeOpenDate_ != null) {
        if (venueBoxOfficeOpenDate_ == null) {
          VenueBoxOfficeOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VenueBoxOfficeOpenDate.MergeFrom(other.VenueBoxOfficeOpenDate);
      }
      if (other.venueOpenDate_ != null) {
        if (venueOpenDate_ == null) {
          VenueOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VenueOpenDate.MergeFrom(other.VenueOpenDate);
      }
      if (other.venueCloseDate_ != null) {
        if (venueCloseDate_ == null) {
          VenueCloseDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VenueCloseDate.MergeFrom(other.VenueCloseDate);
      }
      playlistIds_.Add(other.playlistIds_);
      albumIds_.Add(other.albumIds_);
      if (other.eventStartDateInfo_ != null) {
        if (eventStartDateInfo_ == null) {
          EventStartDateInfo = new global::PassKit.Grpc.SemanticEventDateInfo();
        }
        EventStartDateInfo.MergeFrom(other.EventStartDateInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            artistIds_.AddEntriesFrom(input, _repeated_artistIds_codec);
            break;
          }
          case 18: {
            AwayTeamAbbreviation = input.ReadString();
            break;
          }
          case 26: {
            if (localizedAwayTeamAbbreviation_ == null) {
              LocalizedAwayTeamAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAwayTeamAbbreviation);
            break;
          }
          case 34: {
            AwayTeamLocation = input.ReadString();
            break;
          }
          case 42: {
            if (localizedAwayTeamLocation_ == null) {
              LocalizedAwayTeamLocation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAwayTeamLocation);
            break;
          }
          case 50: {
            AwayTeamName = input.ReadString();
            break;
          }
          case 58: {
            if (localizedAwayTeamName_ == null) {
              LocalizedAwayTeamName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAwayTeamName);
            break;
          }
          case 66: {
            if (eventEndDate_ == null) {
              EventEndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EventEndDate);
            break;
          }
          case 74: {
            EventName = input.ReadString();
            break;
          }
          case 82: {
            if (localizedEventName_ == null) {
              LocalizedEventName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedEventName);
            break;
          }
          case 90: {
            if (eventStartDate_ == null) {
              EventStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EventStartDate);
            break;
          }
          case 98: {
            Genre = input.ReadString();
            break;
          }
          case 106: {
            if (localizedGenre_ == null) {
              LocalizedGenre = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedGenre);
            break;
          }
          case 114: {
            HomeTeamAbbreviation = input.ReadString();
            break;
          }
          case 122: {
            if (localizedHomeTeamAbbreviation_ == null) {
              LocalizedHomeTeamAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedHomeTeamAbbreviation);
            break;
          }
          case 130: {
            HomeTeamLocation = input.ReadString();
            break;
          }
          case 138: {
            if (localizedHomeTeamLocation_ == null) {
              LocalizedHomeTeamLocation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedHomeTeamLocation);
            break;
          }
          case 146: {
            HomeTeamName = input.ReadString();
            break;
          }
          case 154: {
            if (localizedHomeTeamName_ == null) {
              LocalizedHomeTeamName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedHomeTeamName);
            break;
          }
          case 162: {
            LeagueAbbreviation = input.ReadString();
            break;
          }
          case 170: {
            if (localizedLeagueAbbreviation_ == null) {
              LocalizedLeagueAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedLeagueAbbreviation);
            break;
          }
          case 178: {
            LeagueName = input.ReadString();
            break;
          }
          case 186: {
            if (localizedLeagueName_ == null) {
              LocalizedLeagueName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedLeagueName);
            break;
          }
          case 194: {
            performerNames_.AddEntriesFrom(input, _repeated_performerNames_codec);
            break;
          }
          case 200: {
            SilenceRequested = input.ReadBool();
            break;
          }
          case 210: {
            SportName = input.ReadString();
            break;
          }
          case 218: {
            if (localizedSportName_ == null) {
              LocalizedSportName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedSportName);
            break;
          }
          case 226: {
            if (venueLocation_ == null) {
              VenueLocation = new global::PassKit.Grpc.SemanticLocation();
            }
            input.ReadMessage(VenueLocation);
            break;
          }
          case 234: {
            VenuePhoneNumber = input.ReadString();
            break;
          }
          case 242: {
            VenueRoom = input.ReadString();
            break;
          }
          case 250: {
            if (localizedVenueRoom_ == null) {
              LocalizedVenueRoom = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueRoom);
            break;
          }
          case 258: {
            wifiAccess_.AddEntriesFrom(input, _repeated_wifiAccess_codec);
            break;
          }
          case 266: {
            VenueRegionName = input.ReadString();
            break;
          }
          case 274: {
            if (localizedVenueRegionName_ == null) {
              LocalizedVenueRegionName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueRegionName);
            break;
          }
          case 280: {
            TailgatingAllowed = input.ReadBool();
            break;
          }
          case 290: {
            EntranceDescription = input.ReadString();
            break;
          }
          case 298: {
            if (localizedEntranceDescription_ == null) {
              LocalizedEntranceDescription = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedEntranceDescription);
            break;
          }
          case 306: {
            if (venueGatesOpenDate_ == null) {
              VenueGatesOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueGatesOpenDate);
            break;
          }
          case 314: {
            if (venueFanZoneOpenDate_ == null) {
              VenueFanZoneOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueFanZoneOpenDate);
            break;
          }
          case 322: {
            if (venueParkingLotsOpenDate_ == null) {
              VenueParkingLotsOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueParkingLotsOpenDate);
            break;
          }
          case 330: {
            if (venueBoxOfficeOpenDate_ == null) {
              VenueBoxOfficeOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueBoxOfficeOpenDate);
            break;
          }
          case 338: {
            if (venueOpenDate_ == null) {
              VenueOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueOpenDate);
            break;
          }
          case 346: {
            if (venueCloseDate_ == null) {
              VenueCloseDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueCloseDate);
            break;
          }
          case 354: {
            playlistIds_.AddEntriesFrom(input, _repeated_playlistIds_codec);
            break;
          }
          case 362: {
            albumIds_.AddEntriesFrom(input, _repeated_albumIds_codec);
            break;
          }
          case 370: {
            if (eventStartDateInfo_ == null) {
              EventStartDateInfo = new global::PassKit.Grpc.SemanticEventDateInfo();
            }
            input.ReadMessage(EventStartDateInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            artistIds_.AddEntriesFrom(ref input, _repeated_artistIds_codec);
            break;
          }
          case 18: {
            AwayTeamAbbreviation = input.ReadString();
            break;
          }
          case 26: {
            if (localizedAwayTeamAbbreviation_ == null) {
              LocalizedAwayTeamAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAwayTeamAbbreviation);
            break;
          }
          case 34: {
            AwayTeamLocation = input.ReadString();
            break;
          }
          case 42: {
            if (localizedAwayTeamLocation_ == null) {
              LocalizedAwayTeamLocation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAwayTeamLocation);
            break;
          }
          case 50: {
            AwayTeamName = input.ReadString();
            break;
          }
          case 58: {
            if (localizedAwayTeamName_ == null) {
              LocalizedAwayTeamName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAwayTeamName);
            break;
          }
          case 66: {
            if (eventEndDate_ == null) {
              EventEndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EventEndDate);
            break;
          }
          case 74: {
            EventName = input.ReadString();
            break;
          }
          case 82: {
            if (localizedEventName_ == null) {
              LocalizedEventName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedEventName);
            break;
          }
          case 90: {
            if (eventStartDate_ == null) {
              EventStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EventStartDate);
            break;
          }
          case 98: {
            Genre = input.ReadString();
            break;
          }
          case 106: {
            if (localizedGenre_ == null) {
              LocalizedGenre = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedGenre);
            break;
          }
          case 114: {
            HomeTeamAbbreviation = input.ReadString();
            break;
          }
          case 122: {
            if (localizedHomeTeamAbbreviation_ == null) {
              LocalizedHomeTeamAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedHomeTeamAbbreviation);
            break;
          }
          case 130: {
            HomeTeamLocation = input.ReadString();
            break;
          }
          case 138: {
            if (localizedHomeTeamLocation_ == null) {
              LocalizedHomeTeamLocation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedHomeTeamLocation);
            break;
          }
          case 146: {
            HomeTeamName = input.ReadString();
            break;
          }
          case 154: {
            if (localizedHomeTeamName_ == null) {
              LocalizedHomeTeamName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedHomeTeamName);
            break;
          }
          case 162: {
            LeagueAbbreviation = input.ReadString();
            break;
          }
          case 170: {
            if (localizedLeagueAbbreviation_ == null) {
              LocalizedLeagueAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedLeagueAbbreviation);
            break;
          }
          case 178: {
            LeagueName = input.ReadString();
            break;
          }
          case 186: {
            if (localizedLeagueName_ == null) {
              LocalizedLeagueName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedLeagueName);
            break;
          }
          case 194: {
            performerNames_.AddEntriesFrom(ref input, _repeated_performerNames_codec);
            break;
          }
          case 200: {
            SilenceRequested = input.ReadBool();
            break;
          }
          case 210: {
            SportName = input.ReadString();
            break;
          }
          case 218: {
            if (localizedSportName_ == null) {
              LocalizedSportName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedSportName);
            break;
          }
          case 226: {
            if (venueLocation_ == null) {
              VenueLocation = new global::PassKit.Grpc.SemanticLocation();
            }
            input.ReadMessage(VenueLocation);
            break;
          }
          case 234: {
            VenuePhoneNumber = input.ReadString();
            break;
          }
          case 242: {
            VenueRoom = input.ReadString();
            break;
          }
          case 250: {
            if (localizedVenueRoom_ == null) {
              LocalizedVenueRoom = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueRoom);
            break;
          }
          case 258: {
            wifiAccess_.AddEntriesFrom(ref input, _repeated_wifiAccess_codec);
            break;
          }
          case 266: {
            VenueRegionName = input.ReadString();
            break;
          }
          case 274: {
            if (localizedVenueRegionName_ == null) {
              LocalizedVenueRegionName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueRegionName);
            break;
          }
          case 280: {
            TailgatingAllowed = input.ReadBool();
            break;
          }
          case 290: {
            EntranceDescription = input.ReadString();
            break;
          }
          case 298: {
            if (localizedEntranceDescription_ == null) {
              LocalizedEntranceDescription = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedEntranceDescription);
            break;
          }
          case 306: {
            if (venueGatesOpenDate_ == null) {
              VenueGatesOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueGatesOpenDate);
            break;
          }
          case 314: {
            if (venueFanZoneOpenDate_ == null) {
              VenueFanZoneOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueFanZoneOpenDate);
            break;
          }
          case 322: {
            if (venueParkingLotsOpenDate_ == null) {
              VenueParkingLotsOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueParkingLotsOpenDate);
            break;
          }
          case 330: {
            if (venueBoxOfficeOpenDate_ == null) {
              VenueBoxOfficeOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueBoxOfficeOpenDate);
            break;
          }
          case 338: {
            if (venueOpenDate_ == null) {
              VenueOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueOpenDate);
            break;
          }
          case 346: {
            if (venueCloseDate_ == null) {
              VenueCloseDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueCloseDate);
            break;
          }
          case 354: {
            playlistIds_.AddEntriesFrom(ref input, _repeated_playlistIds_codec);
            break;
          }
          case 362: {
            albumIds_.AddEntriesFrom(ref input, _repeated_albumIds_codec);
            break;
          }
          case 370: {
            if (eventStartDateInfo_ == null) {
              EventStartDateInfo = new global::PassKit.Grpc.SemanticEventDateInfo();
            }
            input.ReadMessage(EventStartDateInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metadata used across different protocols (e.g. events, flights). Includes info like names, locations, seats, pricing, and travel details.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SemanticTags : pb::IMessage<SemanticTags>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SemanticTags> _parser = new pb::MessageParser<SemanticTags>(() => new SemanticTags());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SemanticTags> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.SemanticsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticTags() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticTags(SemanticTags other) : this() {
      admissionLevel_ = other.admissionLevel_;
      localizedAdmissionLevel_ = other.localizedAdmissionLevel_ != null ? other.localizedAdmissionLevel_.Clone() : null;
      admissionLevelAbbreviation_ = other.admissionLevelAbbreviation_;
      localizedAdmissionLevelAbbreviation_ = other.localizedAdmissionLevelAbbreviation_ != null ? other.localizedAdmissionLevelAbbreviation_.Clone() : null;
      additionalTicketAttributes_ = other.additionalTicketAttributes_;
      localizedAdditionalTicketAttributes_ = other.localizedAdditionalTicketAttributes_ != null ? other.localizedAdditionalTicketAttributes_.Clone() : null;
      airlineCode_ = other.airlineCode_;
      localizedAirlineCode_ = other.localizedAirlineCode_ != null ? other.localizedAirlineCode_.Clone() : null;
      attendeeName_ = other.attendeeName_;
      localizedAttendeeName_ = other.localizedAttendeeName_ != null ? other.localizedAttendeeName_.Clone() : null;
      artistIds_ = other.artistIds_.Clone();
      awayTeamAbbreviation_ = other.awayTeamAbbreviation_;
      localizedAwayTeamAbbreviation_ = other.localizedAwayTeamAbbreviation_ != null ? other.localizedAwayTeamAbbreviation_.Clone() : null;
      awayTeamLocation_ = other.awayTeamLocation_;
      localizedAwayTeamLocation_ = other.localizedAwayTeamLocation_ != null ? other.localizedAwayTeamLocation_.Clone() : null;
      awayTeamName_ = other.awayTeamName_;
      localizedAwayTeamName_ = other.localizedAwayTeamName_ != null ? other.localizedAwayTeamName_.Clone() : null;
      balance_ = other.balance_ != null ? other.balance_.Clone() : null;
      boardingGroup_ = other.boardingGroup_;
      localizedBoardingGroup_ = other.localizedBoardingGroup_ != null ? other.localizedBoardingGroup_.Clone() : null;
      boardingSequenceNumber_ = other.boardingSequenceNumber_;
      carNumber_ = other.carNumber_;
      localizedCarNumber_ = other.localizedCarNumber_ != null ? other.localizedCarNumber_.Clone() : null;
      confirmationNumber_ = other.confirmationNumber_;
      localizedConfirmationNumber_ = other.localizedConfirmationNumber_ != null ? other.localizedConfirmationNumber_.Clone() : null;
      currentArrivalDate_ = other.currentArrivalDate_ != null ? other.currentArrivalDate_.Clone() : null;
      currentBoardingDate_ = other.currentBoardingDate_ != null ? other.currentBoardingDate_.Clone() : null;
      currentDepartureDate_ = other.currentDepartureDate_ != null ? other.currentDepartureDate_.Clone() : null;
      departureAirportCode_ = other.departureAirportCode_;
      localizedDepartureAirportCode_ = other.localizedDepartureAirportCode_ != null ? other.localizedDepartureAirportCode_.Clone() : null;
      departureAirportName_ = other.departureAirportName_;
      localizedDepartureAirportName_ = other.localizedDepartureAirportName_ != null ? other.localizedDepartureAirportName_.Clone() : null;
      departureGate_ = other.departureGate_;
      localizedDepartureGate_ = other.localizedDepartureGate_ != null ? other.localizedDepartureGate_.Clone() : null;
      departureLocation_ = other.departureLocation_;
      localizedDepartureLocation_ = other.localizedDepartureLocation_ != null ? other.localizedDepartureLocation_.Clone() : null;
      departureLocationDescription_ = other.departureLocationDescription_;
      localizedDepartureLocationDescription_ = other.localizedDepartureLocationDescription_ != null ? other.localizedDepartureLocationDescription_.Clone() : null;
      departurePlatform_ = other.departurePlatform_;
      localizedDeparturePlatform_ = other.localizedDeparturePlatform_ != null ? other.localizedDeparturePlatform_.Clone() : null;
      departureStationName_ = other.departureStationName_;
      localizedDepartureStationName_ = other.localizedDepartureStationName_ != null ? other.localizedDepartureStationName_.Clone() : null;
      departureTerminal_ = other.departureTerminal_;
      localizedDepartureTerminal_ = other.localizedDepartureTerminal_ != null ? other.localizedDepartureTerminal_.Clone() : null;
      destinationAirportCode_ = other.destinationAirportCode_;
      localizedDestinationAirportCode_ = other.localizedDestinationAirportCode_ != null ? other.localizedDestinationAirportCode_.Clone() : null;
      destinationAirportName_ = other.destinationAirportName_;
      localizedDestinationAirportName_ = other.localizedDestinationAirportName_ != null ? other.localizedDestinationAirportName_.Clone() : null;
      destinationGate_ = other.destinationGate_;
      localizedDestinationGate_ = other.localizedDestinationGate_ != null ? other.localizedDestinationGate_.Clone() : null;
      destinationLocation_ = other.destinationLocation_;
      localizedDestinationLocation_ = other.localizedDestinationLocation_ != null ? other.localizedDestinationLocation_.Clone() : null;
      destinationLocationDescription_ = other.destinationLocationDescription_;
      localizedDestinationLocationDescription_ = other.localizedDestinationLocationDescription_ != null ? other.localizedDestinationLocationDescription_.Clone() : null;
      destinationPlatform_ = other.destinationPlatform_;
      localizedDestinationPlatform_ = other.localizedDestinationPlatform_ != null ? other.localizedDestinationPlatform_.Clone() : null;
      destinationStationName_ = other.destinationStationName_;
      localizedDestinationStationName_ = other.localizedDestinationStationName_ != null ? other.localizedDestinationStationName_.Clone() : null;
      destinationTerminal_ = other.destinationTerminal_;
      localizedDestinationTerminal_ = other.localizedDestinationTerminal_ != null ? other.localizedDestinationTerminal_.Clone() : null;
      duration_ = other.duration_;
      eventEndDate_ = other.eventEndDate_ != null ? other.eventEndDate_.Clone() : null;
      eventName_ = other.eventName_;
      localizedEventName_ = other.localizedEventName_ != null ? other.localizedEventName_.Clone() : null;
      eventStartDate_ = other.eventStartDate_ != null ? other.eventStartDate_.Clone() : null;
      eventStartDateInfo_ = other.eventStartDateInfo_ != null ? other.eventStartDateInfo_.Clone() : null;
      eventType_ = other.eventType_;
      flightCode_ = other.flightCode_;
      localizedFlightCode_ = other.localizedFlightCode_ != null ? other.localizedFlightCode_.Clone() : null;
      flightNumber_ = other.flightNumber_;
      genre_ = other.genre_;
      localizedGenre_ = other.localizedGenre_ != null ? other.localizedGenre_.Clone() : null;
      homeTeamAbbreviation_ = other.homeTeamAbbreviation_;
      localizedHomeTeamAbbreviation_ = other.localizedHomeTeamAbbreviation_ != null ? other.localizedHomeTeamAbbreviation_.Clone() : null;
      homeTeamLocation_ = other.homeTeamLocation_;
      localizedHomeTeamLocation_ = other.localizedHomeTeamLocation_ != null ? other.localizedHomeTeamLocation_.Clone() : null;
      homeTeamName_ = other.homeTeamName_;
      localizedHomeTeamName_ = other.localizedHomeTeamName_ != null ? other.localizedHomeTeamName_.Clone() : null;
      leagueAbbreviation_ = other.leagueAbbreviation_;
      localizedLeagueAbbreviation_ = other.localizedLeagueAbbreviation_ != null ? other.localizedLeagueAbbreviation_.Clone() : null;
      leagueName_ = other.leagueName_;
      localizedLeagueName_ = other.localizedLeagueName_ != null ? other.localizedLeagueName_.Clone() : null;
      membershipProgramName_ = other.membershipProgramName_;
      localizedMembershipProgramName_ = other.localizedMembershipProgramName_ != null ? other.localizedMembershipProgramName_.Clone() : null;
      membershipProgramNumber_ = other.membershipProgramNumber_;
      originalArrivalDate_ = other.originalArrivalDate_ != null ? other.originalArrivalDate_.Clone() : null;
      originalBoardingDate_ = other.originalBoardingDate_ != null ? other.originalBoardingDate_.Clone() : null;
      originalDepartureDate_ = other.originalDepartureDate_ != null ? other.originalDepartureDate_.Clone() : null;
      passengerName_ = other.passengerName_ != null ? other.passengerName_.Clone() : null;
      performerNames_ = other.performerNames_.Clone();
      priorityStatus_ = other.priorityStatus_;
      localizedPriorityStatus_ = other.localizedPriorityStatus_ != null ? other.localizedPriorityStatus_.Clone() : null;
      albumIds_ = other.albumIds_.Clone();
      playlistIds_ = other.playlistIds_.Clone();
      seats_ = other.seats_.Clone();
      securityScreening_ = other.securityScreening_;
      localizedSecurityScreening_ = other.localizedSecurityScreening_ != null ? other.localizedSecurityScreening_.Clone() : null;
      silenceRequested_ = other.silenceRequested_;
      sportName_ = other.sportName_;
      localizedSportName_ = other.localizedSportName_ != null ? other.localizedSportName_.Clone() : null;
      totalPrice_ = other.totalPrice_ != null ? other.totalPrice_.Clone() : null;
      transitProvider_ = other.transitProvider_;
      localizedTransitProvider_ = other.localizedTransitProvider_ != null ? other.localizedTransitProvider_.Clone() : null;
      transitStatus_ = other.transitStatus_;
      localizedTransitStatus_ = other.localizedTransitStatus_ != null ? other.localizedTransitStatus_.Clone() : null;
      transitStatusReason_ = other.transitStatusReason_;
      localizedTransitStatusReason_ = other.localizedTransitStatusReason_ != null ? other.localizedTransitStatusReason_.Clone() : null;
      vehicleName_ = other.vehicleName_;
      localizedVehicleName_ = other.localizedVehicleName_ != null ? other.localizedVehicleName_.Clone() : null;
      vehicleNumber_ = other.vehicleNumber_;
      localizedVehicleNumber_ = other.localizedVehicleNumber_ != null ? other.localizedVehicleNumber_.Clone() : null;
      vehicleType_ = other.vehicleType_;
      localizedVehicleType_ = other.localizedVehicleType_ != null ? other.localizedVehicleType_.Clone() : null;
      venueBoxOfficeOpenDate_ = other.venueBoxOfficeOpenDate_ != null ? other.venueBoxOfficeOpenDate_.Clone() : null;
      venueCloseDate_ = other.venueCloseDate_ != null ? other.venueCloseDate_.Clone() : null;
      venueDoorsOpenDate_ = other.venueDoorsOpenDate_ != null ? other.venueDoorsOpenDate_.Clone() : null;
      venueEntrance_ = other.venueEntrance_;
      localizedVenueEntrance_ = other.localizedVenueEntrance_ != null ? other.localizedVenueEntrance_.Clone() : null;
      venueLocation_ = other.venueLocation_ != null ? other.venueLocation_.Clone() : null;
      venueName_ = other.venueName_;
      localizedVenueName_ = other.localizedVenueName_ != null ? other.localizedVenueName_.Clone() : null;
      venuePhoneNumber_ = other.venuePhoneNumber_;
      localizedVenuePhoneNumber_ = other.localizedVenuePhoneNumber_ != null ? other.localizedVenuePhoneNumber_.Clone() : null;
      venueRegionName_ = other.venueRegionName_;
      localizedVenueRegionName_ = other.localizedVenueRegionName_ != null ? other.localizedVenueRegionName_.Clone() : null;
      venueRoom_ = other.venueRoom_;
      localizedVenueRoom_ = other.localizedVenueRoom_ != null ? other.localizedVenueRoom_.Clone() : null;
      wifiAccess_ = other.wifiAccess_.Clone();
      venueFanZoneOpenDate_ = other.venueFanZoneOpenDate_ != null ? other.venueFanZoneOpenDate_.Clone() : null;
      venueGatesOpenDate_ = other.venueGatesOpenDate_ != null ? other.venueGatesOpenDate_.Clone() : null;
      venueParkingLotsOpenDate_ = other.venueParkingLotsOpenDate_ != null ? other.venueParkingLotsOpenDate_.Clone() : null;
      venueEntranceDoor_ = other.venueEntranceDoor_;
      localizedVenueEntranceDoor_ = other.localizedVenueEntranceDoor_ != null ? other.localizedVenueEntranceDoor_.Clone() : null;
      venueEntranceGate_ = other.venueEntranceGate_;
      localizedVenueEntranceGate_ = other.localizedVenueEntranceGate_ != null ? other.localizedVenueEntranceGate_.Clone() : null;
      venueEntrancePortal_ = other.venueEntrancePortal_;
      localizedVenueEntrancePortal_ = other.localizedVenueEntrancePortal_ != null ? other.localizedVenueEntrancePortal_.Clone() : null;
      entranceDescription_ = other.entranceDescription_;
      localizedEntranceDescription_ = other.localizedEntranceDescription_ != null ? other.localizedEntranceDescription_.Clone() : null;
      tailgatingAllowed_ = other.tailgatingAllowed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SemanticTags Clone() {
      return new SemanticTags(this);
    }

    /// <summary>Field number for the "admissionLevel" field.</summary>
    public const int AdmissionLevelFieldNumber = 1;
    private string admissionLevel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AdmissionLevel {
      get { return admissionLevel_; }
      set {
        admissionLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedAdmissionLevel" field.</summary>
    public const int LocalizedAdmissionLevelFieldNumber = 2;
    private global::PassKit.Grpc.LocalizedString localizedAdmissionLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedAdmissionLevel {
      get { return localizedAdmissionLevel_; }
      set {
        localizedAdmissionLevel_ = value;
      }
    }

    /// <summary>Field number for the "admissionLevelAbbreviation" field.</summary>
    public const int AdmissionLevelAbbreviationFieldNumber = 3;
    private string admissionLevelAbbreviation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AdmissionLevelAbbreviation {
      get { return admissionLevelAbbreviation_; }
      set {
        admissionLevelAbbreviation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedAdmissionLevelAbbreviation" field.</summary>
    public const int LocalizedAdmissionLevelAbbreviationFieldNumber = 4;
    private global::PassKit.Grpc.LocalizedString localizedAdmissionLevelAbbreviation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedAdmissionLevelAbbreviation {
      get { return localizedAdmissionLevelAbbreviation_; }
      set {
        localizedAdmissionLevelAbbreviation_ = value;
      }
    }

    /// <summary>Field number for the "additionalTicketAttributes" field.</summary>
    public const int AdditionalTicketAttributesFieldNumber = 5;
    private string additionalTicketAttributes_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AdditionalTicketAttributes {
      get { return additionalTicketAttributes_; }
      set {
        additionalTicketAttributes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedAdditionalTicketAttributes" field.</summary>
    public const int LocalizedAdditionalTicketAttributesFieldNumber = 6;
    private global::PassKit.Grpc.LocalizedString localizedAdditionalTicketAttributes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedAdditionalTicketAttributes {
      get { return localizedAdditionalTicketAttributes_; }
      set {
        localizedAdditionalTicketAttributes_ = value;
      }
    }

    /// <summary>Field number for the "airlineCode" field.</summary>
    public const int AirlineCodeFieldNumber = 7;
    private string airlineCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AirlineCode {
      get { return airlineCode_; }
      set {
        airlineCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedAirlineCode" field.</summary>
    public const int LocalizedAirlineCodeFieldNumber = 8;
    private global::PassKit.Grpc.LocalizedString localizedAirlineCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedAirlineCode {
      get { return localizedAirlineCode_; }
      set {
        localizedAirlineCode_ = value;
      }
    }

    /// <summary>Field number for the "attendeeName" field.</summary>
    public const int AttendeeNameFieldNumber = 9;
    private string attendeeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AttendeeName {
      get { return attendeeName_; }
      set {
        attendeeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedAttendeeName" field.</summary>
    public const int LocalizedAttendeeNameFieldNumber = 10;
    private global::PassKit.Grpc.LocalizedString localizedAttendeeName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedAttendeeName {
      get { return localizedAttendeeName_; }
      set {
        localizedAttendeeName_ = value;
      }
    }

    /// <summary>Field number for the "artistIds" field.</summary>
    public const int ArtistIdsFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_artistIds_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> artistIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ArtistIds {
      get { return artistIds_; }
    }

    /// <summary>Field number for the "awayTeamAbbreviation" field.</summary>
    public const int AwayTeamAbbreviationFieldNumber = 12;
    private string awayTeamAbbreviation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AwayTeamAbbreviation {
      get { return awayTeamAbbreviation_; }
      set {
        awayTeamAbbreviation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedAwayTeamAbbreviation" field.</summary>
    public const int LocalizedAwayTeamAbbreviationFieldNumber = 13;
    private global::PassKit.Grpc.LocalizedString localizedAwayTeamAbbreviation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedAwayTeamAbbreviation {
      get { return localizedAwayTeamAbbreviation_; }
      set {
        localizedAwayTeamAbbreviation_ = value;
      }
    }

    /// <summary>Field number for the "awayTeamLocation" field.</summary>
    public const int AwayTeamLocationFieldNumber = 14;
    private string awayTeamLocation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AwayTeamLocation {
      get { return awayTeamLocation_; }
      set {
        awayTeamLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedAwayTeamLocation" field.</summary>
    public const int LocalizedAwayTeamLocationFieldNumber = 15;
    private global::PassKit.Grpc.LocalizedString localizedAwayTeamLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedAwayTeamLocation {
      get { return localizedAwayTeamLocation_; }
      set {
        localizedAwayTeamLocation_ = value;
      }
    }

    /// <summary>Field number for the "awayTeamName" field.</summary>
    public const int AwayTeamNameFieldNumber = 16;
    private string awayTeamName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AwayTeamName {
      get { return awayTeamName_; }
      set {
        awayTeamName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedAwayTeamName" field.</summary>
    public const int LocalizedAwayTeamNameFieldNumber = 17;
    private global::PassKit.Grpc.LocalizedString localizedAwayTeamName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedAwayTeamName {
      get { return localizedAwayTeamName_; }
      set {
        localizedAwayTeamName_ = value;
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 18;
    private global::PassKit.Grpc.SemanticCurrencyAmount balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.SemanticCurrencyAmount Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "boardingGroup" field.</summary>
    public const int BoardingGroupFieldNumber = 19;
    private string boardingGroup_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BoardingGroup {
      get { return boardingGroup_; }
      set {
        boardingGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedBoardingGroup" field.</summary>
    public const int LocalizedBoardingGroupFieldNumber = 20;
    private global::PassKit.Grpc.LocalizedString localizedBoardingGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedBoardingGroup {
      get { return localizedBoardingGroup_; }
      set {
        localizedBoardingGroup_ = value;
      }
    }

    /// <summary>Field number for the "boardingSequenceNumber" field.</summary>
    public const int BoardingSequenceNumberFieldNumber = 21;
    private string boardingSequenceNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BoardingSequenceNumber {
      get { return boardingSequenceNumber_; }
      set {
        boardingSequenceNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carNumber" field.</summary>
    public const int CarNumberFieldNumber = 22;
    private string carNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CarNumber {
      get { return carNumber_; }
      set {
        carNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedCarNumber" field.</summary>
    public const int LocalizedCarNumberFieldNumber = 23;
    private global::PassKit.Grpc.LocalizedString localizedCarNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedCarNumber {
      get { return localizedCarNumber_; }
      set {
        localizedCarNumber_ = value;
      }
    }

    /// <summary>Field number for the "confirmationNumber" field.</summary>
    public const int ConfirmationNumberFieldNumber = 24;
    private string confirmationNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ConfirmationNumber {
      get { return confirmationNumber_; }
      set {
        confirmationNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedConfirmationNumber" field.</summary>
    public const int LocalizedConfirmationNumberFieldNumber = 25;
    private global::PassKit.Grpc.LocalizedString localizedConfirmationNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedConfirmationNumber {
      get { return localizedConfirmationNumber_; }
      set {
        localizedConfirmationNumber_ = value;
      }
    }

    /// <summary>Field number for the "currentArrivalDate" field.</summary>
    public const int CurrentArrivalDateFieldNumber = 26;
    private global::Google.Protobuf.WellKnownTypes.Timestamp currentArrivalDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CurrentArrivalDate {
      get { return currentArrivalDate_; }
      set {
        currentArrivalDate_ = value;
      }
    }

    /// <summary>Field number for the "currentBoardingDate" field.</summary>
    public const int CurrentBoardingDateFieldNumber = 27;
    private global::Google.Protobuf.WellKnownTypes.Timestamp currentBoardingDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CurrentBoardingDate {
      get { return currentBoardingDate_; }
      set {
        currentBoardingDate_ = value;
      }
    }

    /// <summary>Field number for the "currentDepartureDate" field.</summary>
    public const int CurrentDepartureDateFieldNumber = 28;
    private global::Google.Protobuf.WellKnownTypes.Timestamp currentDepartureDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CurrentDepartureDate {
      get { return currentDepartureDate_; }
      set {
        currentDepartureDate_ = value;
      }
    }

    /// <summary>Field number for the "departureAirportCode" field.</summary>
    public const int DepartureAirportCodeFieldNumber = 29;
    private string departureAirportCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DepartureAirportCode {
      get { return departureAirportCode_; }
      set {
        departureAirportCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDepartureAirportCode" field.</summary>
    public const int LocalizedDepartureAirportCodeFieldNumber = 30;
    private global::PassKit.Grpc.LocalizedString localizedDepartureAirportCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDepartureAirportCode {
      get { return localizedDepartureAirportCode_; }
      set {
        localizedDepartureAirportCode_ = value;
      }
    }

    /// <summary>Field number for the "departureAirportName" field.</summary>
    public const int DepartureAirportNameFieldNumber = 31;
    private string departureAirportName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DepartureAirportName {
      get { return departureAirportName_; }
      set {
        departureAirportName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDepartureAirportName" field.</summary>
    public const int LocalizedDepartureAirportNameFieldNumber = 32;
    private global::PassKit.Grpc.LocalizedString localizedDepartureAirportName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDepartureAirportName {
      get { return localizedDepartureAirportName_; }
      set {
        localizedDepartureAirportName_ = value;
      }
    }

    /// <summary>Field number for the "departureGate" field.</summary>
    public const int DepartureGateFieldNumber = 33;
    private string departureGate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DepartureGate {
      get { return departureGate_; }
      set {
        departureGate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDepartureGate" field.</summary>
    public const int LocalizedDepartureGateFieldNumber = 34;
    private global::PassKit.Grpc.LocalizedString localizedDepartureGate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDepartureGate {
      get { return localizedDepartureGate_; }
      set {
        localizedDepartureGate_ = value;
      }
    }

    /// <summary>Field number for the "departureLocation" field.</summary>
    public const int DepartureLocationFieldNumber = 35;
    private string departureLocation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DepartureLocation {
      get { return departureLocation_; }
      set {
        departureLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDepartureLocation" field.</summary>
    public const int LocalizedDepartureLocationFieldNumber = 36;
    private global::PassKit.Grpc.LocalizedString localizedDepartureLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDepartureLocation {
      get { return localizedDepartureLocation_; }
      set {
        localizedDepartureLocation_ = value;
      }
    }

    /// <summary>Field number for the "departureLocationDescription" field.</summary>
    public const int DepartureLocationDescriptionFieldNumber = 37;
    private string departureLocationDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DepartureLocationDescription {
      get { return departureLocationDescription_; }
      set {
        departureLocationDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDepartureLocationDescription" field.</summary>
    public const int LocalizedDepartureLocationDescriptionFieldNumber = 38;
    private global::PassKit.Grpc.LocalizedString localizedDepartureLocationDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDepartureLocationDescription {
      get { return localizedDepartureLocationDescription_; }
      set {
        localizedDepartureLocationDescription_ = value;
      }
    }

    /// <summary>Field number for the "departurePlatform" field.</summary>
    public const int DeparturePlatformFieldNumber = 39;
    private string departurePlatform_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeparturePlatform {
      get { return departurePlatform_; }
      set {
        departurePlatform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDeparturePlatform" field.</summary>
    public const int LocalizedDeparturePlatformFieldNumber = 40;
    private global::PassKit.Grpc.LocalizedString localizedDeparturePlatform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDeparturePlatform {
      get { return localizedDeparturePlatform_; }
      set {
        localizedDeparturePlatform_ = value;
      }
    }

    /// <summary>Field number for the "departureStationName" field.</summary>
    public const int DepartureStationNameFieldNumber = 41;
    private string departureStationName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DepartureStationName {
      get { return departureStationName_; }
      set {
        departureStationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDepartureStationName" field.</summary>
    public const int LocalizedDepartureStationNameFieldNumber = 42;
    private global::PassKit.Grpc.LocalizedString localizedDepartureStationName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDepartureStationName {
      get { return localizedDepartureStationName_; }
      set {
        localizedDepartureStationName_ = value;
      }
    }

    /// <summary>Field number for the "departureTerminal" field.</summary>
    public const int DepartureTerminalFieldNumber = 43;
    private string departureTerminal_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DepartureTerminal {
      get { return departureTerminal_; }
      set {
        departureTerminal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDepartureTerminal" field.</summary>
    public const int LocalizedDepartureTerminalFieldNumber = 44;
    private global::PassKit.Grpc.LocalizedString localizedDepartureTerminal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDepartureTerminal {
      get { return localizedDepartureTerminal_; }
      set {
        localizedDepartureTerminal_ = value;
      }
    }

    /// <summary>Field number for the "destinationAirportCode" field.</summary>
    public const int DestinationAirportCodeFieldNumber = 45;
    private string destinationAirportCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DestinationAirportCode {
      get { return destinationAirportCode_; }
      set {
        destinationAirportCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDestinationAirportCode" field.</summary>
    public const int LocalizedDestinationAirportCodeFieldNumber = 46;
    private global::PassKit.Grpc.LocalizedString localizedDestinationAirportCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDestinationAirportCode {
      get { return localizedDestinationAirportCode_; }
      set {
        localizedDestinationAirportCode_ = value;
      }
    }

    /// <summary>Field number for the "destinationAirportName" field.</summary>
    public const int DestinationAirportNameFieldNumber = 47;
    private string destinationAirportName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DestinationAirportName {
      get { return destinationAirportName_; }
      set {
        destinationAirportName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDestinationAirportName" field.</summary>
    public const int LocalizedDestinationAirportNameFieldNumber = 48;
    private global::PassKit.Grpc.LocalizedString localizedDestinationAirportName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDestinationAirportName {
      get { return localizedDestinationAirportName_; }
      set {
        localizedDestinationAirportName_ = value;
      }
    }

    /// <summary>Field number for the "destinationGate" field.</summary>
    public const int DestinationGateFieldNumber = 49;
    private string destinationGate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DestinationGate {
      get { return destinationGate_; }
      set {
        destinationGate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDestinationGate" field.</summary>
    public const int LocalizedDestinationGateFieldNumber = 50;
    private global::PassKit.Grpc.LocalizedString localizedDestinationGate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDestinationGate {
      get { return localizedDestinationGate_; }
      set {
        localizedDestinationGate_ = value;
      }
    }

    /// <summary>Field number for the "destinationLocation" field.</summary>
    public const int DestinationLocationFieldNumber = 51;
    private string destinationLocation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DestinationLocation {
      get { return destinationLocation_; }
      set {
        destinationLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDestinationLocation" field.</summary>
    public const int LocalizedDestinationLocationFieldNumber = 52;
    private global::PassKit.Grpc.LocalizedString localizedDestinationLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDestinationLocation {
      get { return localizedDestinationLocation_; }
      set {
        localizedDestinationLocation_ = value;
      }
    }

    /// <summary>Field number for the "destinationLocationDescription" field.</summary>
    public const int DestinationLocationDescriptionFieldNumber = 53;
    private string destinationLocationDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DestinationLocationDescription {
      get { return destinationLocationDescription_; }
      set {
        destinationLocationDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDestinationLocationDescription" field.</summary>
    public const int LocalizedDestinationLocationDescriptionFieldNumber = 54;
    private global::PassKit.Grpc.LocalizedString localizedDestinationLocationDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDestinationLocationDescription {
      get { return localizedDestinationLocationDescription_; }
      set {
        localizedDestinationLocationDescription_ = value;
      }
    }

    /// <summary>Field number for the "destinationPlatform" field.</summary>
    public const int DestinationPlatformFieldNumber = 55;
    private string destinationPlatform_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DestinationPlatform {
      get { return destinationPlatform_; }
      set {
        destinationPlatform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDestinationPlatform" field.</summary>
    public const int LocalizedDestinationPlatformFieldNumber = 56;
    private global::PassKit.Grpc.LocalizedString localizedDestinationPlatform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDestinationPlatform {
      get { return localizedDestinationPlatform_; }
      set {
        localizedDestinationPlatform_ = value;
      }
    }

    /// <summary>Field number for the "destinationStationName" field.</summary>
    public const int DestinationStationNameFieldNumber = 57;
    private string destinationStationName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DestinationStationName {
      get { return destinationStationName_; }
      set {
        destinationStationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDestinationStationName" field.</summary>
    public const int LocalizedDestinationStationNameFieldNumber = 58;
    private global::PassKit.Grpc.LocalizedString localizedDestinationStationName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDestinationStationName {
      get { return localizedDestinationStationName_; }
      set {
        localizedDestinationStationName_ = value;
      }
    }

    /// <summary>Field number for the "destinationTerminal" field.</summary>
    public const int DestinationTerminalFieldNumber = 59;
    private string destinationTerminal_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DestinationTerminal {
      get { return destinationTerminal_; }
      set {
        destinationTerminal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedDestinationTerminal" field.</summary>
    public const int LocalizedDestinationTerminalFieldNumber = 60;
    private global::PassKit.Grpc.LocalizedString localizedDestinationTerminal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedDestinationTerminal {
      get { return localizedDestinationTerminal_; }
      set {
        localizedDestinationTerminal_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 61;
    private ulong duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "eventEndDate" field.</summary>
    public const int EventEndDateFieldNumber = 62;
    private global::Google.Protobuf.WellKnownTypes.Timestamp eventEndDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EventEndDate {
      get { return eventEndDate_; }
      set {
        eventEndDate_ = value;
      }
    }

    /// <summary>Field number for the "eventName" field.</summary>
    public const int EventNameFieldNumber = 63;
    private string eventName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventName {
      get { return eventName_; }
      set {
        eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedEventName" field.</summary>
    public const int LocalizedEventNameFieldNumber = 64;
    private global::PassKit.Grpc.LocalizedString localizedEventName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedEventName {
      get { return localizedEventName_; }
      set {
        localizedEventName_ = value;
      }
    }

    /// <summary>Field number for the "eventStartDate" field.</summary>
    public const int EventStartDateFieldNumber = 65;
    private global::Google.Protobuf.WellKnownTypes.Timestamp eventStartDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EventStartDate {
      get { return eventStartDate_; }
      set {
        eventStartDate_ = value;
      }
    }

    /// <summary>Field number for the "eventStartDateInfo" field.</summary>
    public const int EventStartDateInfoFieldNumber = 66;
    private global::PassKit.Grpc.SemanticEventDateInfo eventStartDateInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.SemanticEventDateInfo EventStartDateInfo {
      get { return eventStartDateInfo_; }
      set {
        eventStartDateInfo_ = value;
      }
    }

    /// <summary>Field number for the "eventType" field.</summary>
    public const int EventTypeFieldNumber = 67;
    private global::PassKit.Grpc.EventType eventType_ = global::PassKit.Grpc.EventType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.EventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "flightCode" field.</summary>
    public const int FlightCodeFieldNumber = 68;
    private string flightCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FlightCode {
      get { return flightCode_; }
      set {
        flightCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedFlightCode" field.</summary>
    public const int LocalizedFlightCodeFieldNumber = 69;
    private global::PassKit.Grpc.LocalizedString localizedFlightCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedFlightCode {
      get { return localizedFlightCode_; }
      set {
        localizedFlightCode_ = value;
      }
    }

    /// <summary>Field number for the "flightNumber" field.</summary>
    public const int FlightNumberFieldNumber = 70;
    private uint flightNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FlightNumber {
      get { return flightNumber_; }
      set {
        flightNumber_ = value;
      }
    }

    /// <summary>Field number for the "genre" field.</summary>
    public const int GenreFieldNumber = 71;
    private string genre_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Genre {
      get { return genre_; }
      set {
        genre_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedGenre" field.</summary>
    public const int LocalizedGenreFieldNumber = 72;
    private global::PassKit.Grpc.LocalizedString localizedGenre_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedGenre {
      get { return localizedGenre_; }
      set {
        localizedGenre_ = value;
      }
    }

    /// <summary>Field number for the "homeTeamAbbreviation" field.</summary>
    public const int HomeTeamAbbreviationFieldNumber = 73;
    private string homeTeamAbbreviation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HomeTeamAbbreviation {
      get { return homeTeamAbbreviation_; }
      set {
        homeTeamAbbreviation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedHomeTeamAbbreviation" field.</summary>
    public const int LocalizedHomeTeamAbbreviationFieldNumber = 74;
    private global::PassKit.Grpc.LocalizedString localizedHomeTeamAbbreviation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedHomeTeamAbbreviation {
      get { return localizedHomeTeamAbbreviation_; }
      set {
        localizedHomeTeamAbbreviation_ = value;
      }
    }

    /// <summary>Field number for the "homeTeamLocation" field.</summary>
    public const int HomeTeamLocationFieldNumber = 75;
    private string homeTeamLocation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HomeTeamLocation {
      get { return homeTeamLocation_; }
      set {
        homeTeamLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedHomeTeamLocation" field.</summary>
    public const int LocalizedHomeTeamLocationFieldNumber = 76;
    private global::PassKit.Grpc.LocalizedString localizedHomeTeamLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedHomeTeamLocation {
      get { return localizedHomeTeamLocation_; }
      set {
        localizedHomeTeamLocation_ = value;
      }
    }

    /// <summary>Field number for the "homeTeamName" field.</summary>
    public const int HomeTeamNameFieldNumber = 77;
    private string homeTeamName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HomeTeamName {
      get { return homeTeamName_; }
      set {
        homeTeamName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedHomeTeamName" field.</summary>
    public const int LocalizedHomeTeamNameFieldNumber = 78;
    private global::PassKit.Grpc.LocalizedString localizedHomeTeamName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedHomeTeamName {
      get { return localizedHomeTeamName_; }
      set {
        localizedHomeTeamName_ = value;
      }
    }

    /// <summary>Field number for the "leagueAbbreviation" field.</summary>
    public const int LeagueAbbreviationFieldNumber = 79;
    private string leagueAbbreviation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LeagueAbbreviation {
      get { return leagueAbbreviation_; }
      set {
        leagueAbbreviation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedLeagueAbbreviation" field.</summary>
    public const int LocalizedLeagueAbbreviationFieldNumber = 80;
    private global::PassKit.Grpc.LocalizedString localizedLeagueAbbreviation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedLeagueAbbreviation {
      get { return localizedLeagueAbbreviation_; }
      set {
        localizedLeagueAbbreviation_ = value;
      }
    }

    /// <summary>Field number for the "leagueName" field.</summary>
    public const int LeagueNameFieldNumber = 81;
    private string leagueName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LeagueName {
      get { return leagueName_; }
      set {
        leagueName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedLeagueName" field.</summary>
    public const int LocalizedLeagueNameFieldNumber = 82;
    private global::PassKit.Grpc.LocalizedString localizedLeagueName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedLeagueName {
      get { return localizedLeagueName_; }
      set {
        localizedLeagueName_ = value;
      }
    }

    /// <summary>Field number for the "membershipProgramName" field.</summary>
    public const int MembershipProgramNameFieldNumber = 83;
    private string membershipProgramName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MembershipProgramName {
      get { return membershipProgramName_; }
      set {
        membershipProgramName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedMembershipProgramName" field.</summary>
    public const int LocalizedMembershipProgramNameFieldNumber = 84;
    private global::PassKit.Grpc.LocalizedString localizedMembershipProgramName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedMembershipProgramName {
      get { return localizedMembershipProgramName_; }
      set {
        localizedMembershipProgramName_ = value;
      }
    }

    /// <summary>Field number for the "membershipProgramNumber" field.</summary>
    public const int MembershipProgramNumberFieldNumber = 85;
    private string membershipProgramNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MembershipProgramNumber {
      get { return membershipProgramNumber_; }
      set {
        membershipProgramNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "originalArrivalDate" field.</summary>
    public const int OriginalArrivalDateFieldNumber = 86;
    private global::Google.Protobuf.WellKnownTypes.Timestamp originalArrivalDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OriginalArrivalDate {
      get { return originalArrivalDate_; }
      set {
        originalArrivalDate_ = value;
      }
    }

    /// <summary>Field number for the "originalBoardingDate" field.</summary>
    public const int OriginalBoardingDateFieldNumber = 87;
    private global::Google.Protobuf.WellKnownTypes.Timestamp originalBoardingDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OriginalBoardingDate {
      get { return originalBoardingDate_; }
      set {
        originalBoardingDate_ = value;
      }
    }

    /// <summary>Field number for the "originalDepartureDate" field.</summary>
    public const int OriginalDepartureDateFieldNumber = 88;
    private global::Google.Protobuf.WellKnownTypes.Timestamp originalDepartureDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OriginalDepartureDate {
      get { return originalDepartureDate_; }
      set {
        originalDepartureDate_ = value;
      }
    }

    /// <summary>Field number for the "passengerName" field.</summary>
    public const int PassengerNameFieldNumber = 89;
    private global::PassKit.Grpc.SemanticPersonName passengerName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.SemanticPersonName PassengerName {
      get { return passengerName_; }
      set {
        passengerName_ = value;
      }
    }

    /// <summary>Field number for the "performerNames" field.</summary>
    public const int PerformerNamesFieldNumber = 90;
    private static readonly pb::FieldCodec<string> _repeated_performerNames_codec
        = pb::FieldCodec.ForString(722);
    private readonly pbc::RepeatedField<string> performerNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PerformerNames {
      get { return performerNames_; }
    }

    /// <summary>Field number for the "priorityStatus" field.</summary>
    public const int PriorityStatusFieldNumber = 91;
    private string priorityStatus_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PriorityStatus {
      get { return priorityStatus_; }
      set {
        priorityStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedPriorityStatus" field.</summary>
    public const int LocalizedPriorityStatusFieldNumber = 92;
    private global::PassKit.Grpc.LocalizedString localizedPriorityStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedPriorityStatus {
      get { return localizedPriorityStatus_; }
      set {
        localizedPriorityStatus_ = value;
      }
    }

    /// <summary>Field number for the "albumIds" field.</summary>
    public const int AlbumIdsFieldNumber = 93;
    private static readonly pb::FieldCodec<string> _repeated_albumIds_codec
        = pb::FieldCodec.ForString(746);
    private readonly pbc::RepeatedField<string> albumIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> AlbumIds {
      get { return albumIds_; }
    }

    /// <summary>Field number for the "playlistIds" field.</summary>
    public const int PlaylistIdsFieldNumber = 94;
    private static readonly pb::FieldCodec<string> _repeated_playlistIds_codec
        = pb::FieldCodec.ForString(754);
    private readonly pbc::RepeatedField<string> playlistIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PlaylistIds {
      get { return playlistIds_; }
    }

    /// <summary>Field number for the "seats" field.</summary>
    public const int SeatsFieldNumber = 95;
    private static readonly pb::FieldCodec<global::PassKit.Grpc.SemanticSeat> _repeated_seats_codec
        = pb::FieldCodec.ForMessage(762, global::PassKit.Grpc.SemanticSeat.Parser);
    private readonly pbc::RepeatedField<global::PassKit.Grpc.SemanticSeat> seats_ = new pbc::RepeatedField<global::PassKit.Grpc.SemanticSeat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::PassKit.Grpc.SemanticSeat> Seats {
      get { return seats_; }
    }

    /// <summary>Field number for the "securityScreening" field.</summary>
    public const int SecurityScreeningFieldNumber = 96;
    private string securityScreening_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SecurityScreening {
      get { return securityScreening_; }
      set {
        securityScreening_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedSecurityScreening" field.</summary>
    public const int LocalizedSecurityScreeningFieldNumber = 97;
    private global::PassKit.Grpc.LocalizedString localizedSecurityScreening_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedSecurityScreening {
      get { return localizedSecurityScreening_; }
      set {
        localizedSecurityScreening_ = value;
      }
    }

    /// <summary>Field number for the "silenceRequested" field.</summary>
    public const int SilenceRequestedFieldNumber = 98;
    private bool silenceRequested_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SilenceRequested {
      get { return silenceRequested_; }
      set {
        silenceRequested_ = value;
      }
    }

    /// <summary>Field number for the "sportName" field.</summary>
    public const int SportNameFieldNumber = 99;
    private string sportName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SportName {
      get { return sportName_; }
      set {
        sportName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedSportName" field.</summary>
    public const int LocalizedSportNameFieldNumber = 100;
    private global::PassKit.Grpc.LocalizedString localizedSportName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedSportName {
      get { return localizedSportName_; }
      set {
        localizedSportName_ = value;
      }
    }

    /// <summary>Field number for the "totalPrice" field.</summary>
    public const int TotalPriceFieldNumber = 101;
    private global::PassKit.Grpc.SemanticCurrencyAmount totalPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.SemanticCurrencyAmount TotalPrice {
      get { return totalPrice_; }
      set {
        totalPrice_ = value;
      }
    }

    /// <summary>Field number for the "transitProvider" field.</summary>
    public const int TransitProviderFieldNumber = 102;
    private string transitProvider_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TransitProvider {
      get { return transitProvider_; }
      set {
        transitProvider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedTransitProvider" field.</summary>
    public const int LocalizedTransitProviderFieldNumber = 103;
    private global::PassKit.Grpc.LocalizedString localizedTransitProvider_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedTransitProvider {
      get { return localizedTransitProvider_; }
      set {
        localizedTransitProvider_ = value;
      }
    }

    /// <summary>Field number for the "transitStatus" field.</summary>
    public const int TransitStatusFieldNumber = 104;
    private string transitStatus_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TransitStatus {
      get { return transitStatus_; }
      set {
        transitStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedTransitStatus" field.</summary>
    public const int LocalizedTransitStatusFieldNumber = 105;
    private global::PassKit.Grpc.LocalizedString localizedTransitStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedTransitStatus {
      get { return localizedTransitStatus_; }
      set {
        localizedTransitStatus_ = value;
      }
    }

    /// <summary>Field number for the "transitStatusReason" field.</summary>
    public const int TransitStatusReasonFieldNumber = 106;
    private string transitStatusReason_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TransitStatusReason {
      get { return transitStatusReason_; }
      set {
        transitStatusReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedTransitStatusReason" field.</summary>
    public const int LocalizedTransitStatusReasonFieldNumber = 107;
    private global::PassKit.Grpc.LocalizedString localizedTransitStatusReason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedTransitStatusReason {
      get { return localizedTransitStatusReason_; }
      set {
        localizedTransitStatusReason_ = value;
      }
    }

    /// <summary>Field number for the "vehicleName" field.</summary>
    public const int VehicleNameFieldNumber = 108;
    private string vehicleName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VehicleName {
      get { return vehicleName_; }
      set {
        vehicleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedVehicleName" field.</summary>
    public const int LocalizedVehicleNameFieldNumber = 109;
    private global::PassKit.Grpc.LocalizedString localizedVehicleName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedVehicleName {
      get { return localizedVehicleName_; }
      set {
        localizedVehicleName_ = value;
      }
    }

    /// <summary>Field number for the "vehicleNumber" field.</summary>
    public const int VehicleNumberFieldNumber = 110;
    private string vehicleNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VehicleNumber {
      get { return vehicleNumber_; }
      set {
        vehicleNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedVehicleNumber" field.</summary>
    public const int LocalizedVehicleNumberFieldNumber = 111;
    private global::PassKit.Grpc.LocalizedString localizedVehicleNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedVehicleNumber {
      get { return localizedVehicleNumber_; }
      set {
        localizedVehicleNumber_ = value;
      }
    }

    /// <summary>Field number for the "vehicleType" field.</summary>
    public const int VehicleTypeFieldNumber = 112;
    private string vehicleType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VehicleType {
      get { return vehicleType_; }
      set {
        vehicleType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedVehicleType" field.</summary>
    public const int LocalizedVehicleTypeFieldNumber = 113;
    private global::PassKit.Grpc.LocalizedString localizedVehicleType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedVehicleType {
      get { return localizedVehicleType_; }
      set {
        localizedVehicleType_ = value;
      }
    }

    /// <summary>Field number for the "venueBoxOfficeOpenDate" field.</summary>
    public const int VenueBoxOfficeOpenDateFieldNumber = 114;
    private global::Google.Protobuf.WellKnownTypes.Timestamp venueBoxOfficeOpenDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VenueBoxOfficeOpenDate {
      get { return venueBoxOfficeOpenDate_; }
      set {
        venueBoxOfficeOpenDate_ = value;
      }
    }

    /// <summary>Field number for the "venueCloseDate" field.</summary>
    public const int VenueCloseDateFieldNumber = 115;
    private global::Google.Protobuf.WellKnownTypes.Timestamp venueCloseDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VenueCloseDate {
      get { return venueCloseDate_; }
      set {
        venueCloseDate_ = value;
      }
    }

    /// <summary>Field number for the "venueDoorsOpenDate" field.</summary>
    public const int VenueDoorsOpenDateFieldNumber = 116;
    private global::Google.Protobuf.WellKnownTypes.Timestamp venueDoorsOpenDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VenueDoorsOpenDate {
      get { return venueDoorsOpenDate_; }
      set {
        venueDoorsOpenDate_ = value;
      }
    }

    /// <summary>Field number for the "venueEntrance" field.</summary>
    public const int VenueEntranceFieldNumber = 117;
    private string venueEntrance_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueEntrance {
      get { return venueEntrance_; }
      set {
        venueEntrance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedVenueEntrance" field.</summary>
    public const int LocalizedVenueEntranceFieldNumber = 118;
    private global::PassKit.Grpc.LocalizedString localizedVenueEntrance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedVenueEntrance {
      get { return localizedVenueEntrance_; }
      set {
        localizedVenueEntrance_ = value;
      }
    }

    /// <summary>Field number for the "venueLocation" field.</summary>
    public const int VenueLocationFieldNumber = 119;
    private global::PassKit.Grpc.SemanticLocation venueLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.SemanticLocation VenueLocation {
      get { return venueLocation_; }
      set {
        venueLocation_ = value;
      }
    }

    /// <summary>Field number for the "venueName" field.</summary>
    public const int VenueNameFieldNumber = 120;
    private string venueName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueName {
      get { return venueName_; }
      set {
        venueName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedVenueName" field.</summary>
    public const int LocalizedVenueNameFieldNumber = 121;
    private global::PassKit.Grpc.LocalizedString localizedVenueName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedVenueName {
      get { return localizedVenueName_; }
      set {
        localizedVenueName_ = value;
      }
    }

    /// <summary>Field number for the "venuePhone_number" field.</summary>
    public const int VenuePhoneNumberFieldNumber = 122;
    private string venuePhoneNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenuePhoneNumber {
      get { return venuePhoneNumber_; }
      set {
        venuePhoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedVenuePhoneNumber" field.</summary>
    public const int LocalizedVenuePhoneNumberFieldNumber = 123;
    private global::PassKit.Grpc.LocalizedString localizedVenuePhoneNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedVenuePhoneNumber {
      get { return localizedVenuePhoneNumber_; }
      set {
        localizedVenuePhoneNumber_ = value;
      }
    }

    /// <summary>Field number for the "venueRegionName" field.</summary>
    public const int VenueRegionNameFieldNumber = 124;
    private string venueRegionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueRegionName {
      get { return venueRegionName_; }
      set {
        venueRegionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedVenueRegionName" field.</summary>
    public const int LocalizedVenueRegionNameFieldNumber = 125;
    private global::PassKit.Grpc.LocalizedString localizedVenueRegionName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedVenueRegionName {
      get { return localizedVenueRegionName_; }
      set {
        localizedVenueRegionName_ = value;
      }
    }

    /// <summary>Field number for the "venueRoom" field.</summary>
    public const int VenueRoomFieldNumber = 126;
    private string venueRoom_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueRoom {
      get { return venueRoom_; }
      set {
        venueRoom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedVenueRoom" field.</summary>
    public const int LocalizedVenueRoomFieldNumber = 127;
    private global::PassKit.Grpc.LocalizedString localizedVenueRoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedVenueRoom {
      get { return localizedVenueRoom_; }
      set {
        localizedVenueRoom_ = value;
      }
    }

    /// <summary>Field number for the "wifiAccess" field.</summary>
    public const int WifiAccessFieldNumber = 128;
    private static readonly pb::FieldCodec<global::PassKit.Grpc.SemanticWifiNetwork> _repeated_wifiAccess_codec
        = pb::FieldCodec.ForMessage(1026, global::PassKit.Grpc.SemanticWifiNetwork.Parser);
    private readonly pbc::RepeatedField<global::PassKit.Grpc.SemanticWifiNetwork> wifiAccess_ = new pbc::RepeatedField<global::PassKit.Grpc.SemanticWifiNetwork>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::PassKit.Grpc.SemanticWifiNetwork> WifiAccess {
      get { return wifiAccess_; }
    }

    /// <summary>Field number for the "venueFanZoneOpenDate" field.</summary>
    public const int VenueFanZoneOpenDateFieldNumber = 129;
    private global::Google.Protobuf.WellKnownTypes.Timestamp venueFanZoneOpenDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VenueFanZoneOpenDate {
      get { return venueFanZoneOpenDate_; }
      set {
        venueFanZoneOpenDate_ = value;
      }
    }

    /// <summary>Field number for the "venueGatesOpenDate" field.</summary>
    public const int VenueGatesOpenDateFieldNumber = 130;
    private global::Google.Protobuf.WellKnownTypes.Timestamp venueGatesOpenDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VenueGatesOpenDate {
      get { return venueGatesOpenDate_; }
      set {
        venueGatesOpenDate_ = value;
      }
    }

    /// <summary>Field number for the "venueParkingLotsOpenDate" field.</summary>
    public const int VenueParkingLotsOpenDateFieldNumber = 131;
    private global::Google.Protobuf.WellKnownTypes.Timestamp venueParkingLotsOpenDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VenueParkingLotsOpenDate {
      get { return venueParkingLotsOpenDate_; }
      set {
        venueParkingLotsOpenDate_ = value;
      }
    }

    /// <summary>Field number for the "venueEntranceDoor" field.</summary>
    public const int VenueEntranceDoorFieldNumber = 132;
    private string venueEntranceDoor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueEntranceDoor {
      get { return venueEntranceDoor_; }
      set {
        venueEntranceDoor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedVenueEntranceDoor" field.</summary>
    public const int LocalizedVenueEntranceDoorFieldNumber = 133;
    private global::PassKit.Grpc.LocalizedString localizedVenueEntranceDoor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedVenueEntranceDoor {
      get { return localizedVenueEntranceDoor_; }
      set {
        localizedVenueEntranceDoor_ = value;
      }
    }

    /// <summary>Field number for the "venueEntranceGate" field.</summary>
    public const int VenueEntranceGateFieldNumber = 134;
    private string venueEntranceGate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueEntranceGate {
      get { return venueEntranceGate_; }
      set {
        venueEntranceGate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedVenueEntranceGate" field.</summary>
    public const int LocalizedVenueEntranceGateFieldNumber = 135;
    private global::PassKit.Grpc.LocalizedString localizedVenueEntranceGate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedVenueEntranceGate {
      get { return localizedVenueEntranceGate_; }
      set {
        localizedVenueEntranceGate_ = value;
      }
    }

    /// <summary>Field number for the "venueEntrancePortal" field.</summary>
    public const int VenueEntrancePortalFieldNumber = 136;
    private string venueEntrancePortal_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueEntrancePortal {
      get { return venueEntrancePortal_; }
      set {
        venueEntrancePortal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedVenueEntrancePortal" field.</summary>
    public const int LocalizedVenueEntrancePortalFieldNumber = 137;
    private global::PassKit.Grpc.LocalizedString localizedVenueEntrancePortal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedVenueEntrancePortal {
      get { return localizedVenueEntrancePortal_; }
      set {
        localizedVenueEntrancePortal_ = value;
      }
    }

    /// <summary>Field number for the "entranceDescription" field.</summary>
    public const int EntranceDescriptionFieldNumber = 138;
    private string entranceDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntranceDescription {
      get { return entranceDescription_; }
      set {
        entranceDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedEntranceDescription" field.</summary>
    public const int LocalizedEntranceDescriptionFieldNumber = 139;
    private global::PassKit.Grpc.LocalizedString localizedEntranceDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedEntranceDescription {
      get { return localizedEntranceDescription_; }
      set {
        localizedEntranceDescription_ = value;
      }
    }

    /// <summary>Field number for the "tailgatingAllowed" field.</summary>
    public const int TailgatingAllowedFieldNumber = 140;
    private bool tailgatingAllowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TailgatingAllowed {
      get { return tailgatingAllowed_; }
      set {
        tailgatingAllowed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SemanticTags);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SemanticTags other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdmissionLevel != other.AdmissionLevel) return false;
      if (!object.Equals(LocalizedAdmissionLevel, other.LocalizedAdmissionLevel)) return false;
      if (AdmissionLevelAbbreviation != other.AdmissionLevelAbbreviation) return false;
      if (!object.Equals(LocalizedAdmissionLevelAbbreviation, other.LocalizedAdmissionLevelAbbreviation)) return false;
      if (AdditionalTicketAttributes != other.AdditionalTicketAttributes) return false;
      if (!object.Equals(LocalizedAdditionalTicketAttributes, other.LocalizedAdditionalTicketAttributes)) return false;
      if (AirlineCode != other.AirlineCode) return false;
      if (!object.Equals(LocalizedAirlineCode, other.LocalizedAirlineCode)) return false;
      if (AttendeeName != other.AttendeeName) return false;
      if (!object.Equals(LocalizedAttendeeName, other.LocalizedAttendeeName)) return false;
      if(!artistIds_.Equals(other.artistIds_)) return false;
      if (AwayTeamAbbreviation != other.AwayTeamAbbreviation) return false;
      if (!object.Equals(LocalizedAwayTeamAbbreviation, other.LocalizedAwayTeamAbbreviation)) return false;
      if (AwayTeamLocation != other.AwayTeamLocation) return false;
      if (!object.Equals(LocalizedAwayTeamLocation, other.LocalizedAwayTeamLocation)) return false;
      if (AwayTeamName != other.AwayTeamName) return false;
      if (!object.Equals(LocalizedAwayTeamName, other.LocalizedAwayTeamName)) return false;
      if (!object.Equals(Balance, other.Balance)) return false;
      if (BoardingGroup != other.BoardingGroup) return false;
      if (!object.Equals(LocalizedBoardingGroup, other.LocalizedBoardingGroup)) return false;
      if (BoardingSequenceNumber != other.BoardingSequenceNumber) return false;
      if (CarNumber != other.CarNumber) return false;
      if (!object.Equals(LocalizedCarNumber, other.LocalizedCarNumber)) return false;
      if (ConfirmationNumber != other.ConfirmationNumber) return false;
      if (!object.Equals(LocalizedConfirmationNumber, other.LocalizedConfirmationNumber)) return false;
      if (!object.Equals(CurrentArrivalDate, other.CurrentArrivalDate)) return false;
      if (!object.Equals(CurrentBoardingDate, other.CurrentBoardingDate)) return false;
      if (!object.Equals(CurrentDepartureDate, other.CurrentDepartureDate)) return false;
      if (DepartureAirportCode != other.DepartureAirportCode) return false;
      if (!object.Equals(LocalizedDepartureAirportCode, other.LocalizedDepartureAirportCode)) return false;
      if (DepartureAirportName != other.DepartureAirportName) return false;
      if (!object.Equals(LocalizedDepartureAirportName, other.LocalizedDepartureAirportName)) return false;
      if (DepartureGate != other.DepartureGate) return false;
      if (!object.Equals(LocalizedDepartureGate, other.LocalizedDepartureGate)) return false;
      if (DepartureLocation != other.DepartureLocation) return false;
      if (!object.Equals(LocalizedDepartureLocation, other.LocalizedDepartureLocation)) return false;
      if (DepartureLocationDescription != other.DepartureLocationDescription) return false;
      if (!object.Equals(LocalizedDepartureLocationDescription, other.LocalizedDepartureLocationDescription)) return false;
      if (DeparturePlatform != other.DeparturePlatform) return false;
      if (!object.Equals(LocalizedDeparturePlatform, other.LocalizedDeparturePlatform)) return false;
      if (DepartureStationName != other.DepartureStationName) return false;
      if (!object.Equals(LocalizedDepartureStationName, other.LocalizedDepartureStationName)) return false;
      if (DepartureTerminal != other.DepartureTerminal) return false;
      if (!object.Equals(LocalizedDepartureTerminal, other.LocalizedDepartureTerminal)) return false;
      if (DestinationAirportCode != other.DestinationAirportCode) return false;
      if (!object.Equals(LocalizedDestinationAirportCode, other.LocalizedDestinationAirportCode)) return false;
      if (DestinationAirportName != other.DestinationAirportName) return false;
      if (!object.Equals(LocalizedDestinationAirportName, other.LocalizedDestinationAirportName)) return false;
      if (DestinationGate != other.DestinationGate) return false;
      if (!object.Equals(LocalizedDestinationGate, other.LocalizedDestinationGate)) return false;
      if (DestinationLocation != other.DestinationLocation) return false;
      if (!object.Equals(LocalizedDestinationLocation, other.LocalizedDestinationLocation)) return false;
      if (DestinationLocationDescription != other.DestinationLocationDescription) return false;
      if (!object.Equals(LocalizedDestinationLocationDescription, other.LocalizedDestinationLocationDescription)) return false;
      if (DestinationPlatform != other.DestinationPlatform) return false;
      if (!object.Equals(LocalizedDestinationPlatform, other.LocalizedDestinationPlatform)) return false;
      if (DestinationStationName != other.DestinationStationName) return false;
      if (!object.Equals(LocalizedDestinationStationName, other.LocalizedDestinationStationName)) return false;
      if (DestinationTerminal != other.DestinationTerminal) return false;
      if (!object.Equals(LocalizedDestinationTerminal, other.LocalizedDestinationTerminal)) return false;
      if (Duration != other.Duration) return false;
      if (!object.Equals(EventEndDate, other.EventEndDate)) return false;
      if (EventName != other.EventName) return false;
      if (!object.Equals(LocalizedEventName, other.LocalizedEventName)) return false;
      if (!object.Equals(EventStartDate, other.EventStartDate)) return false;
      if (!object.Equals(EventStartDateInfo, other.EventStartDateInfo)) return false;
      if (EventType != other.EventType) return false;
      if (FlightCode != other.FlightCode) return false;
      if (!object.Equals(LocalizedFlightCode, other.LocalizedFlightCode)) return false;
      if (FlightNumber != other.FlightNumber) return false;
      if (Genre != other.Genre) return false;
      if (!object.Equals(LocalizedGenre, other.LocalizedGenre)) return false;
      if (HomeTeamAbbreviation != other.HomeTeamAbbreviation) return false;
      if (!object.Equals(LocalizedHomeTeamAbbreviation, other.LocalizedHomeTeamAbbreviation)) return false;
      if (HomeTeamLocation != other.HomeTeamLocation) return false;
      if (!object.Equals(LocalizedHomeTeamLocation, other.LocalizedHomeTeamLocation)) return false;
      if (HomeTeamName != other.HomeTeamName) return false;
      if (!object.Equals(LocalizedHomeTeamName, other.LocalizedHomeTeamName)) return false;
      if (LeagueAbbreviation != other.LeagueAbbreviation) return false;
      if (!object.Equals(LocalizedLeagueAbbreviation, other.LocalizedLeagueAbbreviation)) return false;
      if (LeagueName != other.LeagueName) return false;
      if (!object.Equals(LocalizedLeagueName, other.LocalizedLeagueName)) return false;
      if (MembershipProgramName != other.MembershipProgramName) return false;
      if (!object.Equals(LocalizedMembershipProgramName, other.LocalizedMembershipProgramName)) return false;
      if (MembershipProgramNumber != other.MembershipProgramNumber) return false;
      if (!object.Equals(OriginalArrivalDate, other.OriginalArrivalDate)) return false;
      if (!object.Equals(OriginalBoardingDate, other.OriginalBoardingDate)) return false;
      if (!object.Equals(OriginalDepartureDate, other.OriginalDepartureDate)) return false;
      if (!object.Equals(PassengerName, other.PassengerName)) return false;
      if(!performerNames_.Equals(other.performerNames_)) return false;
      if (PriorityStatus != other.PriorityStatus) return false;
      if (!object.Equals(LocalizedPriorityStatus, other.LocalizedPriorityStatus)) return false;
      if(!albumIds_.Equals(other.albumIds_)) return false;
      if(!playlistIds_.Equals(other.playlistIds_)) return false;
      if(!seats_.Equals(other.seats_)) return false;
      if (SecurityScreening != other.SecurityScreening) return false;
      if (!object.Equals(LocalizedSecurityScreening, other.LocalizedSecurityScreening)) return false;
      if (SilenceRequested != other.SilenceRequested) return false;
      if (SportName != other.SportName) return false;
      if (!object.Equals(LocalizedSportName, other.LocalizedSportName)) return false;
      if (!object.Equals(TotalPrice, other.TotalPrice)) return false;
      if (TransitProvider != other.TransitProvider) return false;
      if (!object.Equals(LocalizedTransitProvider, other.LocalizedTransitProvider)) return false;
      if (TransitStatus != other.TransitStatus) return false;
      if (!object.Equals(LocalizedTransitStatus, other.LocalizedTransitStatus)) return false;
      if (TransitStatusReason != other.TransitStatusReason) return false;
      if (!object.Equals(LocalizedTransitStatusReason, other.LocalizedTransitStatusReason)) return false;
      if (VehicleName != other.VehicleName) return false;
      if (!object.Equals(LocalizedVehicleName, other.LocalizedVehicleName)) return false;
      if (VehicleNumber != other.VehicleNumber) return false;
      if (!object.Equals(LocalizedVehicleNumber, other.LocalizedVehicleNumber)) return false;
      if (VehicleType != other.VehicleType) return false;
      if (!object.Equals(LocalizedVehicleType, other.LocalizedVehicleType)) return false;
      if (!object.Equals(VenueBoxOfficeOpenDate, other.VenueBoxOfficeOpenDate)) return false;
      if (!object.Equals(VenueCloseDate, other.VenueCloseDate)) return false;
      if (!object.Equals(VenueDoorsOpenDate, other.VenueDoorsOpenDate)) return false;
      if (VenueEntrance != other.VenueEntrance) return false;
      if (!object.Equals(LocalizedVenueEntrance, other.LocalizedVenueEntrance)) return false;
      if (!object.Equals(VenueLocation, other.VenueLocation)) return false;
      if (VenueName != other.VenueName) return false;
      if (!object.Equals(LocalizedVenueName, other.LocalizedVenueName)) return false;
      if (VenuePhoneNumber != other.VenuePhoneNumber) return false;
      if (!object.Equals(LocalizedVenuePhoneNumber, other.LocalizedVenuePhoneNumber)) return false;
      if (VenueRegionName != other.VenueRegionName) return false;
      if (!object.Equals(LocalizedVenueRegionName, other.LocalizedVenueRegionName)) return false;
      if (VenueRoom != other.VenueRoom) return false;
      if (!object.Equals(LocalizedVenueRoom, other.LocalizedVenueRoom)) return false;
      if(!wifiAccess_.Equals(other.wifiAccess_)) return false;
      if (!object.Equals(VenueFanZoneOpenDate, other.VenueFanZoneOpenDate)) return false;
      if (!object.Equals(VenueGatesOpenDate, other.VenueGatesOpenDate)) return false;
      if (!object.Equals(VenueParkingLotsOpenDate, other.VenueParkingLotsOpenDate)) return false;
      if (VenueEntranceDoor != other.VenueEntranceDoor) return false;
      if (!object.Equals(LocalizedVenueEntranceDoor, other.LocalizedVenueEntranceDoor)) return false;
      if (VenueEntranceGate != other.VenueEntranceGate) return false;
      if (!object.Equals(LocalizedVenueEntranceGate, other.LocalizedVenueEntranceGate)) return false;
      if (VenueEntrancePortal != other.VenueEntrancePortal) return false;
      if (!object.Equals(LocalizedVenueEntrancePortal, other.LocalizedVenueEntrancePortal)) return false;
      if (EntranceDescription != other.EntranceDescription) return false;
      if (!object.Equals(LocalizedEntranceDescription, other.LocalizedEntranceDescription)) return false;
      if (TailgatingAllowed != other.TailgatingAllowed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AdmissionLevel.Length != 0) hash ^= AdmissionLevel.GetHashCode();
      if (localizedAdmissionLevel_ != null) hash ^= LocalizedAdmissionLevel.GetHashCode();
      if (AdmissionLevelAbbreviation.Length != 0) hash ^= AdmissionLevelAbbreviation.GetHashCode();
      if (localizedAdmissionLevelAbbreviation_ != null) hash ^= LocalizedAdmissionLevelAbbreviation.GetHashCode();
      if (AdditionalTicketAttributes.Length != 0) hash ^= AdditionalTicketAttributes.GetHashCode();
      if (localizedAdditionalTicketAttributes_ != null) hash ^= LocalizedAdditionalTicketAttributes.GetHashCode();
      if (AirlineCode.Length != 0) hash ^= AirlineCode.GetHashCode();
      if (localizedAirlineCode_ != null) hash ^= LocalizedAirlineCode.GetHashCode();
      if (AttendeeName.Length != 0) hash ^= AttendeeName.GetHashCode();
      if (localizedAttendeeName_ != null) hash ^= LocalizedAttendeeName.GetHashCode();
      hash ^= artistIds_.GetHashCode();
      if (AwayTeamAbbreviation.Length != 0) hash ^= AwayTeamAbbreviation.GetHashCode();
      if (localizedAwayTeamAbbreviation_ != null) hash ^= LocalizedAwayTeamAbbreviation.GetHashCode();
      if (AwayTeamLocation.Length != 0) hash ^= AwayTeamLocation.GetHashCode();
      if (localizedAwayTeamLocation_ != null) hash ^= LocalizedAwayTeamLocation.GetHashCode();
      if (AwayTeamName.Length != 0) hash ^= AwayTeamName.GetHashCode();
      if (localizedAwayTeamName_ != null) hash ^= LocalizedAwayTeamName.GetHashCode();
      if (balance_ != null) hash ^= Balance.GetHashCode();
      if (BoardingGroup.Length != 0) hash ^= BoardingGroup.GetHashCode();
      if (localizedBoardingGroup_ != null) hash ^= LocalizedBoardingGroup.GetHashCode();
      if (BoardingSequenceNumber.Length != 0) hash ^= BoardingSequenceNumber.GetHashCode();
      if (CarNumber.Length != 0) hash ^= CarNumber.GetHashCode();
      if (localizedCarNumber_ != null) hash ^= LocalizedCarNumber.GetHashCode();
      if (ConfirmationNumber.Length != 0) hash ^= ConfirmationNumber.GetHashCode();
      if (localizedConfirmationNumber_ != null) hash ^= LocalizedConfirmationNumber.GetHashCode();
      if (currentArrivalDate_ != null) hash ^= CurrentArrivalDate.GetHashCode();
      if (currentBoardingDate_ != null) hash ^= CurrentBoardingDate.GetHashCode();
      if (currentDepartureDate_ != null) hash ^= CurrentDepartureDate.GetHashCode();
      if (DepartureAirportCode.Length != 0) hash ^= DepartureAirportCode.GetHashCode();
      if (localizedDepartureAirportCode_ != null) hash ^= LocalizedDepartureAirportCode.GetHashCode();
      if (DepartureAirportName.Length != 0) hash ^= DepartureAirportName.GetHashCode();
      if (localizedDepartureAirportName_ != null) hash ^= LocalizedDepartureAirportName.GetHashCode();
      if (DepartureGate.Length != 0) hash ^= DepartureGate.GetHashCode();
      if (localizedDepartureGate_ != null) hash ^= LocalizedDepartureGate.GetHashCode();
      if (DepartureLocation.Length != 0) hash ^= DepartureLocation.GetHashCode();
      if (localizedDepartureLocation_ != null) hash ^= LocalizedDepartureLocation.GetHashCode();
      if (DepartureLocationDescription.Length != 0) hash ^= DepartureLocationDescription.GetHashCode();
      if (localizedDepartureLocationDescription_ != null) hash ^= LocalizedDepartureLocationDescription.GetHashCode();
      if (DeparturePlatform.Length != 0) hash ^= DeparturePlatform.GetHashCode();
      if (localizedDeparturePlatform_ != null) hash ^= LocalizedDeparturePlatform.GetHashCode();
      if (DepartureStationName.Length != 0) hash ^= DepartureStationName.GetHashCode();
      if (localizedDepartureStationName_ != null) hash ^= LocalizedDepartureStationName.GetHashCode();
      if (DepartureTerminal.Length != 0) hash ^= DepartureTerminal.GetHashCode();
      if (localizedDepartureTerminal_ != null) hash ^= LocalizedDepartureTerminal.GetHashCode();
      if (DestinationAirportCode.Length != 0) hash ^= DestinationAirportCode.GetHashCode();
      if (localizedDestinationAirportCode_ != null) hash ^= LocalizedDestinationAirportCode.GetHashCode();
      if (DestinationAirportName.Length != 0) hash ^= DestinationAirportName.GetHashCode();
      if (localizedDestinationAirportName_ != null) hash ^= LocalizedDestinationAirportName.GetHashCode();
      if (DestinationGate.Length != 0) hash ^= DestinationGate.GetHashCode();
      if (localizedDestinationGate_ != null) hash ^= LocalizedDestinationGate.GetHashCode();
      if (DestinationLocation.Length != 0) hash ^= DestinationLocation.GetHashCode();
      if (localizedDestinationLocation_ != null) hash ^= LocalizedDestinationLocation.GetHashCode();
      if (DestinationLocationDescription.Length != 0) hash ^= DestinationLocationDescription.GetHashCode();
      if (localizedDestinationLocationDescription_ != null) hash ^= LocalizedDestinationLocationDescription.GetHashCode();
      if (DestinationPlatform.Length != 0) hash ^= DestinationPlatform.GetHashCode();
      if (localizedDestinationPlatform_ != null) hash ^= LocalizedDestinationPlatform.GetHashCode();
      if (DestinationStationName.Length != 0) hash ^= DestinationStationName.GetHashCode();
      if (localizedDestinationStationName_ != null) hash ^= LocalizedDestinationStationName.GetHashCode();
      if (DestinationTerminal.Length != 0) hash ^= DestinationTerminal.GetHashCode();
      if (localizedDestinationTerminal_ != null) hash ^= LocalizedDestinationTerminal.GetHashCode();
      if (Duration != 0UL) hash ^= Duration.GetHashCode();
      if (eventEndDate_ != null) hash ^= EventEndDate.GetHashCode();
      if (EventName.Length != 0) hash ^= EventName.GetHashCode();
      if (localizedEventName_ != null) hash ^= LocalizedEventName.GetHashCode();
      if (eventStartDate_ != null) hash ^= EventStartDate.GetHashCode();
      if (eventStartDateInfo_ != null) hash ^= EventStartDateInfo.GetHashCode();
      if (EventType != global::PassKit.Grpc.EventType.None) hash ^= EventType.GetHashCode();
      if (FlightCode.Length != 0) hash ^= FlightCode.GetHashCode();
      if (localizedFlightCode_ != null) hash ^= LocalizedFlightCode.GetHashCode();
      if (FlightNumber != 0) hash ^= FlightNumber.GetHashCode();
      if (Genre.Length != 0) hash ^= Genre.GetHashCode();
      if (localizedGenre_ != null) hash ^= LocalizedGenre.GetHashCode();
      if (HomeTeamAbbreviation.Length != 0) hash ^= HomeTeamAbbreviation.GetHashCode();
      if (localizedHomeTeamAbbreviation_ != null) hash ^= LocalizedHomeTeamAbbreviation.GetHashCode();
      if (HomeTeamLocation.Length != 0) hash ^= HomeTeamLocation.GetHashCode();
      if (localizedHomeTeamLocation_ != null) hash ^= LocalizedHomeTeamLocation.GetHashCode();
      if (HomeTeamName.Length != 0) hash ^= HomeTeamName.GetHashCode();
      if (localizedHomeTeamName_ != null) hash ^= LocalizedHomeTeamName.GetHashCode();
      if (LeagueAbbreviation.Length != 0) hash ^= LeagueAbbreviation.GetHashCode();
      if (localizedLeagueAbbreviation_ != null) hash ^= LocalizedLeagueAbbreviation.GetHashCode();
      if (LeagueName.Length != 0) hash ^= LeagueName.GetHashCode();
      if (localizedLeagueName_ != null) hash ^= LocalizedLeagueName.GetHashCode();
      if (MembershipProgramName.Length != 0) hash ^= MembershipProgramName.GetHashCode();
      if (localizedMembershipProgramName_ != null) hash ^= LocalizedMembershipProgramName.GetHashCode();
      if (MembershipProgramNumber.Length != 0) hash ^= MembershipProgramNumber.GetHashCode();
      if (originalArrivalDate_ != null) hash ^= OriginalArrivalDate.GetHashCode();
      if (originalBoardingDate_ != null) hash ^= OriginalBoardingDate.GetHashCode();
      if (originalDepartureDate_ != null) hash ^= OriginalDepartureDate.GetHashCode();
      if (passengerName_ != null) hash ^= PassengerName.GetHashCode();
      hash ^= performerNames_.GetHashCode();
      if (PriorityStatus.Length != 0) hash ^= PriorityStatus.GetHashCode();
      if (localizedPriorityStatus_ != null) hash ^= LocalizedPriorityStatus.GetHashCode();
      hash ^= albumIds_.GetHashCode();
      hash ^= playlistIds_.GetHashCode();
      hash ^= seats_.GetHashCode();
      if (SecurityScreening.Length != 0) hash ^= SecurityScreening.GetHashCode();
      if (localizedSecurityScreening_ != null) hash ^= LocalizedSecurityScreening.GetHashCode();
      if (SilenceRequested != false) hash ^= SilenceRequested.GetHashCode();
      if (SportName.Length != 0) hash ^= SportName.GetHashCode();
      if (localizedSportName_ != null) hash ^= LocalizedSportName.GetHashCode();
      if (totalPrice_ != null) hash ^= TotalPrice.GetHashCode();
      if (TransitProvider.Length != 0) hash ^= TransitProvider.GetHashCode();
      if (localizedTransitProvider_ != null) hash ^= LocalizedTransitProvider.GetHashCode();
      if (TransitStatus.Length != 0) hash ^= TransitStatus.GetHashCode();
      if (localizedTransitStatus_ != null) hash ^= LocalizedTransitStatus.GetHashCode();
      if (TransitStatusReason.Length != 0) hash ^= TransitStatusReason.GetHashCode();
      if (localizedTransitStatusReason_ != null) hash ^= LocalizedTransitStatusReason.GetHashCode();
      if (VehicleName.Length != 0) hash ^= VehicleName.GetHashCode();
      if (localizedVehicleName_ != null) hash ^= LocalizedVehicleName.GetHashCode();
      if (VehicleNumber.Length != 0) hash ^= VehicleNumber.GetHashCode();
      if (localizedVehicleNumber_ != null) hash ^= LocalizedVehicleNumber.GetHashCode();
      if (VehicleType.Length != 0) hash ^= VehicleType.GetHashCode();
      if (localizedVehicleType_ != null) hash ^= LocalizedVehicleType.GetHashCode();
      if (venueBoxOfficeOpenDate_ != null) hash ^= VenueBoxOfficeOpenDate.GetHashCode();
      if (venueCloseDate_ != null) hash ^= VenueCloseDate.GetHashCode();
      if (venueDoorsOpenDate_ != null) hash ^= VenueDoorsOpenDate.GetHashCode();
      if (VenueEntrance.Length != 0) hash ^= VenueEntrance.GetHashCode();
      if (localizedVenueEntrance_ != null) hash ^= LocalizedVenueEntrance.GetHashCode();
      if (venueLocation_ != null) hash ^= VenueLocation.GetHashCode();
      if (VenueName.Length != 0) hash ^= VenueName.GetHashCode();
      if (localizedVenueName_ != null) hash ^= LocalizedVenueName.GetHashCode();
      if (VenuePhoneNumber.Length != 0) hash ^= VenuePhoneNumber.GetHashCode();
      if (localizedVenuePhoneNumber_ != null) hash ^= LocalizedVenuePhoneNumber.GetHashCode();
      if (VenueRegionName.Length != 0) hash ^= VenueRegionName.GetHashCode();
      if (localizedVenueRegionName_ != null) hash ^= LocalizedVenueRegionName.GetHashCode();
      if (VenueRoom.Length != 0) hash ^= VenueRoom.GetHashCode();
      if (localizedVenueRoom_ != null) hash ^= LocalizedVenueRoom.GetHashCode();
      hash ^= wifiAccess_.GetHashCode();
      if (venueFanZoneOpenDate_ != null) hash ^= VenueFanZoneOpenDate.GetHashCode();
      if (venueGatesOpenDate_ != null) hash ^= VenueGatesOpenDate.GetHashCode();
      if (venueParkingLotsOpenDate_ != null) hash ^= VenueParkingLotsOpenDate.GetHashCode();
      if (VenueEntranceDoor.Length != 0) hash ^= VenueEntranceDoor.GetHashCode();
      if (localizedVenueEntranceDoor_ != null) hash ^= LocalizedVenueEntranceDoor.GetHashCode();
      if (VenueEntranceGate.Length != 0) hash ^= VenueEntranceGate.GetHashCode();
      if (localizedVenueEntranceGate_ != null) hash ^= LocalizedVenueEntranceGate.GetHashCode();
      if (VenueEntrancePortal.Length != 0) hash ^= VenueEntrancePortal.GetHashCode();
      if (localizedVenueEntrancePortal_ != null) hash ^= LocalizedVenueEntrancePortal.GetHashCode();
      if (EntranceDescription.Length != 0) hash ^= EntranceDescription.GetHashCode();
      if (localizedEntranceDescription_ != null) hash ^= LocalizedEntranceDescription.GetHashCode();
      if (TailgatingAllowed != false) hash ^= TailgatingAllowed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AdmissionLevel.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AdmissionLevel);
      }
      if (localizedAdmissionLevel_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LocalizedAdmissionLevel);
      }
      if (AdmissionLevelAbbreviation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AdmissionLevelAbbreviation);
      }
      if (localizedAdmissionLevelAbbreviation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocalizedAdmissionLevelAbbreviation);
      }
      if (AdditionalTicketAttributes.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AdditionalTicketAttributes);
      }
      if (localizedAdditionalTicketAttributes_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LocalizedAdditionalTicketAttributes);
      }
      if (AirlineCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AirlineCode);
      }
      if (localizedAirlineCode_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LocalizedAirlineCode);
      }
      if (AttendeeName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(AttendeeName);
      }
      if (localizedAttendeeName_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LocalizedAttendeeName);
      }
      artistIds_.WriteTo(output, _repeated_artistIds_codec);
      if (AwayTeamAbbreviation.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AwayTeamAbbreviation);
      }
      if (localizedAwayTeamAbbreviation_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(LocalizedAwayTeamAbbreviation);
      }
      if (AwayTeamLocation.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(AwayTeamLocation);
      }
      if (localizedAwayTeamLocation_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(LocalizedAwayTeamLocation);
      }
      if (AwayTeamName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(AwayTeamName);
      }
      if (localizedAwayTeamName_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(LocalizedAwayTeamName);
      }
      if (balance_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Balance);
      }
      if (BoardingGroup.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(BoardingGroup);
      }
      if (localizedBoardingGroup_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(LocalizedBoardingGroup);
      }
      if (BoardingSequenceNumber.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(BoardingSequenceNumber);
      }
      if (CarNumber.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(CarNumber);
      }
      if (localizedCarNumber_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(LocalizedCarNumber);
      }
      if (ConfirmationNumber.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(ConfirmationNumber);
      }
      if (localizedConfirmationNumber_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(LocalizedConfirmationNumber);
      }
      if (currentArrivalDate_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(CurrentArrivalDate);
      }
      if (currentBoardingDate_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(CurrentBoardingDate);
      }
      if (currentDepartureDate_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(CurrentDepartureDate);
      }
      if (DepartureAirportCode.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(DepartureAirportCode);
      }
      if (localizedDepartureAirportCode_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(LocalizedDepartureAirportCode);
      }
      if (DepartureAirportName.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(DepartureAirportName);
      }
      if (localizedDepartureAirportName_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(LocalizedDepartureAirportName);
      }
      if (DepartureGate.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(DepartureGate);
      }
      if (localizedDepartureGate_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(LocalizedDepartureGate);
      }
      if (DepartureLocation.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(DepartureLocation);
      }
      if (localizedDepartureLocation_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(LocalizedDepartureLocation);
      }
      if (DepartureLocationDescription.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(DepartureLocationDescription);
      }
      if (localizedDepartureLocationDescription_ != null) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(LocalizedDepartureLocationDescription);
      }
      if (DeparturePlatform.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(DeparturePlatform);
      }
      if (localizedDeparturePlatform_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(LocalizedDeparturePlatform);
      }
      if (DepartureStationName.Length != 0) {
        output.WriteRawTag(202, 2);
        output.WriteString(DepartureStationName);
      }
      if (localizedDepartureStationName_ != null) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(LocalizedDepartureStationName);
      }
      if (DepartureTerminal.Length != 0) {
        output.WriteRawTag(218, 2);
        output.WriteString(DepartureTerminal);
      }
      if (localizedDepartureTerminal_ != null) {
        output.WriteRawTag(226, 2);
        output.WriteMessage(LocalizedDepartureTerminal);
      }
      if (DestinationAirportCode.Length != 0) {
        output.WriteRawTag(234, 2);
        output.WriteString(DestinationAirportCode);
      }
      if (localizedDestinationAirportCode_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(LocalizedDestinationAirportCode);
      }
      if (DestinationAirportName.Length != 0) {
        output.WriteRawTag(250, 2);
        output.WriteString(DestinationAirportName);
      }
      if (localizedDestinationAirportName_ != null) {
        output.WriteRawTag(130, 3);
        output.WriteMessage(LocalizedDestinationAirportName);
      }
      if (DestinationGate.Length != 0) {
        output.WriteRawTag(138, 3);
        output.WriteString(DestinationGate);
      }
      if (localizedDestinationGate_ != null) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(LocalizedDestinationGate);
      }
      if (DestinationLocation.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(DestinationLocation);
      }
      if (localizedDestinationLocation_ != null) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(LocalizedDestinationLocation);
      }
      if (DestinationLocationDescription.Length != 0) {
        output.WriteRawTag(170, 3);
        output.WriteString(DestinationLocationDescription);
      }
      if (localizedDestinationLocationDescription_ != null) {
        output.WriteRawTag(178, 3);
        output.WriteMessage(LocalizedDestinationLocationDescription);
      }
      if (DestinationPlatform.Length != 0) {
        output.WriteRawTag(186, 3);
        output.WriteString(DestinationPlatform);
      }
      if (localizedDestinationPlatform_ != null) {
        output.WriteRawTag(194, 3);
        output.WriteMessage(LocalizedDestinationPlatform);
      }
      if (DestinationStationName.Length != 0) {
        output.WriteRawTag(202, 3);
        output.WriteString(DestinationStationName);
      }
      if (localizedDestinationStationName_ != null) {
        output.WriteRawTag(210, 3);
        output.WriteMessage(LocalizedDestinationStationName);
      }
      if (DestinationTerminal.Length != 0) {
        output.WriteRawTag(218, 3);
        output.WriteString(DestinationTerminal);
      }
      if (localizedDestinationTerminal_ != null) {
        output.WriteRawTag(226, 3);
        output.WriteMessage(LocalizedDestinationTerminal);
      }
      if (Duration != 0UL) {
        output.WriteRawTag(232, 3);
        output.WriteUInt64(Duration);
      }
      if (eventEndDate_ != null) {
        output.WriteRawTag(242, 3);
        output.WriteMessage(EventEndDate);
      }
      if (EventName.Length != 0) {
        output.WriteRawTag(250, 3);
        output.WriteString(EventName);
      }
      if (localizedEventName_ != null) {
        output.WriteRawTag(130, 4);
        output.WriteMessage(LocalizedEventName);
      }
      if (eventStartDate_ != null) {
        output.WriteRawTag(138, 4);
        output.WriteMessage(EventStartDate);
      }
      if (eventStartDateInfo_ != null) {
        output.WriteRawTag(146, 4);
        output.WriteMessage(EventStartDateInfo);
      }
      if (EventType != global::PassKit.Grpc.EventType.None) {
        output.WriteRawTag(152, 4);
        output.WriteEnum((int) EventType);
      }
      if (FlightCode.Length != 0) {
        output.WriteRawTag(162, 4);
        output.WriteString(FlightCode);
      }
      if (localizedFlightCode_ != null) {
        output.WriteRawTag(170, 4);
        output.WriteMessage(LocalizedFlightCode);
      }
      if (FlightNumber != 0) {
        output.WriteRawTag(176, 4);
        output.WriteUInt32(FlightNumber);
      }
      if (Genre.Length != 0) {
        output.WriteRawTag(186, 4);
        output.WriteString(Genre);
      }
      if (localizedGenre_ != null) {
        output.WriteRawTag(194, 4);
        output.WriteMessage(LocalizedGenre);
      }
      if (HomeTeamAbbreviation.Length != 0) {
        output.WriteRawTag(202, 4);
        output.WriteString(HomeTeamAbbreviation);
      }
      if (localizedHomeTeamAbbreviation_ != null) {
        output.WriteRawTag(210, 4);
        output.WriteMessage(LocalizedHomeTeamAbbreviation);
      }
      if (HomeTeamLocation.Length != 0) {
        output.WriteRawTag(218, 4);
        output.WriteString(HomeTeamLocation);
      }
      if (localizedHomeTeamLocation_ != null) {
        output.WriteRawTag(226, 4);
        output.WriteMessage(LocalizedHomeTeamLocation);
      }
      if (HomeTeamName.Length != 0) {
        output.WriteRawTag(234, 4);
        output.WriteString(HomeTeamName);
      }
      if (localizedHomeTeamName_ != null) {
        output.WriteRawTag(242, 4);
        output.WriteMessage(LocalizedHomeTeamName);
      }
      if (LeagueAbbreviation.Length != 0) {
        output.WriteRawTag(250, 4);
        output.WriteString(LeagueAbbreviation);
      }
      if (localizedLeagueAbbreviation_ != null) {
        output.WriteRawTag(130, 5);
        output.WriteMessage(LocalizedLeagueAbbreviation);
      }
      if (LeagueName.Length != 0) {
        output.WriteRawTag(138, 5);
        output.WriteString(LeagueName);
      }
      if (localizedLeagueName_ != null) {
        output.WriteRawTag(146, 5);
        output.WriteMessage(LocalizedLeagueName);
      }
      if (MembershipProgramName.Length != 0) {
        output.WriteRawTag(154, 5);
        output.WriteString(MembershipProgramName);
      }
      if (localizedMembershipProgramName_ != null) {
        output.WriteRawTag(162, 5);
        output.WriteMessage(LocalizedMembershipProgramName);
      }
      if (MembershipProgramNumber.Length != 0) {
        output.WriteRawTag(170, 5);
        output.WriteString(MembershipProgramNumber);
      }
      if (originalArrivalDate_ != null) {
        output.WriteRawTag(178, 5);
        output.WriteMessage(OriginalArrivalDate);
      }
      if (originalBoardingDate_ != null) {
        output.WriteRawTag(186, 5);
        output.WriteMessage(OriginalBoardingDate);
      }
      if (originalDepartureDate_ != null) {
        output.WriteRawTag(194, 5);
        output.WriteMessage(OriginalDepartureDate);
      }
      if (passengerName_ != null) {
        output.WriteRawTag(202, 5);
        output.WriteMessage(PassengerName);
      }
      performerNames_.WriteTo(output, _repeated_performerNames_codec);
      if (PriorityStatus.Length != 0) {
        output.WriteRawTag(218, 5);
        output.WriteString(PriorityStatus);
      }
      if (localizedPriorityStatus_ != null) {
        output.WriteRawTag(226, 5);
        output.WriteMessage(LocalizedPriorityStatus);
      }
      albumIds_.WriteTo(output, _repeated_albumIds_codec);
      playlistIds_.WriteTo(output, _repeated_playlistIds_codec);
      seats_.WriteTo(output, _repeated_seats_codec);
      if (SecurityScreening.Length != 0) {
        output.WriteRawTag(130, 6);
        output.WriteString(SecurityScreening);
      }
      if (localizedSecurityScreening_ != null) {
        output.WriteRawTag(138, 6);
        output.WriteMessage(LocalizedSecurityScreening);
      }
      if (SilenceRequested != false) {
        output.WriteRawTag(144, 6);
        output.WriteBool(SilenceRequested);
      }
      if (SportName.Length != 0) {
        output.WriteRawTag(154, 6);
        output.WriteString(SportName);
      }
      if (localizedSportName_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(LocalizedSportName);
      }
      if (totalPrice_ != null) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(TotalPrice);
      }
      if (TransitProvider.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(TransitProvider);
      }
      if (localizedTransitProvider_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(LocalizedTransitProvider);
      }
      if (TransitStatus.Length != 0) {
        output.WriteRawTag(194, 6);
        output.WriteString(TransitStatus);
      }
      if (localizedTransitStatus_ != null) {
        output.WriteRawTag(202, 6);
        output.WriteMessage(LocalizedTransitStatus);
      }
      if (TransitStatusReason.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(TransitStatusReason);
      }
      if (localizedTransitStatusReason_ != null) {
        output.WriteRawTag(218, 6);
        output.WriteMessage(LocalizedTransitStatusReason);
      }
      if (VehicleName.Length != 0) {
        output.WriteRawTag(226, 6);
        output.WriteString(VehicleName);
      }
      if (localizedVehicleName_ != null) {
        output.WriteRawTag(234, 6);
        output.WriteMessage(LocalizedVehicleName);
      }
      if (VehicleNumber.Length != 0) {
        output.WriteRawTag(242, 6);
        output.WriteString(VehicleNumber);
      }
      if (localizedVehicleNumber_ != null) {
        output.WriteRawTag(250, 6);
        output.WriteMessage(LocalizedVehicleNumber);
      }
      if (VehicleType.Length != 0) {
        output.WriteRawTag(130, 7);
        output.WriteString(VehicleType);
      }
      if (localizedVehicleType_ != null) {
        output.WriteRawTag(138, 7);
        output.WriteMessage(LocalizedVehicleType);
      }
      if (venueBoxOfficeOpenDate_ != null) {
        output.WriteRawTag(146, 7);
        output.WriteMessage(VenueBoxOfficeOpenDate);
      }
      if (venueCloseDate_ != null) {
        output.WriteRawTag(154, 7);
        output.WriteMessage(VenueCloseDate);
      }
      if (venueDoorsOpenDate_ != null) {
        output.WriteRawTag(162, 7);
        output.WriteMessage(VenueDoorsOpenDate);
      }
      if (VenueEntrance.Length != 0) {
        output.WriteRawTag(170, 7);
        output.WriteString(VenueEntrance);
      }
      if (localizedVenueEntrance_ != null) {
        output.WriteRawTag(178, 7);
        output.WriteMessage(LocalizedVenueEntrance);
      }
      if (venueLocation_ != null) {
        output.WriteRawTag(186, 7);
        output.WriteMessage(VenueLocation);
      }
      if (VenueName.Length != 0) {
        output.WriteRawTag(194, 7);
        output.WriteString(VenueName);
      }
      if (localizedVenueName_ != null) {
        output.WriteRawTag(202, 7);
        output.WriteMessage(LocalizedVenueName);
      }
      if (VenuePhoneNumber.Length != 0) {
        output.WriteRawTag(210, 7);
        output.WriteString(VenuePhoneNumber);
      }
      if (localizedVenuePhoneNumber_ != null) {
        output.WriteRawTag(218, 7);
        output.WriteMessage(LocalizedVenuePhoneNumber);
      }
      if (VenueRegionName.Length != 0) {
        output.WriteRawTag(226, 7);
        output.WriteString(VenueRegionName);
      }
      if (localizedVenueRegionName_ != null) {
        output.WriteRawTag(234, 7);
        output.WriteMessage(LocalizedVenueRegionName);
      }
      if (VenueRoom.Length != 0) {
        output.WriteRawTag(242, 7);
        output.WriteString(VenueRoom);
      }
      if (localizedVenueRoom_ != null) {
        output.WriteRawTag(250, 7);
        output.WriteMessage(LocalizedVenueRoom);
      }
      wifiAccess_.WriteTo(output, _repeated_wifiAccess_codec);
      if (venueFanZoneOpenDate_ != null) {
        output.WriteRawTag(138, 8);
        output.WriteMessage(VenueFanZoneOpenDate);
      }
      if (venueGatesOpenDate_ != null) {
        output.WriteRawTag(146, 8);
        output.WriteMessage(VenueGatesOpenDate);
      }
      if (venueParkingLotsOpenDate_ != null) {
        output.WriteRawTag(154, 8);
        output.WriteMessage(VenueParkingLotsOpenDate);
      }
      if (VenueEntranceDoor.Length != 0) {
        output.WriteRawTag(162, 8);
        output.WriteString(VenueEntranceDoor);
      }
      if (localizedVenueEntranceDoor_ != null) {
        output.WriteRawTag(170, 8);
        output.WriteMessage(LocalizedVenueEntranceDoor);
      }
      if (VenueEntranceGate.Length != 0) {
        output.WriteRawTag(178, 8);
        output.WriteString(VenueEntranceGate);
      }
      if (localizedVenueEntranceGate_ != null) {
        output.WriteRawTag(186, 8);
        output.WriteMessage(LocalizedVenueEntranceGate);
      }
      if (VenueEntrancePortal.Length != 0) {
        output.WriteRawTag(194, 8);
        output.WriteString(VenueEntrancePortal);
      }
      if (localizedVenueEntrancePortal_ != null) {
        output.WriteRawTag(202, 8);
        output.WriteMessage(LocalizedVenueEntrancePortal);
      }
      if (EntranceDescription.Length != 0) {
        output.WriteRawTag(210, 8);
        output.WriteString(EntranceDescription);
      }
      if (localizedEntranceDescription_ != null) {
        output.WriteRawTag(218, 8);
        output.WriteMessage(LocalizedEntranceDescription);
      }
      if (TailgatingAllowed != false) {
        output.WriteRawTag(224, 8);
        output.WriteBool(TailgatingAllowed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AdmissionLevel.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AdmissionLevel);
      }
      if (localizedAdmissionLevel_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LocalizedAdmissionLevel);
      }
      if (AdmissionLevelAbbreviation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AdmissionLevelAbbreviation);
      }
      if (localizedAdmissionLevelAbbreviation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocalizedAdmissionLevelAbbreviation);
      }
      if (AdditionalTicketAttributes.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AdditionalTicketAttributes);
      }
      if (localizedAdditionalTicketAttributes_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LocalizedAdditionalTicketAttributes);
      }
      if (AirlineCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AirlineCode);
      }
      if (localizedAirlineCode_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LocalizedAirlineCode);
      }
      if (AttendeeName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(AttendeeName);
      }
      if (localizedAttendeeName_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LocalizedAttendeeName);
      }
      artistIds_.WriteTo(ref output, _repeated_artistIds_codec);
      if (AwayTeamAbbreviation.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AwayTeamAbbreviation);
      }
      if (localizedAwayTeamAbbreviation_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(LocalizedAwayTeamAbbreviation);
      }
      if (AwayTeamLocation.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(AwayTeamLocation);
      }
      if (localizedAwayTeamLocation_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(LocalizedAwayTeamLocation);
      }
      if (AwayTeamName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(AwayTeamName);
      }
      if (localizedAwayTeamName_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(LocalizedAwayTeamName);
      }
      if (balance_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Balance);
      }
      if (BoardingGroup.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(BoardingGroup);
      }
      if (localizedBoardingGroup_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(LocalizedBoardingGroup);
      }
      if (BoardingSequenceNumber.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(BoardingSequenceNumber);
      }
      if (CarNumber.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(CarNumber);
      }
      if (localizedCarNumber_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(LocalizedCarNumber);
      }
      if (ConfirmationNumber.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(ConfirmationNumber);
      }
      if (localizedConfirmationNumber_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(LocalizedConfirmationNumber);
      }
      if (currentArrivalDate_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(CurrentArrivalDate);
      }
      if (currentBoardingDate_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(CurrentBoardingDate);
      }
      if (currentDepartureDate_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(CurrentDepartureDate);
      }
      if (DepartureAirportCode.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(DepartureAirportCode);
      }
      if (localizedDepartureAirportCode_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(LocalizedDepartureAirportCode);
      }
      if (DepartureAirportName.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(DepartureAirportName);
      }
      if (localizedDepartureAirportName_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(LocalizedDepartureAirportName);
      }
      if (DepartureGate.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(DepartureGate);
      }
      if (localizedDepartureGate_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(LocalizedDepartureGate);
      }
      if (DepartureLocation.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(DepartureLocation);
      }
      if (localizedDepartureLocation_ != null) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(LocalizedDepartureLocation);
      }
      if (DepartureLocationDescription.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(DepartureLocationDescription);
      }
      if (localizedDepartureLocationDescription_ != null) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(LocalizedDepartureLocationDescription);
      }
      if (DeparturePlatform.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(DeparturePlatform);
      }
      if (localizedDeparturePlatform_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(LocalizedDeparturePlatform);
      }
      if (DepartureStationName.Length != 0) {
        output.WriteRawTag(202, 2);
        output.WriteString(DepartureStationName);
      }
      if (localizedDepartureStationName_ != null) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(LocalizedDepartureStationName);
      }
      if (DepartureTerminal.Length != 0) {
        output.WriteRawTag(218, 2);
        output.WriteString(DepartureTerminal);
      }
      if (localizedDepartureTerminal_ != null) {
        output.WriteRawTag(226, 2);
        output.WriteMessage(LocalizedDepartureTerminal);
      }
      if (DestinationAirportCode.Length != 0) {
        output.WriteRawTag(234, 2);
        output.WriteString(DestinationAirportCode);
      }
      if (localizedDestinationAirportCode_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(LocalizedDestinationAirportCode);
      }
      if (DestinationAirportName.Length != 0) {
        output.WriteRawTag(250, 2);
        output.WriteString(DestinationAirportName);
      }
      if (localizedDestinationAirportName_ != null) {
        output.WriteRawTag(130, 3);
        output.WriteMessage(LocalizedDestinationAirportName);
      }
      if (DestinationGate.Length != 0) {
        output.WriteRawTag(138, 3);
        output.WriteString(DestinationGate);
      }
      if (localizedDestinationGate_ != null) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(LocalizedDestinationGate);
      }
      if (DestinationLocation.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(DestinationLocation);
      }
      if (localizedDestinationLocation_ != null) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(LocalizedDestinationLocation);
      }
      if (DestinationLocationDescription.Length != 0) {
        output.WriteRawTag(170, 3);
        output.WriteString(DestinationLocationDescription);
      }
      if (localizedDestinationLocationDescription_ != null) {
        output.WriteRawTag(178, 3);
        output.WriteMessage(LocalizedDestinationLocationDescription);
      }
      if (DestinationPlatform.Length != 0) {
        output.WriteRawTag(186, 3);
        output.WriteString(DestinationPlatform);
      }
      if (localizedDestinationPlatform_ != null) {
        output.WriteRawTag(194, 3);
        output.WriteMessage(LocalizedDestinationPlatform);
      }
      if (DestinationStationName.Length != 0) {
        output.WriteRawTag(202, 3);
        output.WriteString(DestinationStationName);
      }
      if (localizedDestinationStationName_ != null) {
        output.WriteRawTag(210, 3);
        output.WriteMessage(LocalizedDestinationStationName);
      }
      if (DestinationTerminal.Length != 0) {
        output.WriteRawTag(218, 3);
        output.WriteString(DestinationTerminal);
      }
      if (localizedDestinationTerminal_ != null) {
        output.WriteRawTag(226, 3);
        output.WriteMessage(LocalizedDestinationTerminal);
      }
      if (Duration != 0UL) {
        output.WriteRawTag(232, 3);
        output.WriteUInt64(Duration);
      }
      if (eventEndDate_ != null) {
        output.WriteRawTag(242, 3);
        output.WriteMessage(EventEndDate);
      }
      if (EventName.Length != 0) {
        output.WriteRawTag(250, 3);
        output.WriteString(EventName);
      }
      if (localizedEventName_ != null) {
        output.WriteRawTag(130, 4);
        output.WriteMessage(LocalizedEventName);
      }
      if (eventStartDate_ != null) {
        output.WriteRawTag(138, 4);
        output.WriteMessage(EventStartDate);
      }
      if (eventStartDateInfo_ != null) {
        output.WriteRawTag(146, 4);
        output.WriteMessage(EventStartDateInfo);
      }
      if (EventType != global::PassKit.Grpc.EventType.None) {
        output.WriteRawTag(152, 4);
        output.WriteEnum((int) EventType);
      }
      if (FlightCode.Length != 0) {
        output.WriteRawTag(162, 4);
        output.WriteString(FlightCode);
      }
      if (localizedFlightCode_ != null) {
        output.WriteRawTag(170, 4);
        output.WriteMessage(LocalizedFlightCode);
      }
      if (FlightNumber != 0) {
        output.WriteRawTag(176, 4);
        output.WriteUInt32(FlightNumber);
      }
      if (Genre.Length != 0) {
        output.WriteRawTag(186, 4);
        output.WriteString(Genre);
      }
      if (localizedGenre_ != null) {
        output.WriteRawTag(194, 4);
        output.WriteMessage(LocalizedGenre);
      }
      if (HomeTeamAbbreviation.Length != 0) {
        output.WriteRawTag(202, 4);
        output.WriteString(HomeTeamAbbreviation);
      }
      if (localizedHomeTeamAbbreviation_ != null) {
        output.WriteRawTag(210, 4);
        output.WriteMessage(LocalizedHomeTeamAbbreviation);
      }
      if (HomeTeamLocation.Length != 0) {
        output.WriteRawTag(218, 4);
        output.WriteString(HomeTeamLocation);
      }
      if (localizedHomeTeamLocation_ != null) {
        output.WriteRawTag(226, 4);
        output.WriteMessage(LocalizedHomeTeamLocation);
      }
      if (HomeTeamName.Length != 0) {
        output.WriteRawTag(234, 4);
        output.WriteString(HomeTeamName);
      }
      if (localizedHomeTeamName_ != null) {
        output.WriteRawTag(242, 4);
        output.WriteMessage(LocalizedHomeTeamName);
      }
      if (LeagueAbbreviation.Length != 0) {
        output.WriteRawTag(250, 4);
        output.WriteString(LeagueAbbreviation);
      }
      if (localizedLeagueAbbreviation_ != null) {
        output.WriteRawTag(130, 5);
        output.WriteMessage(LocalizedLeagueAbbreviation);
      }
      if (LeagueName.Length != 0) {
        output.WriteRawTag(138, 5);
        output.WriteString(LeagueName);
      }
      if (localizedLeagueName_ != null) {
        output.WriteRawTag(146, 5);
        output.WriteMessage(LocalizedLeagueName);
      }
      if (MembershipProgramName.Length != 0) {
        output.WriteRawTag(154, 5);
        output.WriteString(MembershipProgramName);
      }
      if (localizedMembershipProgramName_ != null) {
        output.WriteRawTag(162, 5);
        output.WriteMessage(LocalizedMembershipProgramName);
      }
      if (MembershipProgramNumber.Length != 0) {
        output.WriteRawTag(170, 5);
        output.WriteString(MembershipProgramNumber);
      }
      if (originalArrivalDate_ != null) {
        output.WriteRawTag(178, 5);
        output.WriteMessage(OriginalArrivalDate);
      }
      if (originalBoardingDate_ != null) {
        output.WriteRawTag(186, 5);
        output.WriteMessage(OriginalBoardingDate);
      }
      if (originalDepartureDate_ != null) {
        output.WriteRawTag(194, 5);
        output.WriteMessage(OriginalDepartureDate);
      }
      if (passengerName_ != null) {
        output.WriteRawTag(202, 5);
        output.WriteMessage(PassengerName);
      }
      performerNames_.WriteTo(ref output, _repeated_performerNames_codec);
      if (PriorityStatus.Length != 0) {
        output.WriteRawTag(218, 5);
        output.WriteString(PriorityStatus);
      }
      if (localizedPriorityStatus_ != null) {
        output.WriteRawTag(226, 5);
        output.WriteMessage(LocalizedPriorityStatus);
      }
      albumIds_.WriteTo(ref output, _repeated_albumIds_codec);
      playlistIds_.WriteTo(ref output, _repeated_playlistIds_codec);
      seats_.WriteTo(ref output, _repeated_seats_codec);
      if (SecurityScreening.Length != 0) {
        output.WriteRawTag(130, 6);
        output.WriteString(SecurityScreening);
      }
      if (localizedSecurityScreening_ != null) {
        output.WriteRawTag(138, 6);
        output.WriteMessage(LocalizedSecurityScreening);
      }
      if (SilenceRequested != false) {
        output.WriteRawTag(144, 6);
        output.WriteBool(SilenceRequested);
      }
      if (SportName.Length != 0) {
        output.WriteRawTag(154, 6);
        output.WriteString(SportName);
      }
      if (localizedSportName_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(LocalizedSportName);
      }
      if (totalPrice_ != null) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(TotalPrice);
      }
      if (TransitProvider.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(TransitProvider);
      }
      if (localizedTransitProvider_ != null) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(LocalizedTransitProvider);
      }
      if (TransitStatus.Length != 0) {
        output.WriteRawTag(194, 6);
        output.WriteString(TransitStatus);
      }
      if (localizedTransitStatus_ != null) {
        output.WriteRawTag(202, 6);
        output.WriteMessage(LocalizedTransitStatus);
      }
      if (TransitStatusReason.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(TransitStatusReason);
      }
      if (localizedTransitStatusReason_ != null) {
        output.WriteRawTag(218, 6);
        output.WriteMessage(LocalizedTransitStatusReason);
      }
      if (VehicleName.Length != 0) {
        output.WriteRawTag(226, 6);
        output.WriteString(VehicleName);
      }
      if (localizedVehicleName_ != null) {
        output.WriteRawTag(234, 6);
        output.WriteMessage(LocalizedVehicleName);
      }
      if (VehicleNumber.Length != 0) {
        output.WriteRawTag(242, 6);
        output.WriteString(VehicleNumber);
      }
      if (localizedVehicleNumber_ != null) {
        output.WriteRawTag(250, 6);
        output.WriteMessage(LocalizedVehicleNumber);
      }
      if (VehicleType.Length != 0) {
        output.WriteRawTag(130, 7);
        output.WriteString(VehicleType);
      }
      if (localizedVehicleType_ != null) {
        output.WriteRawTag(138, 7);
        output.WriteMessage(LocalizedVehicleType);
      }
      if (venueBoxOfficeOpenDate_ != null) {
        output.WriteRawTag(146, 7);
        output.WriteMessage(VenueBoxOfficeOpenDate);
      }
      if (venueCloseDate_ != null) {
        output.WriteRawTag(154, 7);
        output.WriteMessage(VenueCloseDate);
      }
      if (venueDoorsOpenDate_ != null) {
        output.WriteRawTag(162, 7);
        output.WriteMessage(VenueDoorsOpenDate);
      }
      if (VenueEntrance.Length != 0) {
        output.WriteRawTag(170, 7);
        output.WriteString(VenueEntrance);
      }
      if (localizedVenueEntrance_ != null) {
        output.WriteRawTag(178, 7);
        output.WriteMessage(LocalizedVenueEntrance);
      }
      if (venueLocation_ != null) {
        output.WriteRawTag(186, 7);
        output.WriteMessage(VenueLocation);
      }
      if (VenueName.Length != 0) {
        output.WriteRawTag(194, 7);
        output.WriteString(VenueName);
      }
      if (localizedVenueName_ != null) {
        output.WriteRawTag(202, 7);
        output.WriteMessage(LocalizedVenueName);
      }
      if (VenuePhoneNumber.Length != 0) {
        output.WriteRawTag(210, 7);
        output.WriteString(VenuePhoneNumber);
      }
      if (localizedVenuePhoneNumber_ != null) {
        output.WriteRawTag(218, 7);
        output.WriteMessage(LocalizedVenuePhoneNumber);
      }
      if (VenueRegionName.Length != 0) {
        output.WriteRawTag(226, 7);
        output.WriteString(VenueRegionName);
      }
      if (localizedVenueRegionName_ != null) {
        output.WriteRawTag(234, 7);
        output.WriteMessage(LocalizedVenueRegionName);
      }
      if (VenueRoom.Length != 0) {
        output.WriteRawTag(242, 7);
        output.WriteString(VenueRoom);
      }
      if (localizedVenueRoom_ != null) {
        output.WriteRawTag(250, 7);
        output.WriteMessage(LocalizedVenueRoom);
      }
      wifiAccess_.WriteTo(ref output, _repeated_wifiAccess_codec);
      if (venueFanZoneOpenDate_ != null) {
        output.WriteRawTag(138, 8);
        output.WriteMessage(VenueFanZoneOpenDate);
      }
      if (venueGatesOpenDate_ != null) {
        output.WriteRawTag(146, 8);
        output.WriteMessage(VenueGatesOpenDate);
      }
      if (venueParkingLotsOpenDate_ != null) {
        output.WriteRawTag(154, 8);
        output.WriteMessage(VenueParkingLotsOpenDate);
      }
      if (VenueEntranceDoor.Length != 0) {
        output.WriteRawTag(162, 8);
        output.WriteString(VenueEntranceDoor);
      }
      if (localizedVenueEntranceDoor_ != null) {
        output.WriteRawTag(170, 8);
        output.WriteMessage(LocalizedVenueEntranceDoor);
      }
      if (VenueEntranceGate.Length != 0) {
        output.WriteRawTag(178, 8);
        output.WriteString(VenueEntranceGate);
      }
      if (localizedVenueEntranceGate_ != null) {
        output.WriteRawTag(186, 8);
        output.WriteMessage(LocalizedVenueEntranceGate);
      }
      if (VenueEntrancePortal.Length != 0) {
        output.WriteRawTag(194, 8);
        output.WriteString(VenueEntrancePortal);
      }
      if (localizedVenueEntrancePortal_ != null) {
        output.WriteRawTag(202, 8);
        output.WriteMessage(LocalizedVenueEntrancePortal);
      }
      if (EntranceDescription.Length != 0) {
        output.WriteRawTag(210, 8);
        output.WriteString(EntranceDescription);
      }
      if (localizedEntranceDescription_ != null) {
        output.WriteRawTag(218, 8);
        output.WriteMessage(LocalizedEntranceDescription);
      }
      if (TailgatingAllowed != false) {
        output.WriteRawTag(224, 8);
        output.WriteBool(TailgatingAllowed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AdmissionLevel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdmissionLevel);
      }
      if (localizedAdmissionLevel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedAdmissionLevel);
      }
      if (AdmissionLevelAbbreviation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdmissionLevelAbbreviation);
      }
      if (localizedAdmissionLevelAbbreviation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedAdmissionLevelAbbreviation);
      }
      if (AdditionalTicketAttributes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdditionalTicketAttributes);
      }
      if (localizedAdditionalTicketAttributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedAdditionalTicketAttributes);
      }
      if (AirlineCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AirlineCode);
      }
      if (localizedAirlineCode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedAirlineCode);
      }
      if (AttendeeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AttendeeName);
      }
      if (localizedAttendeeName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedAttendeeName);
      }
      size += artistIds_.CalculateSize(_repeated_artistIds_codec);
      if (AwayTeamAbbreviation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AwayTeamAbbreviation);
      }
      if (localizedAwayTeamAbbreviation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedAwayTeamAbbreviation);
      }
      if (AwayTeamLocation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AwayTeamLocation);
      }
      if (localizedAwayTeamLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedAwayTeamLocation);
      }
      if (AwayTeamName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AwayTeamName);
      }
      if (localizedAwayTeamName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedAwayTeamName);
      }
      if (balance_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Balance);
      }
      if (BoardingGroup.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BoardingGroup);
      }
      if (localizedBoardingGroup_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedBoardingGroup);
      }
      if (BoardingSequenceNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BoardingSequenceNumber);
      }
      if (CarNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CarNumber);
      }
      if (localizedCarNumber_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedCarNumber);
      }
      if (ConfirmationNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConfirmationNumber);
      }
      if (localizedConfirmationNumber_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedConfirmationNumber);
      }
      if (currentArrivalDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CurrentArrivalDate);
      }
      if (currentBoardingDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CurrentBoardingDate);
      }
      if (currentDepartureDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CurrentDepartureDate);
      }
      if (DepartureAirportCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DepartureAirportCode);
      }
      if (localizedDepartureAirportCode_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDepartureAirportCode);
      }
      if (DepartureAirportName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DepartureAirportName);
      }
      if (localizedDepartureAirportName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDepartureAirportName);
      }
      if (DepartureGate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DepartureGate);
      }
      if (localizedDepartureGate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDepartureGate);
      }
      if (DepartureLocation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DepartureLocation);
      }
      if (localizedDepartureLocation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDepartureLocation);
      }
      if (DepartureLocationDescription.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DepartureLocationDescription);
      }
      if (localizedDepartureLocationDescription_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDepartureLocationDescription);
      }
      if (DeparturePlatform.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DeparturePlatform);
      }
      if (localizedDeparturePlatform_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDeparturePlatform);
      }
      if (DepartureStationName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DepartureStationName);
      }
      if (localizedDepartureStationName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDepartureStationName);
      }
      if (DepartureTerminal.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DepartureTerminal);
      }
      if (localizedDepartureTerminal_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDepartureTerminal);
      }
      if (DestinationAirportCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DestinationAirportCode);
      }
      if (localizedDestinationAirportCode_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDestinationAirportCode);
      }
      if (DestinationAirportName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DestinationAirportName);
      }
      if (localizedDestinationAirportName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDestinationAirportName);
      }
      if (DestinationGate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DestinationGate);
      }
      if (localizedDestinationGate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDestinationGate);
      }
      if (DestinationLocation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DestinationLocation);
      }
      if (localizedDestinationLocation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDestinationLocation);
      }
      if (DestinationLocationDescription.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DestinationLocationDescription);
      }
      if (localizedDestinationLocationDescription_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDestinationLocationDescription);
      }
      if (DestinationPlatform.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DestinationPlatform);
      }
      if (localizedDestinationPlatform_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDestinationPlatform);
      }
      if (DestinationStationName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DestinationStationName);
      }
      if (localizedDestinationStationName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDestinationStationName);
      }
      if (DestinationTerminal.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DestinationTerminal);
      }
      if (localizedDestinationTerminal_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedDestinationTerminal);
      }
      if (Duration != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Duration);
      }
      if (eventEndDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EventEndDate);
      }
      if (EventName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EventName);
      }
      if (localizedEventName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedEventName);
      }
      if (eventStartDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EventStartDate);
      }
      if (eventStartDateInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EventStartDateInfo);
      }
      if (EventType != global::PassKit.Grpc.EventType.None) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (FlightCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FlightCode);
      }
      if (localizedFlightCode_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedFlightCode);
      }
      if (FlightNumber != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FlightNumber);
      }
      if (Genre.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Genre);
      }
      if (localizedGenre_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedGenre);
      }
      if (HomeTeamAbbreviation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HomeTeamAbbreviation);
      }
      if (localizedHomeTeamAbbreviation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedHomeTeamAbbreviation);
      }
      if (HomeTeamLocation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HomeTeamLocation);
      }
      if (localizedHomeTeamLocation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedHomeTeamLocation);
      }
      if (HomeTeamName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HomeTeamName);
      }
      if (localizedHomeTeamName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedHomeTeamName);
      }
      if (LeagueAbbreviation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LeagueAbbreviation);
      }
      if (localizedLeagueAbbreviation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedLeagueAbbreviation);
      }
      if (LeagueName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LeagueName);
      }
      if (localizedLeagueName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedLeagueName);
      }
      if (MembershipProgramName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MembershipProgramName);
      }
      if (localizedMembershipProgramName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedMembershipProgramName);
      }
      if (MembershipProgramNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MembershipProgramNumber);
      }
      if (originalArrivalDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OriginalArrivalDate);
      }
      if (originalBoardingDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OriginalBoardingDate);
      }
      if (originalDepartureDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OriginalDepartureDate);
      }
      if (passengerName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PassengerName);
      }
      size += performerNames_.CalculateSize(_repeated_performerNames_codec);
      if (PriorityStatus.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PriorityStatus);
      }
      if (localizedPriorityStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedPriorityStatus);
      }
      size += albumIds_.CalculateSize(_repeated_albumIds_codec);
      size += playlistIds_.CalculateSize(_repeated_playlistIds_codec);
      size += seats_.CalculateSize(_repeated_seats_codec);
      if (SecurityScreening.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SecurityScreening);
      }
      if (localizedSecurityScreening_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedSecurityScreening);
      }
      if (SilenceRequested != false) {
        size += 2 + 1;
      }
      if (SportName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SportName);
      }
      if (localizedSportName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedSportName);
      }
      if (totalPrice_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TotalPrice);
      }
      if (TransitProvider.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TransitProvider);
      }
      if (localizedTransitProvider_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedTransitProvider);
      }
      if (TransitStatus.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TransitStatus);
      }
      if (localizedTransitStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedTransitStatus);
      }
      if (TransitStatusReason.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TransitStatusReason);
      }
      if (localizedTransitStatusReason_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedTransitStatusReason);
      }
      if (VehicleName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VehicleName);
      }
      if (localizedVehicleName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedVehicleName);
      }
      if (VehicleNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VehicleNumber);
      }
      if (localizedVehicleNumber_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedVehicleNumber);
      }
      if (VehicleType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VehicleType);
      }
      if (localizedVehicleType_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedVehicleType);
      }
      if (venueBoxOfficeOpenDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueBoxOfficeOpenDate);
      }
      if (venueCloseDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueCloseDate);
      }
      if (venueDoorsOpenDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueDoorsOpenDate);
      }
      if (VenueEntrance.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VenueEntrance);
      }
      if (localizedVenueEntrance_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedVenueEntrance);
      }
      if (venueLocation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueLocation);
      }
      if (VenueName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VenueName);
      }
      if (localizedVenueName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedVenueName);
      }
      if (VenuePhoneNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VenuePhoneNumber);
      }
      if (localizedVenuePhoneNumber_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedVenuePhoneNumber);
      }
      if (VenueRegionName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VenueRegionName);
      }
      if (localizedVenueRegionName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedVenueRegionName);
      }
      if (VenueRoom.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VenueRoom);
      }
      if (localizedVenueRoom_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedVenueRoom);
      }
      size += wifiAccess_.CalculateSize(_repeated_wifiAccess_codec);
      if (venueFanZoneOpenDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueFanZoneOpenDate);
      }
      if (venueGatesOpenDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueGatesOpenDate);
      }
      if (venueParkingLotsOpenDate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VenueParkingLotsOpenDate);
      }
      if (VenueEntranceDoor.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VenueEntranceDoor);
      }
      if (localizedVenueEntranceDoor_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedVenueEntranceDoor);
      }
      if (VenueEntranceGate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VenueEntranceGate);
      }
      if (localizedVenueEntranceGate_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedVenueEntranceGate);
      }
      if (VenueEntrancePortal.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VenueEntrancePortal);
      }
      if (localizedVenueEntrancePortal_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedVenueEntrancePortal);
      }
      if (EntranceDescription.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EntranceDescription);
      }
      if (localizedEntranceDescription_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LocalizedEntranceDescription);
      }
      if (TailgatingAllowed != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SemanticTags other) {
      if (other == null) {
        return;
      }
      if (other.AdmissionLevel.Length != 0) {
        AdmissionLevel = other.AdmissionLevel;
      }
      if (other.localizedAdmissionLevel_ != null) {
        if (localizedAdmissionLevel_ == null) {
          LocalizedAdmissionLevel = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedAdmissionLevel.MergeFrom(other.LocalizedAdmissionLevel);
      }
      if (other.AdmissionLevelAbbreviation.Length != 0) {
        AdmissionLevelAbbreviation = other.AdmissionLevelAbbreviation;
      }
      if (other.localizedAdmissionLevelAbbreviation_ != null) {
        if (localizedAdmissionLevelAbbreviation_ == null) {
          LocalizedAdmissionLevelAbbreviation = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedAdmissionLevelAbbreviation.MergeFrom(other.LocalizedAdmissionLevelAbbreviation);
      }
      if (other.AdditionalTicketAttributes.Length != 0) {
        AdditionalTicketAttributes = other.AdditionalTicketAttributes;
      }
      if (other.localizedAdditionalTicketAttributes_ != null) {
        if (localizedAdditionalTicketAttributes_ == null) {
          LocalizedAdditionalTicketAttributes = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedAdditionalTicketAttributes.MergeFrom(other.LocalizedAdditionalTicketAttributes);
      }
      if (other.AirlineCode.Length != 0) {
        AirlineCode = other.AirlineCode;
      }
      if (other.localizedAirlineCode_ != null) {
        if (localizedAirlineCode_ == null) {
          LocalizedAirlineCode = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedAirlineCode.MergeFrom(other.LocalizedAirlineCode);
      }
      if (other.AttendeeName.Length != 0) {
        AttendeeName = other.AttendeeName;
      }
      if (other.localizedAttendeeName_ != null) {
        if (localizedAttendeeName_ == null) {
          LocalizedAttendeeName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedAttendeeName.MergeFrom(other.LocalizedAttendeeName);
      }
      artistIds_.Add(other.artistIds_);
      if (other.AwayTeamAbbreviation.Length != 0) {
        AwayTeamAbbreviation = other.AwayTeamAbbreviation;
      }
      if (other.localizedAwayTeamAbbreviation_ != null) {
        if (localizedAwayTeamAbbreviation_ == null) {
          LocalizedAwayTeamAbbreviation = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedAwayTeamAbbreviation.MergeFrom(other.LocalizedAwayTeamAbbreviation);
      }
      if (other.AwayTeamLocation.Length != 0) {
        AwayTeamLocation = other.AwayTeamLocation;
      }
      if (other.localizedAwayTeamLocation_ != null) {
        if (localizedAwayTeamLocation_ == null) {
          LocalizedAwayTeamLocation = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedAwayTeamLocation.MergeFrom(other.LocalizedAwayTeamLocation);
      }
      if (other.AwayTeamName.Length != 0) {
        AwayTeamName = other.AwayTeamName;
      }
      if (other.localizedAwayTeamName_ != null) {
        if (localizedAwayTeamName_ == null) {
          LocalizedAwayTeamName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedAwayTeamName.MergeFrom(other.LocalizedAwayTeamName);
      }
      if (other.balance_ != null) {
        if (balance_ == null) {
          Balance = new global::PassKit.Grpc.SemanticCurrencyAmount();
        }
        Balance.MergeFrom(other.Balance);
      }
      if (other.BoardingGroup.Length != 0) {
        BoardingGroup = other.BoardingGroup;
      }
      if (other.localizedBoardingGroup_ != null) {
        if (localizedBoardingGroup_ == null) {
          LocalizedBoardingGroup = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedBoardingGroup.MergeFrom(other.LocalizedBoardingGroup);
      }
      if (other.BoardingSequenceNumber.Length != 0) {
        BoardingSequenceNumber = other.BoardingSequenceNumber;
      }
      if (other.CarNumber.Length != 0) {
        CarNumber = other.CarNumber;
      }
      if (other.localizedCarNumber_ != null) {
        if (localizedCarNumber_ == null) {
          LocalizedCarNumber = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedCarNumber.MergeFrom(other.LocalizedCarNumber);
      }
      if (other.ConfirmationNumber.Length != 0) {
        ConfirmationNumber = other.ConfirmationNumber;
      }
      if (other.localizedConfirmationNumber_ != null) {
        if (localizedConfirmationNumber_ == null) {
          LocalizedConfirmationNumber = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedConfirmationNumber.MergeFrom(other.LocalizedConfirmationNumber);
      }
      if (other.currentArrivalDate_ != null) {
        if (currentArrivalDate_ == null) {
          CurrentArrivalDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CurrentArrivalDate.MergeFrom(other.CurrentArrivalDate);
      }
      if (other.currentBoardingDate_ != null) {
        if (currentBoardingDate_ == null) {
          CurrentBoardingDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CurrentBoardingDate.MergeFrom(other.CurrentBoardingDate);
      }
      if (other.currentDepartureDate_ != null) {
        if (currentDepartureDate_ == null) {
          CurrentDepartureDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CurrentDepartureDate.MergeFrom(other.CurrentDepartureDate);
      }
      if (other.DepartureAirportCode.Length != 0) {
        DepartureAirportCode = other.DepartureAirportCode;
      }
      if (other.localizedDepartureAirportCode_ != null) {
        if (localizedDepartureAirportCode_ == null) {
          LocalizedDepartureAirportCode = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDepartureAirportCode.MergeFrom(other.LocalizedDepartureAirportCode);
      }
      if (other.DepartureAirportName.Length != 0) {
        DepartureAirportName = other.DepartureAirportName;
      }
      if (other.localizedDepartureAirportName_ != null) {
        if (localizedDepartureAirportName_ == null) {
          LocalizedDepartureAirportName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDepartureAirportName.MergeFrom(other.LocalizedDepartureAirportName);
      }
      if (other.DepartureGate.Length != 0) {
        DepartureGate = other.DepartureGate;
      }
      if (other.localizedDepartureGate_ != null) {
        if (localizedDepartureGate_ == null) {
          LocalizedDepartureGate = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDepartureGate.MergeFrom(other.LocalizedDepartureGate);
      }
      if (other.DepartureLocation.Length != 0) {
        DepartureLocation = other.DepartureLocation;
      }
      if (other.localizedDepartureLocation_ != null) {
        if (localizedDepartureLocation_ == null) {
          LocalizedDepartureLocation = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDepartureLocation.MergeFrom(other.LocalizedDepartureLocation);
      }
      if (other.DepartureLocationDescription.Length != 0) {
        DepartureLocationDescription = other.DepartureLocationDescription;
      }
      if (other.localizedDepartureLocationDescription_ != null) {
        if (localizedDepartureLocationDescription_ == null) {
          LocalizedDepartureLocationDescription = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDepartureLocationDescription.MergeFrom(other.LocalizedDepartureLocationDescription);
      }
      if (other.DeparturePlatform.Length != 0) {
        DeparturePlatform = other.DeparturePlatform;
      }
      if (other.localizedDeparturePlatform_ != null) {
        if (localizedDeparturePlatform_ == null) {
          LocalizedDeparturePlatform = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDeparturePlatform.MergeFrom(other.LocalizedDeparturePlatform);
      }
      if (other.DepartureStationName.Length != 0) {
        DepartureStationName = other.DepartureStationName;
      }
      if (other.localizedDepartureStationName_ != null) {
        if (localizedDepartureStationName_ == null) {
          LocalizedDepartureStationName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDepartureStationName.MergeFrom(other.LocalizedDepartureStationName);
      }
      if (other.DepartureTerminal.Length != 0) {
        DepartureTerminal = other.DepartureTerminal;
      }
      if (other.localizedDepartureTerminal_ != null) {
        if (localizedDepartureTerminal_ == null) {
          LocalizedDepartureTerminal = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDepartureTerminal.MergeFrom(other.LocalizedDepartureTerminal);
      }
      if (other.DestinationAirportCode.Length != 0) {
        DestinationAirportCode = other.DestinationAirportCode;
      }
      if (other.localizedDestinationAirportCode_ != null) {
        if (localizedDestinationAirportCode_ == null) {
          LocalizedDestinationAirportCode = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDestinationAirportCode.MergeFrom(other.LocalizedDestinationAirportCode);
      }
      if (other.DestinationAirportName.Length != 0) {
        DestinationAirportName = other.DestinationAirportName;
      }
      if (other.localizedDestinationAirportName_ != null) {
        if (localizedDestinationAirportName_ == null) {
          LocalizedDestinationAirportName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDestinationAirportName.MergeFrom(other.LocalizedDestinationAirportName);
      }
      if (other.DestinationGate.Length != 0) {
        DestinationGate = other.DestinationGate;
      }
      if (other.localizedDestinationGate_ != null) {
        if (localizedDestinationGate_ == null) {
          LocalizedDestinationGate = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDestinationGate.MergeFrom(other.LocalizedDestinationGate);
      }
      if (other.DestinationLocation.Length != 0) {
        DestinationLocation = other.DestinationLocation;
      }
      if (other.localizedDestinationLocation_ != null) {
        if (localizedDestinationLocation_ == null) {
          LocalizedDestinationLocation = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDestinationLocation.MergeFrom(other.LocalizedDestinationLocation);
      }
      if (other.DestinationLocationDescription.Length != 0) {
        DestinationLocationDescription = other.DestinationLocationDescription;
      }
      if (other.localizedDestinationLocationDescription_ != null) {
        if (localizedDestinationLocationDescription_ == null) {
          LocalizedDestinationLocationDescription = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDestinationLocationDescription.MergeFrom(other.LocalizedDestinationLocationDescription);
      }
      if (other.DestinationPlatform.Length != 0) {
        DestinationPlatform = other.DestinationPlatform;
      }
      if (other.localizedDestinationPlatform_ != null) {
        if (localizedDestinationPlatform_ == null) {
          LocalizedDestinationPlatform = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDestinationPlatform.MergeFrom(other.LocalizedDestinationPlatform);
      }
      if (other.DestinationStationName.Length != 0) {
        DestinationStationName = other.DestinationStationName;
      }
      if (other.localizedDestinationStationName_ != null) {
        if (localizedDestinationStationName_ == null) {
          LocalizedDestinationStationName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDestinationStationName.MergeFrom(other.LocalizedDestinationStationName);
      }
      if (other.DestinationTerminal.Length != 0) {
        DestinationTerminal = other.DestinationTerminal;
      }
      if (other.localizedDestinationTerminal_ != null) {
        if (localizedDestinationTerminal_ == null) {
          LocalizedDestinationTerminal = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedDestinationTerminal.MergeFrom(other.LocalizedDestinationTerminal);
      }
      if (other.Duration != 0UL) {
        Duration = other.Duration;
      }
      if (other.eventEndDate_ != null) {
        if (eventEndDate_ == null) {
          EventEndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EventEndDate.MergeFrom(other.EventEndDate);
      }
      if (other.EventName.Length != 0) {
        EventName = other.EventName;
      }
      if (other.localizedEventName_ != null) {
        if (localizedEventName_ == null) {
          LocalizedEventName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedEventName.MergeFrom(other.LocalizedEventName);
      }
      if (other.eventStartDate_ != null) {
        if (eventStartDate_ == null) {
          EventStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EventStartDate.MergeFrom(other.EventStartDate);
      }
      if (other.eventStartDateInfo_ != null) {
        if (eventStartDateInfo_ == null) {
          EventStartDateInfo = new global::PassKit.Grpc.SemanticEventDateInfo();
        }
        EventStartDateInfo.MergeFrom(other.EventStartDateInfo);
      }
      if (other.EventType != global::PassKit.Grpc.EventType.None) {
        EventType = other.EventType;
      }
      if (other.FlightCode.Length != 0) {
        FlightCode = other.FlightCode;
      }
      if (other.localizedFlightCode_ != null) {
        if (localizedFlightCode_ == null) {
          LocalizedFlightCode = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedFlightCode.MergeFrom(other.LocalizedFlightCode);
      }
      if (other.FlightNumber != 0) {
        FlightNumber = other.FlightNumber;
      }
      if (other.Genre.Length != 0) {
        Genre = other.Genre;
      }
      if (other.localizedGenre_ != null) {
        if (localizedGenre_ == null) {
          LocalizedGenre = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedGenre.MergeFrom(other.LocalizedGenre);
      }
      if (other.HomeTeamAbbreviation.Length != 0) {
        HomeTeamAbbreviation = other.HomeTeamAbbreviation;
      }
      if (other.localizedHomeTeamAbbreviation_ != null) {
        if (localizedHomeTeamAbbreviation_ == null) {
          LocalizedHomeTeamAbbreviation = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedHomeTeamAbbreviation.MergeFrom(other.LocalizedHomeTeamAbbreviation);
      }
      if (other.HomeTeamLocation.Length != 0) {
        HomeTeamLocation = other.HomeTeamLocation;
      }
      if (other.localizedHomeTeamLocation_ != null) {
        if (localizedHomeTeamLocation_ == null) {
          LocalizedHomeTeamLocation = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedHomeTeamLocation.MergeFrom(other.LocalizedHomeTeamLocation);
      }
      if (other.HomeTeamName.Length != 0) {
        HomeTeamName = other.HomeTeamName;
      }
      if (other.localizedHomeTeamName_ != null) {
        if (localizedHomeTeamName_ == null) {
          LocalizedHomeTeamName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedHomeTeamName.MergeFrom(other.LocalizedHomeTeamName);
      }
      if (other.LeagueAbbreviation.Length != 0) {
        LeagueAbbreviation = other.LeagueAbbreviation;
      }
      if (other.localizedLeagueAbbreviation_ != null) {
        if (localizedLeagueAbbreviation_ == null) {
          LocalizedLeagueAbbreviation = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedLeagueAbbreviation.MergeFrom(other.LocalizedLeagueAbbreviation);
      }
      if (other.LeagueName.Length != 0) {
        LeagueName = other.LeagueName;
      }
      if (other.localizedLeagueName_ != null) {
        if (localizedLeagueName_ == null) {
          LocalizedLeagueName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedLeagueName.MergeFrom(other.LocalizedLeagueName);
      }
      if (other.MembershipProgramName.Length != 0) {
        MembershipProgramName = other.MembershipProgramName;
      }
      if (other.localizedMembershipProgramName_ != null) {
        if (localizedMembershipProgramName_ == null) {
          LocalizedMembershipProgramName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedMembershipProgramName.MergeFrom(other.LocalizedMembershipProgramName);
      }
      if (other.MembershipProgramNumber.Length != 0) {
        MembershipProgramNumber = other.MembershipProgramNumber;
      }
      if (other.originalArrivalDate_ != null) {
        if (originalArrivalDate_ == null) {
          OriginalArrivalDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OriginalArrivalDate.MergeFrom(other.OriginalArrivalDate);
      }
      if (other.originalBoardingDate_ != null) {
        if (originalBoardingDate_ == null) {
          OriginalBoardingDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OriginalBoardingDate.MergeFrom(other.OriginalBoardingDate);
      }
      if (other.originalDepartureDate_ != null) {
        if (originalDepartureDate_ == null) {
          OriginalDepartureDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OriginalDepartureDate.MergeFrom(other.OriginalDepartureDate);
      }
      if (other.passengerName_ != null) {
        if (passengerName_ == null) {
          PassengerName = new global::PassKit.Grpc.SemanticPersonName();
        }
        PassengerName.MergeFrom(other.PassengerName);
      }
      performerNames_.Add(other.performerNames_);
      if (other.PriorityStatus.Length != 0) {
        PriorityStatus = other.PriorityStatus;
      }
      if (other.localizedPriorityStatus_ != null) {
        if (localizedPriorityStatus_ == null) {
          LocalizedPriorityStatus = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedPriorityStatus.MergeFrom(other.LocalizedPriorityStatus);
      }
      albumIds_.Add(other.albumIds_);
      playlistIds_.Add(other.playlistIds_);
      seats_.Add(other.seats_);
      if (other.SecurityScreening.Length != 0) {
        SecurityScreening = other.SecurityScreening;
      }
      if (other.localizedSecurityScreening_ != null) {
        if (localizedSecurityScreening_ == null) {
          LocalizedSecurityScreening = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedSecurityScreening.MergeFrom(other.LocalizedSecurityScreening);
      }
      if (other.SilenceRequested != false) {
        SilenceRequested = other.SilenceRequested;
      }
      if (other.SportName.Length != 0) {
        SportName = other.SportName;
      }
      if (other.localizedSportName_ != null) {
        if (localizedSportName_ == null) {
          LocalizedSportName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedSportName.MergeFrom(other.LocalizedSportName);
      }
      if (other.totalPrice_ != null) {
        if (totalPrice_ == null) {
          TotalPrice = new global::PassKit.Grpc.SemanticCurrencyAmount();
        }
        TotalPrice.MergeFrom(other.TotalPrice);
      }
      if (other.TransitProvider.Length != 0) {
        TransitProvider = other.TransitProvider;
      }
      if (other.localizedTransitProvider_ != null) {
        if (localizedTransitProvider_ == null) {
          LocalizedTransitProvider = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedTransitProvider.MergeFrom(other.LocalizedTransitProvider);
      }
      if (other.TransitStatus.Length != 0) {
        TransitStatus = other.TransitStatus;
      }
      if (other.localizedTransitStatus_ != null) {
        if (localizedTransitStatus_ == null) {
          LocalizedTransitStatus = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedTransitStatus.MergeFrom(other.LocalizedTransitStatus);
      }
      if (other.TransitStatusReason.Length != 0) {
        TransitStatusReason = other.TransitStatusReason;
      }
      if (other.localizedTransitStatusReason_ != null) {
        if (localizedTransitStatusReason_ == null) {
          LocalizedTransitStatusReason = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedTransitStatusReason.MergeFrom(other.LocalizedTransitStatusReason);
      }
      if (other.VehicleName.Length != 0) {
        VehicleName = other.VehicleName;
      }
      if (other.localizedVehicleName_ != null) {
        if (localizedVehicleName_ == null) {
          LocalizedVehicleName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedVehicleName.MergeFrom(other.LocalizedVehicleName);
      }
      if (other.VehicleNumber.Length != 0) {
        VehicleNumber = other.VehicleNumber;
      }
      if (other.localizedVehicleNumber_ != null) {
        if (localizedVehicleNumber_ == null) {
          LocalizedVehicleNumber = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedVehicleNumber.MergeFrom(other.LocalizedVehicleNumber);
      }
      if (other.VehicleType.Length != 0) {
        VehicleType = other.VehicleType;
      }
      if (other.localizedVehicleType_ != null) {
        if (localizedVehicleType_ == null) {
          LocalizedVehicleType = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedVehicleType.MergeFrom(other.LocalizedVehicleType);
      }
      if (other.venueBoxOfficeOpenDate_ != null) {
        if (venueBoxOfficeOpenDate_ == null) {
          VenueBoxOfficeOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VenueBoxOfficeOpenDate.MergeFrom(other.VenueBoxOfficeOpenDate);
      }
      if (other.venueCloseDate_ != null) {
        if (venueCloseDate_ == null) {
          VenueCloseDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VenueCloseDate.MergeFrom(other.VenueCloseDate);
      }
      if (other.venueDoorsOpenDate_ != null) {
        if (venueDoorsOpenDate_ == null) {
          VenueDoorsOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VenueDoorsOpenDate.MergeFrom(other.VenueDoorsOpenDate);
      }
      if (other.VenueEntrance.Length != 0) {
        VenueEntrance = other.VenueEntrance;
      }
      if (other.localizedVenueEntrance_ != null) {
        if (localizedVenueEntrance_ == null) {
          LocalizedVenueEntrance = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedVenueEntrance.MergeFrom(other.LocalizedVenueEntrance);
      }
      if (other.venueLocation_ != null) {
        if (venueLocation_ == null) {
          VenueLocation = new global::PassKit.Grpc.SemanticLocation();
        }
        VenueLocation.MergeFrom(other.VenueLocation);
      }
      if (other.VenueName.Length != 0) {
        VenueName = other.VenueName;
      }
      if (other.localizedVenueName_ != null) {
        if (localizedVenueName_ == null) {
          LocalizedVenueName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedVenueName.MergeFrom(other.LocalizedVenueName);
      }
      if (other.VenuePhoneNumber.Length != 0) {
        VenuePhoneNumber = other.VenuePhoneNumber;
      }
      if (other.localizedVenuePhoneNumber_ != null) {
        if (localizedVenuePhoneNumber_ == null) {
          LocalizedVenuePhoneNumber = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedVenuePhoneNumber.MergeFrom(other.LocalizedVenuePhoneNumber);
      }
      if (other.VenueRegionName.Length != 0) {
        VenueRegionName = other.VenueRegionName;
      }
      if (other.localizedVenueRegionName_ != null) {
        if (localizedVenueRegionName_ == null) {
          LocalizedVenueRegionName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedVenueRegionName.MergeFrom(other.LocalizedVenueRegionName);
      }
      if (other.VenueRoom.Length != 0) {
        VenueRoom = other.VenueRoom;
      }
      if (other.localizedVenueRoom_ != null) {
        if (localizedVenueRoom_ == null) {
          LocalizedVenueRoom = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedVenueRoom.MergeFrom(other.LocalizedVenueRoom);
      }
      wifiAccess_.Add(other.wifiAccess_);
      if (other.venueFanZoneOpenDate_ != null) {
        if (venueFanZoneOpenDate_ == null) {
          VenueFanZoneOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VenueFanZoneOpenDate.MergeFrom(other.VenueFanZoneOpenDate);
      }
      if (other.venueGatesOpenDate_ != null) {
        if (venueGatesOpenDate_ == null) {
          VenueGatesOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VenueGatesOpenDate.MergeFrom(other.VenueGatesOpenDate);
      }
      if (other.venueParkingLotsOpenDate_ != null) {
        if (venueParkingLotsOpenDate_ == null) {
          VenueParkingLotsOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VenueParkingLotsOpenDate.MergeFrom(other.VenueParkingLotsOpenDate);
      }
      if (other.VenueEntranceDoor.Length != 0) {
        VenueEntranceDoor = other.VenueEntranceDoor;
      }
      if (other.localizedVenueEntranceDoor_ != null) {
        if (localizedVenueEntranceDoor_ == null) {
          LocalizedVenueEntranceDoor = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedVenueEntranceDoor.MergeFrom(other.LocalizedVenueEntranceDoor);
      }
      if (other.VenueEntranceGate.Length != 0) {
        VenueEntranceGate = other.VenueEntranceGate;
      }
      if (other.localizedVenueEntranceGate_ != null) {
        if (localizedVenueEntranceGate_ == null) {
          LocalizedVenueEntranceGate = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedVenueEntranceGate.MergeFrom(other.LocalizedVenueEntranceGate);
      }
      if (other.VenueEntrancePortal.Length != 0) {
        VenueEntrancePortal = other.VenueEntrancePortal;
      }
      if (other.localizedVenueEntrancePortal_ != null) {
        if (localizedVenueEntrancePortal_ == null) {
          LocalizedVenueEntrancePortal = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedVenueEntrancePortal.MergeFrom(other.LocalizedVenueEntrancePortal);
      }
      if (other.EntranceDescription.Length != 0) {
        EntranceDescription = other.EntranceDescription;
      }
      if (other.localizedEntranceDescription_ != null) {
        if (localizedEntranceDescription_ == null) {
          LocalizedEntranceDescription = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedEntranceDescription.MergeFrom(other.LocalizedEntranceDescription);
      }
      if (other.TailgatingAllowed != false) {
        TailgatingAllowed = other.TailgatingAllowed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AdmissionLevel = input.ReadString();
            break;
          }
          case 18: {
            if (localizedAdmissionLevel_ == null) {
              LocalizedAdmissionLevel = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAdmissionLevel);
            break;
          }
          case 26: {
            AdmissionLevelAbbreviation = input.ReadString();
            break;
          }
          case 34: {
            if (localizedAdmissionLevelAbbreviation_ == null) {
              LocalizedAdmissionLevelAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAdmissionLevelAbbreviation);
            break;
          }
          case 42: {
            AdditionalTicketAttributes = input.ReadString();
            break;
          }
          case 50: {
            if (localizedAdditionalTicketAttributes_ == null) {
              LocalizedAdditionalTicketAttributes = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAdditionalTicketAttributes);
            break;
          }
          case 58: {
            AirlineCode = input.ReadString();
            break;
          }
          case 66: {
            if (localizedAirlineCode_ == null) {
              LocalizedAirlineCode = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAirlineCode);
            break;
          }
          case 74: {
            AttendeeName = input.ReadString();
            break;
          }
          case 82: {
            if (localizedAttendeeName_ == null) {
              LocalizedAttendeeName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAttendeeName);
            break;
          }
          case 90: {
            artistIds_.AddEntriesFrom(input, _repeated_artistIds_codec);
            break;
          }
          case 98: {
            AwayTeamAbbreviation = input.ReadString();
            break;
          }
          case 106: {
            if (localizedAwayTeamAbbreviation_ == null) {
              LocalizedAwayTeamAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAwayTeamAbbreviation);
            break;
          }
          case 114: {
            AwayTeamLocation = input.ReadString();
            break;
          }
          case 122: {
            if (localizedAwayTeamLocation_ == null) {
              LocalizedAwayTeamLocation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAwayTeamLocation);
            break;
          }
          case 130: {
            AwayTeamName = input.ReadString();
            break;
          }
          case 138: {
            if (localizedAwayTeamName_ == null) {
              LocalizedAwayTeamName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAwayTeamName);
            break;
          }
          case 146: {
            if (balance_ == null) {
              Balance = new global::PassKit.Grpc.SemanticCurrencyAmount();
            }
            input.ReadMessage(Balance);
            break;
          }
          case 154: {
            BoardingGroup = input.ReadString();
            break;
          }
          case 162: {
            if (localizedBoardingGroup_ == null) {
              LocalizedBoardingGroup = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedBoardingGroup);
            break;
          }
          case 170: {
            BoardingSequenceNumber = input.ReadString();
            break;
          }
          case 178: {
            CarNumber = input.ReadString();
            break;
          }
          case 186: {
            if (localizedCarNumber_ == null) {
              LocalizedCarNumber = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedCarNumber);
            break;
          }
          case 194: {
            ConfirmationNumber = input.ReadString();
            break;
          }
          case 202: {
            if (localizedConfirmationNumber_ == null) {
              LocalizedConfirmationNumber = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedConfirmationNumber);
            break;
          }
          case 210: {
            if (currentArrivalDate_ == null) {
              CurrentArrivalDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentArrivalDate);
            break;
          }
          case 218: {
            if (currentBoardingDate_ == null) {
              CurrentBoardingDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentBoardingDate);
            break;
          }
          case 226: {
            if (currentDepartureDate_ == null) {
              CurrentDepartureDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentDepartureDate);
            break;
          }
          case 234: {
            DepartureAirportCode = input.ReadString();
            break;
          }
          case 242: {
            if (localizedDepartureAirportCode_ == null) {
              LocalizedDepartureAirportCode = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureAirportCode);
            break;
          }
          case 250: {
            DepartureAirportName = input.ReadString();
            break;
          }
          case 258: {
            if (localizedDepartureAirportName_ == null) {
              LocalizedDepartureAirportName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureAirportName);
            break;
          }
          case 266: {
            DepartureGate = input.ReadString();
            break;
          }
          case 274: {
            if (localizedDepartureGate_ == null) {
              LocalizedDepartureGate = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureGate);
            break;
          }
          case 282: {
            DepartureLocation = input.ReadString();
            break;
          }
          case 290: {
            if (localizedDepartureLocation_ == null) {
              LocalizedDepartureLocation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureLocation);
            break;
          }
          case 298: {
            DepartureLocationDescription = input.ReadString();
            break;
          }
          case 306: {
            if (localizedDepartureLocationDescription_ == null) {
              LocalizedDepartureLocationDescription = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureLocationDescription);
            break;
          }
          case 314: {
            DeparturePlatform = input.ReadString();
            break;
          }
          case 322: {
            if (localizedDeparturePlatform_ == null) {
              LocalizedDeparturePlatform = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDeparturePlatform);
            break;
          }
          case 330: {
            DepartureStationName = input.ReadString();
            break;
          }
          case 338: {
            if (localizedDepartureStationName_ == null) {
              LocalizedDepartureStationName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureStationName);
            break;
          }
          case 346: {
            DepartureTerminal = input.ReadString();
            break;
          }
          case 354: {
            if (localizedDepartureTerminal_ == null) {
              LocalizedDepartureTerminal = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureTerminal);
            break;
          }
          case 362: {
            DestinationAirportCode = input.ReadString();
            break;
          }
          case 370: {
            if (localizedDestinationAirportCode_ == null) {
              LocalizedDestinationAirportCode = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationAirportCode);
            break;
          }
          case 378: {
            DestinationAirportName = input.ReadString();
            break;
          }
          case 386: {
            if (localizedDestinationAirportName_ == null) {
              LocalizedDestinationAirportName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationAirportName);
            break;
          }
          case 394: {
            DestinationGate = input.ReadString();
            break;
          }
          case 402: {
            if (localizedDestinationGate_ == null) {
              LocalizedDestinationGate = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationGate);
            break;
          }
          case 410: {
            DestinationLocation = input.ReadString();
            break;
          }
          case 418: {
            if (localizedDestinationLocation_ == null) {
              LocalizedDestinationLocation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationLocation);
            break;
          }
          case 426: {
            DestinationLocationDescription = input.ReadString();
            break;
          }
          case 434: {
            if (localizedDestinationLocationDescription_ == null) {
              LocalizedDestinationLocationDescription = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationLocationDescription);
            break;
          }
          case 442: {
            DestinationPlatform = input.ReadString();
            break;
          }
          case 450: {
            if (localizedDestinationPlatform_ == null) {
              LocalizedDestinationPlatform = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationPlatform);
            break;
          }
          case 458: {
            DestinationStationName = input.ReadString();
            break;
          }
          case 466: {
            if (localizedDestinationStationName_ == null) {
              LocalizedDestinationStationName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationStationName);
            break;
          }
          case 474: {
            DestinationTerminal = input.ReadString();
            break;
          }
          case 482: {
            if (localizedDestinationTerminal_ == null) {
              LocalizedDestinationTerminal = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationTerminal);
            break;
          }
          case 488: {
            Duration = input.ReadUInt64();
            break;
          }
          case 498: {
            if (eventEndDate_ == null) {
              EventEndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EventEndDate);
            break;
          }
          case 506: {
            EventName = input.ReadString();
            break;
          }
          case 514: {
            if (localizedEventName_ == null) {
              LocalizedEventName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedEventName);
            break;
          }
          case 522: {
            if (eventStartDate_ == null) {
              EventStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EventStartDate);
            break;
          }
          case 530: {
            if (eventStartDateInfo_ == null) {
              EventStartDateInfo = new global::PassKit.Grpc.SemanticEventDateInfo();
            }
            input.ReadMessage(EventStartDateInfo);
            break;
          }
          case 536: {
            EventType = (global::PassKit.Grpc.EventType) input.ReadEnum();
            break;
          }
          case 546: {
            FlightCode = input.ReadString();
            break;
          }
          case 554: {
            if (localizedFlightCode_ == null) {
              LocalizedFlightCode = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedFlightCode);
            break;
          }
          case 560: {
            FlightNumber = input.ReadUInt32();
            break;
          }
          case 570: {
            Genre = input.ReadString();
            break;
          }
          case 578: {
            if (localizedGenre_ == null) {
              LocalizedGenre = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedGenre);
            break;
          }
          case 586: {
            HomeTeamAbbreviation = input.ReadString();
            break;
          }
          case 594: {
            if (localizedHomeTeamAbbreviation_ == null) {
              LocalizedHomeTeamAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedHomeTeamAbbreviation);
            break;
          }
          case 602: {
            HomeTeamLocation = input.ReadString();
            break;
          }
          case 610: {
            if (localizedHomeTeamLocation_ == null) {
              LocalizedHomeTeamLocation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedHomeTeamLocation);
            break;
          }
          case 618: {
            HomeTeamName = input.ReadString();
            break;
          }
          case 626: {
            if (localizedHomeTeamName_ == null) {
              LocalizedHomeTeamName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedHomeTeamName);
            break;
          }
          case 634: {
            LeagueAbbreviation = input.ReadString();
            break;
          }
          case 642: {
            if (localizedLeagueAbbreviation_ == null) {
              LocalizedLeagueAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedLeagueAbbreviation);
            break;
          }
          case 650: {
            LeagueName = input.ReadString();
            break;
          }
          case 658: {
            if (localizedLeagueName_ == null) {
              LocalizedLeagueName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedLeagueName);
            break;
          }
          case 666: {
            MembershipProgramName = input.ReadString();
            break;
          }
          case 674: {
            if (localizedMembershipProgramName_ == null) {
              LocalizedMembershipProgramName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedMembershipProgramName);
            break;
          }
          case 682: {
            MembershipProgramNumber = input.ReadString();
            break;
          }
          case 690: {
            if (originalArrivalDate_ == null) {
              OriginalArrivalDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OriginalArrivalDate);
            break;
          }
          case 698: {
            if (originalBoardingDate_ == null) {
              OriginalBoardingDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OriginalBoardingDate);
            break;
          }
          case 706: {
            if (originalDepartureDate_ == null) {
              OriginalDepartureDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OriginalDepartureDate);
            break;
          }
          case 714: {
            if (passengerName_ == null) {
              PassengerName = new global::PassKit.Grpc.SemanticPersonName();
            }
            input.ReadMessage(PassengerName);
            break;
          }
          case 722: {
            performerNames_.AddEntriesFrom(input, _repeated_performerNames_codec);
            break;
          }
          case 730: {
            PriorityStatus = input.ReadString();
            break;
          }
          case 738: {
            if (localizedPriorityStatus_ == null) {
              LocalizedPriorityStatus = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedPriorityStatus);
            break;
          }
          case 746: {
            albumIds_.AddEntriesFrom(input, _repeated_albumIds_codec);
            break;
          }
          case 754: {
            playlistIds_.AddEntriesFrom(input, _repeated_playlistIds_codec);
            break;
          }
          case 762: {
            seats_.AddEntriesFrom(input, _repeated_seats_codec);
            break;
          }
          case 770: {
            SecurityScreening = input.ReadString();
            break;
          }
          case 778: {
            if (localizedSecurityScreening_ == null) {
              LocalizedSecurityScreening = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedSecurityScreening);
            break;
          }
          case 784: {
            SilenceRequested = input.ReadBool();
            break;
          }
          case 794: {
            SportName = input.ReadString();
            break;
          }
          case 802: {
            if (localizedSportName_ == null) {
              LocalizedSportName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedSportName);
            break;
          }
          case 810: {
            if (totalPrice_ == null) {
              TotalPrice = new global::PassKit.Grpc.SemanticCurrencyAmount();
            }
            input.ReadMessage(TotalPrice);
            break;
          }
          case 818: {
            TransitProvider = input.ReadString();
            break;
          }
          case 826: {
            if (localizedTransitProvider_ == null) {
              LocalizedTransitProvider = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedTransitProvider);
            break;
          }
          case 834: {
            TransitStatus = input.ReadString();
            break;
          }
          case 842: {
            if (localizedTransitStatus_ == null) {
              LocalizedTransitStatus = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedTransitStatus);
            break;
          }
          case 850: {
            TransitStatusReason = input.ReadString();
            break;
          }
          case 858: {
            if (localizedTransitStatusReason_ == null) {
              LocalizedTransitStatusReason = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedTransitStatusReason);
            break;
          }
          case 866: {
            VehicleName = input.ReadString();
            break;
          }
          case 874: {
            if (localizedVehicleName_ == null) {
              LocalizedVehicleName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVehicleName);
            break;
          }
          case 882: {
            VehicleNumber = input.ReadString();
            break;
          }
          case 890: {
            if (localizedVehicleNumber_ == null) {
              LocalizedVehicleNumber = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVehicleNumber);
            break;
          }
          case 898: {
            VehicleType = input.ReadString();
            break;
          }
          case 906: {
            if (localizedVehicleType_ == null) {
              LocalizedVehicleType = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVehicleType);
            break;
          }
          case 914: {
            if (venueBoxOfficeOpenDate_ == null) {
              VenueBoxOfficeOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueBoxOfficeOpenDate);
            break;
          }
          case 922: {
            if (venueCloseDate_ == null) {
              VenueCloseDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueCloseDate);
            break;
          }
          case 930: {
            if (venueDoorsOpenDate_ == null) {
              VenueDoorsOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueDoorsOpenDate);
            break;
          }
          case 938: {
            VenueEntrance = input.ReadString();
            break;
          }
          case 946: {
            if (localizedVenueEntrance_ == null) {
              LocalizedVenueEntrance = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueEntrance);
            break;
          }
          case 954: {
            if (venueLocation_ == null) {
              VenueLocation = new global::PassKit.Grpc.SemanticLocation();
            }
            input.ReadMessage(VenueLocation);
            break;
          }
          case 962: {
            VenueName = input.ReadString();
            break;
          }
          case 970: {
            if (localizedVenueName_ == null) {
              LocalizedVenueName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueName);
            break;
          }
          case 978: {
            VenuePhoneNumber = input.ReadString();
            break;
          }
          case 986: {
            if (localizedVenuePhoneNumber_ == null) {
              LocalizedVenuePhoneNumber = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenuePhoneNumber);
            break;
          }
          case 994: {
            VenueRegionName = input.ReadString();
            break;
          }
          case 1002: {
            if (localizedVenueRegionName_ == null) {
              LocalizedVenueRegionName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueRegionName);
            break;
          }
          case 1010: {
            VenueRoom = input.ReadString();
            break;
          }
          case 1018: {
            if (localizedVenueRoom_ == null) {
              LocalizedVenueRoom = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueRoom);
            break;
          }
          case 1026: {
            wifiAccess_.AddEntriesFrom(input, _repeated_wifiAccess_codec);
            break;
          }
          case 1034: {
            if (venueFanZoneOpenDate_ == null) {
              VenueFanZoneOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueFanZoneOpenDate);
            break;
          }
          case 1042: {
            if (venueGatesOpenDate_ == null) {
              VenueGatesOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueGatesOpenDate);
            break;
          }
          case 1050: {
            if (venueParkingLotsOpenDate_ == null) {
              VenueParkingLotsOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueParkingLotsOpenDate);
            break;
          }
          case 1058: {
            VenueEntranceDoor = input.ReadString();
            break;
          }
          case 1066: {
            if (localizedVenueEntranceDoor_ == null) {
              LocalizedVenueEntranceDoor = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueEntranceDoor);
            break;
          }
          case 1074: {
            VenueEntranceGate = input.ReadString();
            break;
          }
          case 1082: {
            if (localizedVenueEntranceGate_ == null) {
              LocalizedVenueEntranceGate = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueEntranceGate);
            break;
          }
          case 1090: {
            VenueEntrancePortal = input.ReadString();
            break;
          }
          case 1098: {
            if (localizedVenueEntrancePortal_ == null) {
              LocalizedVenueEntrancePortal = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueEntrancePortal);
            break;
          }
          case 1106: {
            EntranceDescription = input.ReadString();
            break;
          }
          case 1114: {
            if (localizedEntranceDescription_ == null) {
              LocalizedEntranceDescription = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedEntranceDescription);
            break;
          }
          case 1120: {
            TailgatingAllowed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AdmissionLevel = input.ReadString();
            break;
          }
          case 18: {
            if (localizedAdmissionLevel_ == null) {
              LocalizedAdmissionLevel = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAdmissionLevel);
            break;
          }
          case 26: {
            AdmissionLevelAbbreviation = input.ReadString();
            break;
          }
          case 34: {
            if (localizedAdmissionLevelAbbreviation_ == null) {
              LocalizedAdmissionLevelAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAdmissionLevelAbbreviation);
            break;
          }
          case 42: {
            AdditionalTicketAttributes = input.ReadString();
            break;
          }
          case 50: {
            if (localizedAdditionalTicketAttributes_ == null) {
              LocalizedAdditionalTicketAttributes = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAdditionalTicketAttributes);
            break;
          }
          case 58: {
            AirlineCode = input.ReadString();
            break;
          }
          case 66: {
            if (localizedAirlineCode_ == null) {
              LocalizedAirlineCode = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAirlineCode);
            break;
          }
          case 74: {
            AttendeeName = input.ReadString();
            break;
          }
          case 82: {
            if (localizedAttendeeName_ == null) {
              LocalizedAttendeeName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAttendeeName);
            break;
          }
          case 90: {
            artistIds_.AddEntriesFrom(ref input, _repeated_artistIds_codec);
            break;
          }
          case 98: {
            AwayTeamAbbreviation = input.ReadString();
            break;
          }
          case 106: {
            if (localizedAwayTeamAbbreviation_ == null) {
              LocalizedAwayTeamAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAwayTeamAbbreviation);
            break;
          }
          case 114: {
            AwayTeamLocation = input.ReadString();
            break;
          }
          case 122: {
            if (localizedAwayTeamLocation_ == null) {
              LocalizedAwayTeamLocation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAwayTeamLocation);
            break;
          }
          case 130: {
            AwayTeamName = input.ReadString();
            break;
          }
          case 138: {
            if (localizedAwayTeamName_ == null) {
              LocalizedAwayTeamName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedAwayTeamName);
            break;
          }
          case 146: {
            if (balance_ == null) {
              Balance = new global::PassKit.Grpc.SemanticCurrencyAmount();
            }
            input.ReadMessage(Balance);
            break;
          }
          case 154: {
            BoardingGroup = input.ReadString();
            break;
          }
          case 162: {
            if (localizedBoardingGroup_ == null) {
              LocalizedBoardingGroup = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedBoardingGroup);
            break;
          }
          case 170: {
            BoardingSequenceNumber = input.ReadString();
            break;
          }
          case 178: {
            CarNumber = input.ReadString();
            break;
          }
          case 186: {
            if (localizedCarNumber_ == null) {
              LocalizedCarNumber = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedCarNumber);
            break;
          }
          case 194: {
            ConfirmationNumber = input.ReadString();
            break;
          }
          case 202: {
            if (localizedConfirmationNumber_ == null) {
              LocalizedConfirmationNumber = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedConfirmationNumber);
            break;
          }
          case 210: {
            if (currentArrivalDate_ == null) {
              CurrentArrivalDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentArrivalDate);
            break;
          }
          case 218: {
            if (currentBoardingDate_ == null) {
              CurrentBoardingDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentBoardingDate);
            break;
          }
          case 226: {
            if (currentDepartureDate_ == null) {
              CurrentDepartureDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CurrentDepartureDate);
            break;
          }
          case 234: {
            DepartureAirportCode = input.ReadString();
            break;
          }
          case 242: {
            if (localizedDepartureAirportCode_ == null) {
              LocalizedDepartureAirportCode = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureAirportCode);
            break;
          }
          case 250: {
            DepartureAirportName = input.ReadString();
            break;
          }
          case 258: {
            if (localizedDepartureAirportName_ == null) {
              LocalizedDepartureAirportName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureAirportName);
            break;
          }
          case 266: {
            DepartureGate = input.ReadString();
            break;
          }
          case 274: {
            if (localizedDepartureGate_ == null) {
              LocalizedDepartureGate = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureGate);
            break;
          }
          case 282: {
            DepartureLocation = input.ReadString();
            break;
          }
          case 290: {
            if (localizedDepartureLocation_ == null) {
              LocalizedDepartureLocation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureLocation);
            break;
          }
          case 298: {
            DepartureLocationDescription = input.ReadString();
            break;
          }
          case 306: {
            if (localizedDepartureLocationDescription_ == null) {
              LocalizedDepartureLocationDescription = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureLocationDescription);
            break;
          }
          case 314: {
            DeparturePlatform = input.ReadString();
            break;
          }
          case 322: {
            if (localizedDeparturePlatform_ == null) {
              LocalizedDeparturePlatform = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDeparturePlatform);
            break;
          }
          case 330: {
            DepartureStationName = input.ReadString();
            break;
          }
          case 338: {
            if (localizedDepartureStationName_ == null) {
              LocalizedDepartureStationName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureStationName);
            break;
          }
          case 346: {
            DepartureTerminal = input.ReadString();
            break;
          }
          case 354: {
            if (localizedDepartureTerminal_ == null) {
              LocalizedDepartureTerminal = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDepartureTerminal);
            break;
          }
          case 362: {
            DestinationAirportCode = input.ReadString();
            break;
          }
          case 370: {
            if (localizedDestinationAirportCode_ == null) {
              LocalizedDestinationAirportCode = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationAirportCode);
            break;
          }
          case 378: {
            DestinationAirportName = input.ReadString();
            break;
          }
          case 386: {
            if (localizedDestinationAirportName_ == null) {
              LocalizedDestinationAirportName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationAirportName);
            break;
          }
          case 394: {
            DestinationGate = input.ReadString();
            break;
          }
          case 402: {
            if (localizedDestinationGate_ == null) {
              LocalizedDestinationGate = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationGate);
            break;
          }
          case 410: {
            DestinationLocation = input.ReadString();
            break;
          }
          case 418: {
            if (localizedDestinationLocation_ == null) {
              LocalizedDestinationLocation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationLocation);
            break;
          }
          case 426: {
            DestinationLocationDescription = input.ReadString();
            break;
          }
          case 434: {
            if (localizedDestinationLocationDescription_ == null) {
              LocalizedDestinationLocationDescription = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationLocationDescription);
            break;
          }
          case 442: {
            DestinationPlatform = input.ReadString();
            break;
          }
          case 450: {
            if (localizedDestinationPlatform_ == null) {
              LocalizedDestinationPlatform = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationPlatform);
            break;
          }
          case 458: {
            DestinationStationName = input.ReadString();
            break;
          }
          case 466: {
            if (localizedDestinationStationName_ == null) {
              LocalizedDestinationStationName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationStationName);
            break;
          }
          case 474: {
            DestinationTerminal = input.ReadString();
            break;
          }
          case 482: {
            if (localizedDestinationTerminal_ == null) {
              LocalizedDestinationTerminal = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedDestinationTerminal);
            break;
          }
          case 488: {
            Duration = input.ReadUInt64();
            break;
          }
          case 498: {
            if (eventEndDate_ == null) {
              EventEndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EventEndDate);
            break;
          }
          case 506: {
            EventName = input.ReadString();
            break;
          }
          case 514: {
            if (localizedEventName_ == null) {
              LocalizedEventName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedEventName);
            break;
          }
          case 522: {
            if (eventStartDate_ == null) {
              EventStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EventStartDate);
            break;
          }
          case 530: {
            if (eventStartDateInfo_ == null) {
              EventStartDateInfo = new global::PassKit.Grpc.SemanticEventDateInfo();
            }
            input.ReadMessage(EventStartDateInfo);
            break;
          }
          case 536: {
            EventType = (global::PassKit.Grpc.EventType) input.ReadEnum();
            break;
          }
          case 546: {
            FlightCode = input.ReadString();
            break;
          }
          case 554: {
            if (localizedFlightCode_ == null) {
              LocalizedFlightCode = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedFlightCode);
            break;
          }
          case 560: {
            FlightNumber = input.ReadUInt32();
            break;
          }
          case 570: {
            Genre = input.ReadString();
            break;
          }
          case 578: {
            if (localizedGenre_ == null) {
              LocalizedGenre = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedGenre);
            break;
          }
          case 586: {
            HomeTeamAbbreviation = input.ReadString();
            break;
          }
          case 594: {
            if (localizedHomeTeamAbbreviation_ == null) {
              LocalizedHomeTeamAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedHomeTeamAbbreviation);
            break;
          }
          case 602: {
            HomeTeamLocation = input.ReadString();
            break;
          }
          case 610: {
            if (localizedHomeTeamLocation_ == null) {
              LocalizedHomeTeamLocation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedHomeTeamLocation);
            break;
          }
          case 618: {
            HomeTeamName = input.ReadString();
            break;
          }
          case 626: {
            if (localizedHomeTeamName_ == null) {
              LocalizedHomeTeamName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedHomeTeamName);
            break;
          }
          case 634: {
            LeagueAbbreviation = input.ReadString();
            break;
          }
          case 642: {
            if (localizedLeagueAbbreviation_ == null) {
              LocalizedLeagueAbbreviation = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedLeagueAbbreviation);
            break;
          }
          case 650: {
            LeagueName = input.ReadString();
            break;
          }
          case 658: {
            if (localizedLeagueName_ == null) {
              LocalizedLeagueName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedLeagueName);
            break;
          }
          case 666: {
            MembershipProgramName = input.ReadString();
            break;
          }
          case 674: {
            if (localizedMembershipProgramName_ == null) {
              LocalizedMembershipProgramName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedMembershipProgramName);
            break;
          }
          case 682: {
            MembershipProgramNumber = input.ReadString();
            break;
          }
          case 690: {
            if (originalArrivalDate_ == null) {
              OriginalArrivalDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OriginalArrivalDate);
            break;
          }
          case 698: {
            if (originalBoardingDate_ == null) {
              OriginalBoardingDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OriginalBoardingDate);
            break;
          }
          case 706: {
            if (originalDepartureDate_ == null) {
              OriginalDepartureDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OriginalDepartureDate);
            break;
          }
          case 714: {
            if (passengerName_ == null) {
              PassengerName = new global::PassKit.Grpc.SemanticPersonName();
            }
            input.ReadMessage(PassengerName);
            break;
          }
          case 722: {
            performerNames_.AddEntriesFrom(ref input, _repeated_performerNames_codec);
            break;
          }
          case 730: {
            PriorityStatus = input.ReadString();
            break;
          }
          case 738: {
            if (localizedPriorityStatus_ == null) {
              LocalizedPriorityStatus = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedPriorityStatus);
            break;
          }
          case 746: {
            albumIds_.AddEntriesFrom(ref input, _repeated_albumIds_codec);
            break;
          }
          case 754: {
            playlistIds_.AddEntriesFrom(ref input, _repeated_playlistIds_codec);
            break;
          }
          case 762: {
            seats_.AddEntriesFrom(ref input, _repeated_seats_codec);
            break;
          }
          case 770: {
            SecurityScreening = input.ReadString();
            break;
          }
          case 778: {
            if (localizedSecurityScreening_ == null) {
              LocalizedSecurityScreening = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedSecurityScreening);
            break;
          }
          case 784: {
            SilenceRequested = input.ReadBool();
            break;
          }
          case 794: {
            SportName = input.ReadString();
            break;
          }
          case 802: {
            if (localizedSportName_ == null) {
              LocalizedSportName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedSportName);
            break;
          }
          case 810: {
            if (totalPrice_ == null) {
              TotalPrice = new global::PassKit.Grpc.SemanticCurrencyAmount();
            }
            input.ReadMessage(TotalPrice);
            break;
          }
          case 818: {
            TransitProvider = input.ReadString();
            break;
          }
          case 826: {
            if (localizedTransitProvider_ == null) {
              LocalizedTransitProvider = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedTransitProvider);
            break;
          }
          case 834: {
            TransitStatus = input.ReadString();
            break;
          }
          case 842: {
            if (localizedTransitStatus_ == null) {
              LocalizedTransitStatus = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedTransitStatus);
            break;
          }
          case 850: {
            TransitStatusReason = input.ReadString();
            break;
          }
          case 858: {
            if (localizedTransitStatusReason_ == null) {
              LocalizedTransitStatusReason = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedTransitStatusReason);
            break;
          }
          case 866: {
            VehicleName = input.ReadString();
            break;
          }
          case 874: {
            if (localizedVehicleName_ == null) {
              LocalizedVehicleName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVehicleName);
            break;
          }
          case 882: {
            VehicleNumber = input.ReadString();
            break;
          }
          case 890: {
            if (localizedVehicleNumber_ == null) {
              LocalizedVehicleNumber = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVehicleNumber);
            break;
          }
          case 898: {
            VehicleType = input.ReadString();
            break;
          }
          case 906: {
            if (localizedVehicleType_ == null) {
              LocalizedVehicleType = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVehicleType);
            break;
          }
          case 914: {
            if (venueBoxOfficeOpenDate_ == null) {
              VenueBoxOfficeOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueBoxOfficeOpenDate);
            break;
          }
          case 922: {
            if (venueCloseDate_ == null) {
              VenueCloseDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueCloseDate);
            break;
          }
          case 930: {
            if (venueDoorsOpenDate_ == null) {
              VenueDoorsOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueDoorsOpenDate);
            break;
          }
          case 938: {
            VenueEntrance = input.ReadString();
            break;
          }
          case 946: {
            if (localizedVenueEntrance_ == null) {
              LocalizedVenueEntrance = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueEntrance);
            break;
          }
          case 954: {
            if (venueLocation_ == null) {
              VenueLocation = new global::PassKit.Grpc.SemanticLocation();
            }
            input.ReadMessage(VenueLocation);
            break;
          }
          case 962: {
            VenueName = input.ReadString();
            break;
          }
          case 970: {
            if (localizedVenueName_ == null) {
              LocalizedVenueName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueName);
            break;
          }
          case 978: {
            VenuePhoneNumber = input.ReadString();
            break;
          }
          case 986: {
            if (localizedVenuePhoneNumber_ == null) {
              LocalizedVenuePhoneNumber = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenuePhoneNumber);
            break;
          }
          case 994: {
            VenueRegionName = input.ReadString();
            break;
          }
          case 1002: {
            if (localizedVenueRegionName_ == null) {
              LocalizedVenueRegionName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueRegionName);
            break;
          }
          case 1010: {
            VenueRoom = input.ReadString();
            break;
          }
          case 1018: {
            if (localizedVenueRoom_ == null) {
              LocalizedVenueRoom = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueRoom);
            break;
          }
          case 1026: {
            wifiAccess_.AddEntriesFrom(ref input, _repeated_wifiAccess_codec);
            break;
          }
          case 1034: {
            if (venueFanZoneOpenDate_ == null) {
              VenueFanZoneOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueFanZoneOpenDate);
            break;
          }
          case 1042: {
            if (venueGatesOpenDate_ == null) {
              VenueGatesOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueGatesOpenDate);
            break;
          }
          case 1050: {
            if (venueParkingLotsOpenDate_ == null) {
              VenueParkingLotsOpenDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(VenueParkingLotsOpenDate);
            break;
          }
          case 1058: {
            VenueEntranceDoor = input.ReadString();
            break;
          }
          case 1066: {
            if (localizedVenueEntranceDoor_ == null) {
              LocalizedVenueEntranceDoor = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueEntranceDoor);
            break;
          }
          case 1074: {
            VenueEntranceGate = input.ReadString();
            break;
          }
          case 1082: {
            if (localizedVenueEntranceGate_ == null) {
              LocalizedVenueEntranceGate = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueEntranceGate);
            break;
          }
          case 1090: {
            VenueEntrancePortal = input.ReadString();
            break;
          }
          case 1098: {
            if (localizedVenueEntrancePortal_ == null) {
              LocalizedVenueEntrancePortal = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedVenueEntrancePortal);
            break;
          }
          case 1106: {
            EntranceDescription = input.ReadString();
            break;
          }
          case 1114: {
            if (localizedEntranceDescription_ == null) {
              LocalizedEntranceDescription = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedEntranceDescription);
            break;
          }
          case 1120: {
            TailgatingAllowed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
