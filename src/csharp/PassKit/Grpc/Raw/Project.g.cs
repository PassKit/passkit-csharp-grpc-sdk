// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/raw/project.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PassKit.Grpc.Raw {

  /// <summary>Holder for reflection information generated from io/raw/project.proto</summary>
  public static partial class ProjectReflection {

    #region Descriptor
    /// <summary>File descriptor for io/raw/project.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProjectReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRpby9yYXcvcHJvamVjdC5wcm90bxIDcmF3Gh9nb29nbGUvcHJvdG9idWYv",
            "dGltZXN0YW1wLnByb3RvGhxpby9jb21tb24vZGlzdHJpYnV0aW9uLnByb3Rv",
            "Ghxpby9jb21tb24vbG9jYWxpemF0aW9uLnByb3RvGhdpby9jb21tb24vcHJv",
            "amVjdC5wcm90bxoXaW8vY29tbW9uL2JpbGxpbmcucHJvdG8aLnByb3RvYy1n",
            "ZW4tb3BlbmFwaXYyL29wdGlvbnMvYW5ub3RhdGlvbnMucHJvdG8i/gMKC1Bh",
            "c3NQcm9qZWN0EgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSKgoNbG9jYWxp",
            "emVkTmFtZRgDIAEoCzITLmlvLkxvY2FsaXplZFN0cmluZxIhCgZzdGF0dXMY",
            "BCADKA4yES5pby5Qcm9qZWN0U3RhdHVzEhgKBXF1b3RhGAUgASgLMgkuaW8u",
            "UXVvdGESGgoScGFzc1R5cGVJZGVudGlmaWVyGAYgASgJEjYKFGRpc3RyaWJ1",
            "dGlvblNldHRpbmdzGAcgASgLMhguaW8uRGlzdHJpYnV0aW9uU2V0dGluZ3MS",
            "KwoHY3JlYXRlZBgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "KwoHdXBkYXRlZBgJIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXA6",
            "vQGSQbkBCrYBKgxQYXNzIFByb2plY3QylQFQYXNzIFByb2plY3QgaG9sZHMg",
            "dGhlIGJhc2ljIGJ1c2luZXNzIGxvZ2ljLiBQYXNzIFByb2plY3QgaG9sZHMg",
            "ZGV0YWlscyBvbiBwYXNzIGRpc3RyaWJ1dGlvbiwgcXVvdGFzLCBBcHBsZSBj",
            "ZXJ0aWZpY2F0ZSwgaW50ZWdyYXRpb25zICYgaG9va3MgdG8gdXNlLtIBBG5h",
            "bWXSAQZzdGF0dXMicQoWUGFzc1Byb2plY3RDb3B5UmVxdWVzdBIKCgJpZBgB",
            "IAEoCRIMCgRuYW1lGAIgASgJEiEKBnN0YXR1cxgDIAMoDjIRLmlvLlByb2pl",
            "Y3RTdGF0dXMSGgoScGFzc1R5cGVJZGVudGlmaWVyGAQgASgJQlMKFGNvbS5w",
            "YXNza2l0LmdycGMuUmF3WihzdGFzaC5wYXNza2l0LmNvbS9pby9tb2RlbC9z",
            "ZGsvZ28vaW8vcmF3qgIQUGFzc0tpdC5HcnBjLlJhd2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::PassKit.Grpc.DistributionReflection.Descriptor, global::PassKit.Grpc.LocalizationReflection.Descriptor, global::PassKit.Grpc.ProjectReflection.Descriptor, global::PassKit.Grpc.BillingReflection.Descriptor, global::PassKit.Grpc.Gateway.ProtocGenOpenapiv2.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Raw.PassProject), global::PassKit.Grpc.Raw.PassProject.Parser, new[]{ "Id", "Name", "LocalizedName", "Status", "Quota", "PassTypeIdentifier", "DistributionSettings", "Created", "Updated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Raw.PassProjectCopyRequest), global::PassKit.Grpc.Raw.PassProjectCopyRequest.Parser, new[]{ "Id", "Name", "Status", "PassTypeIdentifier" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Pass Project holds the basic business logic of the Pass Project. It holds details on pass distribution, quotas, Apple certificate, integrations &amp; hooks to use.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PassProject : pb::IMessage<PassProject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PassProject> _parser = new pb::MessageParser<PassProject>(() => new PassProject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PassProject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.Raw.ProjectReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PassProject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PassProject(PassProject other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      localizedName_ = other.localizedName_ != null ? other.localizedName_.Clone() : null;
      status_ = other.status_.Clone();
      quota_ = other.quota_ != null ? other.quota_.Clone() : null;
      passTypeIdentifier_ = other.passTypeIdentifier_;
      distributionSettings_ = other.distributionSettings_ != null ? other.distributionSettings_.Clone() : null;
      created_ = other.created_ != null ? other.created_.Clone() : null;
      updated_ = other.updated_ != null ? other.updated_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PassProject Clone() {
      return new PassProject(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// PassKit generated project id (22 characters)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of the pass project; will be shown on the data collection page (if set) and as pass issuer name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localizedName" field.</summary>
    public const int LocalizedNameFieldNumber = 3;
    private global::PassKit.Grpc.LocalizedString localizedName_;
    /// <summary>
    /// Localized name of the pass project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.LocalizedString LocalizedName {
      get { return localizedName_; }
      set {
        localizedName_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private static readonly pb::FieldCodec<global::PassKit.Grpc.ProjectStatus> _repeated_status_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::PassKit.Grpc.ProjectStatus) x);
    private readonly pbc::RepeatedField<global::PassKit.Grpc.ProjectStatus> status_ = new pbc::RepeatedField<global::PassKit.Grpc.ProjectStatus>();
    /// <summary>
    /// The pass project status (bitmask of ProjectStatus). Defaults to io.ProjectStatus.PROJECT_ACTIVE_FOR_OBJECT_CREATION + io.ProjectStatus.PROJECT_DRAFT
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::PassKit.Grpc.ProjectStatus> Status {
      get { return status_; }
    }

    /// <summary>Field number for the "quota" field.</summary>
    public const int QuotaFieldNumber = 5;
    private global::PassKit.Grpc.Quota quota_;
    /// <summary>
    /// The pass project quota
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Quota Quota {
      get { return quota_; }
      set {
        quota_ = value;
      }
    }

    /// <summary>Field number for the "passTypeIdentifier" field.</summary>
    public const int PassTypeIdentifierFieldNumber = 6;
    private string passTypeIdentifier_ = "";
    /// <summary>
    /// Leave empty for draft projects. Mandatory for projects where status contains PROJECT_PUBLISHED. Certificate to be used for signing the Apple passes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PassTypeIdentifier {
      get { return passTypeIdentifier_; }
      set {
        passTypeIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "distributionSettings" field.</summary>
    public const int DistributionSettingsFieldNumber = 7;
    private global::PassKit.Grpc.DistributionSettings distributionSettings_;
    /// <summary>
    /// Contains the email &amp; sms distribution settings for the project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.DistributionSettings DistributionSettings {
      get { return distributionSettings_; }
      set {
        distributionSettings_ = value;
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp created_;
    /// <summary>
    /// The date the project was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updated_;
    /// <summary>
    /// The date the project was updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PassProject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PassProject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(LocalizedName, other.LocalizedName)) return false;
      if(!status_.Equals(other.status_)) return false;
      if (!object.Equals(Quota, other.Quota)) return false;
      if (PassTypeIdentifier != other.PassTypeIdentifier) return false;
      if (!object.Equals(DistributionSettings, other.DistributionSettings)) return false;
      if (!object.Equals(Created, other.Created)) return false;
      if (!object.Equals(Updated, other.Updated)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (localizedName_ != null) hash ^= LocalizedName.GetHashCode();
      hash ^= status_.GetHashCode();
      if (quota_ != null) hash ^= Quota.GetHashCode();
      if (PassTypeIdentifier.Length != 0) hash ^= PassTypeIdentifier.GetHashCode();
      if (distributionSettings_ != null) hash ^= DistributionSettings.GetHashCode();
      if (created_ != null) hash ^= Created.GetHashCode();
      if (updated_ != null) hash ^= Updated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (localizedName_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LocalizedName);
      }
      status_.WriteTo(output, _repeated_status_codec);
      if (quota_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Quota);
      }
      if (PassTypeIdentifier.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PassTypeIdentifier);
      }
      if (distributionSettings_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DistributionSettings);
      }
      if (created_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Updated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (localizedName_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LocalizedName);
      }
      status_.WriteTo(ref output, _repeated_status_codec);
      if (quota_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Quota);
      }
      if (PassTypeIdentifier.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PassTypeIdentifier);
      }
      if (distributionSettings_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DistributionSettings);
      }
      if (created_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Created);
      }
      if (updated_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Updated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (localizedName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalizedName);
      }
      size += status_.CalculateSize(_repeated_status_codec);
      if (quota_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quota);
      }
      if (PassTypeIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PassTypeIdentifier);
      }
      if (distributionSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DistributionSettings);
      }
      if (created_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Created);
      }
      if (updated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Updated);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PassProject other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.localizedName_ != null) {
        if (localizedName_ == null) {
          LocalizedName = new global::PassKit.Grpc.LocalizedString();
        }
        LocalizedName.MergeFrom(other.LocalizedName);
      }
      status_.Add(other.status_);
      if (other.quota_ != null) {
        if (quota_ == null) {
          Quota = new global::PassKit.Grpc.Quota();
        }
        Quota.MergeFrom(other.Quota);
      }
      if (other.PassTypeIdentifier.Length != 0) {
        PassTypeIdentifier = other.PassTypeIdentifier;
      }
      if (other.distributionSettings_ != null) {
        if (distributionSettings_ == null) {
          DistributionSettings = new global::PassKit.Grpc.DistributionSettings();
        }
        DistributionSettings.MergeFrom(other.DistributionSettings);
      }
      if (other.created_ != null) {
        if (created_ == null) {
          Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Created.MergeFrom(other.Created);
      }
      if (other.updated_ != null) {
        if (updated_ == null) {
          Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Updated.MergeFrom(other.Updated);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (localizedName_ == null) {
              LocalizedName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedName);
            break;
          }
          case 34:
          case 32: {
            status_.AddEntriesFrom(input, _repeated_status_codec);
            break;
          }
          case 42: {
            if (quota_ == null) {
              Quota = new global::PassKit.Grpc.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
          case 50: {
            PassTypeIdentifier = input.ReadString();
            break;
          }
          case 58: {
            if (distributionSettings_ == null) {
              DistributionSettings = new global::PassKit.Grpc.DistributionSettings();
            }
            input.ReadMessage(DistributionSettings);
            break;
          }
          case 66: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 74: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (localizedName_ == null) {
              LocalizedName = new global::PassKit.Grpc.LocalizedString();
            }
            input.ReadMessage(LocalizedName);
            break;
          }
          case 34:
          case 32: {
            status_.AddEntriesFrom(ref input, _repeated_status_codec);
            break;
          }
          case 42: {
            if (quota_ == null) {
              Quota = new global::PassKit.Grpc.Quota();
            }
            input.ReadMessage(Quota);
            break;
          }
          case 50: {
            PassTypeIdentifier = input.ReadString();
            break;
          }
          case 58: {
            if (distributionSettings_ == null) {
              DistributionSettings = new global::PassKit.Grpc.DistributionSettings();
            }
            input.ReadMessage(DistributionSettings);
            break;
          }
          case 66: {
            if (created_ == null) {
              Created = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Created);
            break;
          }
          case 74: {
            if (updated_ == null) {
              Updated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Updated);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Contains payload for copying a pass project
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PassProjectCopyRequest : pb::IMessage<PassProjectCopyRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PassProjectCopyRequest> _parser = new pb::MessageParser<PassProjectCopyRequest>(() => new PassProjectCopyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PassProjectCopyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.Raw.ProjectReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PassProjectCopyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PassProjectCopyRequest(PassProjectCopyRequest other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      status_ = other.status_.Clone();
      passTypeIdentifier_ = other.passTypeIdentifier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PassProjectCopyRequest Clone() {
      return new PassProjectCopyRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// uuid of the pass project to copy
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// optional name for the new pass project
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private static readonly pb::FieldCodec<global::PassKit.Grpc.ProjectStatus> _repeated_status_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::PassKit.Grpc.ProjectStatus) x);
    private readonly pbc::RepeatedField<global::PassKit.Grpc.ProjectStatus> status_ = new pbc::RepeatedField<global::PassKit.Grpc.ProjectStatus>();
    /// <summary>
    /// Status to set the copied project to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::PassKit.Grpc.ProjectStatus> Status {
      get { return status_; }
    }

    /// <summary>Field number for the "passTypeIdentifier" field.</summary>
    public const int PassTypeIdentifierFieldNumber = 4;
    private string passTypeIdentifier_ = "";
    /// <summary>
    /// Can optionally be provided if setting status to published (requires a prod cert)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PassTypeIdentifier {
      get { return passTypeIdentifier_; }
      set {
        passTypeIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PassProjectCopyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PassProjectCopyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if(!status_.Equals(other.status_)) return false;
      if (PassTypeIdentifier != other.PassTypeIdentifier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= status_.GetHashCode();
      if (PassTypeIdentifier.Length != 0) hash ^= PassTypeIdentifier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      status_.WriteTo(output, _repeated_status_codec);
      if (PassTypeIdentifier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PassTypeIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      status_.WriteTo(ref output, _repeated_status_codec);
      if (PassTypeIdentifier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PassTypeIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += status_.CalculateSize(_repeated_status_codec);
      if (PassTypeIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PassTypeIdentifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PassProjectCopyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      status_.Add(other.status_);
      if (other.PassTypeIdentifier.Length != 0) {
        PassTypeIdentifier = other.PassTypeIdentifier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            status_.AddEntriesFrom(input, _repeated_status_codec);
            break;
          }
          case 34: {
            PassTypeIdentifier = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            status_.AddEntriesFrom(ref input, _repeated_status_codec);
            break;
          }
          case 34: {
            PassTypeIdentifier = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
