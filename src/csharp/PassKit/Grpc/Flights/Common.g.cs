// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/flights/common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PassKit.Grpc.Flights {

  /// <summary>Holder for reflection information generated from io/flights/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for io/flights/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdpby9mbGlnaHRzL2NvbW1vbi5wcm90bxIHZmxpZ2h0cxoeaW8vY29tbW9u",
            "L2NvbW1vbl9vYmplY3RzLnByb3RvIqICCg5GbGlnaHRTY2hlZHVsZRIkCgZt",
            "b25kYXkYASABKAsyFC5mbGlnaHRzLkZsaWdodFRpbWVzEiUKB3R1ZXNkYXkY",
            "AiABKAsyFC5mbGlnaHRzLkZsaWdodFRpbWVzEicKCXdlZG5lc2RheRgDIAEo",
            "CzIULmZsaWdodHMuRmxpZ2h0VGltZXMSJgoIdGh1cnNkYXkYBCABKAsyFC5m",
            "bGlnaHRzLkZsaWdodFRpbWVzEiQKBmZyaWRheRgFIAEoCzIULmZsaWdodHMu",
            "RmxpZ2h0VGltZXMSJgoIc2F0dXJkYXkYBiABKAsyFC5mbGlnaHRzLkZsaWdo",
            "dFRpbWVzEiQKBnN1bmRheRgHIAEoCzIULmZsaWdodHMuRmxpZ2h0VGltZXMi",
            "ogEKC0ZsaWdodFRpbWVzEigKFnNjaGVkdWxlZERlcGFydHVyZVRpbWUYASAB",
            "KAsyCC5pby5UaW1lEh4KDGJvYXJkaW5nVGltZRgCIAEoCzIILmlvLlRpbWUS",
            "IQoPZ2F0ZUNsb3NpbmdUaW1lGAMgASgLMgguaW8uVGltZRImChRzY2hlZHVs",
            "ZWRBcnJpdmFsVGltZRgEIAEoCzIILmlvLlRpbWUitQMKCkZsaWdodFVSTHMS",
            "EgoKdXBncmFkZVVSTBgBIAEoCRIUCgxvcmRlckZvb2RVUkwYAiABKAkSFwoP",
            "cHVyY2hhc2VXaWZpVVJMGAMgASgJEhUKDWNoYW5nZVNlYXRVUkwYBCABKAkS",
            "GAoQZW50ZXJ0YWlubWVudFVSTBgFIAEoCRIWCg5zdGFuZGJ5TGlzdFVSTBgG",
            "IAEoCRIkChxwdXJjaGFzZUFkZGl0aW9uYWxCYWdnYWdlVVJMGAcgASgJEh8K",
            "F3B1cmNoYXNlTG91bmdlQWNjZXNzVVJMGAggASgJEhgKEHJlcG9ydExvc3RC",
            "YWdVUkwYCSABKAkSFQoNbWFuYWdlbWVudFVSTBgKIAEoCRIcChRyZXF1ZXN0",
            "V2hlZWxjaGFpclVSTBgLIAEoCRIgChhyZWdpc3RlclNlcnZpY2VBbmltYWxV",
            "UkwYDCABKAkSHAoUdHJhbnNpdFByb3ZpZGVyRW1haWwYDSABKAkSIQoZdHJh",
            "bnNpdFByb3ZpZGVyV2Vic2l0ZVVSTBgOIAEoCRIiChp0cmFuc2l0UHJvdmlk",
            "ZXJQaG9uZU51bWJlchgPIAEoCSqoAQoXQWlycG9ydFNlY3VyaXR5UHJvZ3Jh",
            "bXMSGAoUTk9fU0VDVVJJVFlfUFJPR1JBTVMQABIRCg1UU0FfUFJFX0NIRUNL",
            "EAESHgoaVFNBX1BSRV9DSEVDS19UT1VDSExFU1NfSUQQAhIICgRUV09WEAMS",
            "BwoDT1NTEAQSBwoDSVRJEAUSBwoDSVREEAYSEAoMR0xPQkFMX0VOVFJZEAcS",
            "CQoFQ0xFQVIQCCr6AQoMRmxpZ2h0U3RhdHVzEgsKB1VOS05PV04QABINCglT",
            "Q0hFRFVMRUQQARIMCghERVBBUlRFRBACEgkKBUlOQUlSEAMSCgoGTEFOREVE",
            "EAQSCwoHQVJSSVZFRBAFEg0KCUNBTkNFTExFRBAGEgsKB0RFTEFZRUQQBxIV",
            "ChFERVBBUlRFRF9ESVZFUlRFRBAIEhIKDklOQUlSX0RJVkVSVEVEEAkSFAoQ",
            "QVJSSVZFRF9ESVZFUlRFRBAKEhUKEURFUEFSVEVEX1JFQ09WRVJZEAsSEgoO",
            "SU5BSVJfUkVDT1ZFUlkQDBIUChBBUlJJVkVEX1JFQ09WRVJZEA0qPQoQRmxp",
            "Z2h0Q3JlYXRlTW9kZRIOCgpET19OT1RfVVNFEAASCgoGTUFOVUFMEAESDQoJ",
            "QVVUT01BVElDEAIqqQEKDEZsaWdodEFsZXJ0cxINCglOT19BTEVSVFMQABIO",
            "CgpBTExfQUxFUlRTEAESGAoUREVQQVJUVVJFX0dBVEVfQUxFUlQQAhIYChRE",
            "RVBBUlRVUkVfVElNRV9BTEVSVBAEEhYKEkFSUklWQUxfR0FURV9BTEVSVBAI",
            "EhYKEkFSUklWQUxfVElNRV9BTEVSVBAQEhYKEkJBR0dBR0VfQkVMVF9BTEVS",
            "VBAgKm0KDkJvYXJkaW5nUG9saWN5Eh8KG0JPQVJESU5HX1BPTElDWV9VTlNQ",
            "RUNJRklFRBAAEg4KClpPTkVfQkFTRUQQARIPCgtHUk9VUF9CQVNFRBACEhkK",
            "FUJPQVJESU5HX1BPTElDWV9PVEhFUhADKoMBCg9TZWF0Q2xhc3NQb2xpY3kS",
            "IQodU0VBVF9DTEFTU19QT0xJQ1lfVU5TUEVDSUZJRUQQABIPCgtDQUJJTl9C",
            "QVNFRBABEg8KC0NMQVNTX0JBU0VEEAISDgoKVElFUl9CQVNFRBADEhsKF1NF",
            "QVRfQ0xBU1NfUE9MSUNZX09USEVSEAQqHwoJQXV0aG9yaXR5EggKBElBVEEQ",
            "ABIICgRJQ0FPEAEqdgoVUGFzc2VuZ2VyQ2FwYWJpbGl0aWVzEhMKD05PX0NB",
            "UEFCSUxJVElFUxAAEhAKDFBSRV9CT0FSRElORxABEhUKEVBSSU9SSVRZX0JP",
            "QVJESU5HEAISDAoIQ0FSUllfT04QAxIRCg1QRVJTT05BTF9JVEVNEARCXwoY",
            "Y29tLnBhc3NraXQuZ3JwYy5GbGlnaHRzWixzdGFzaC5wYXNza2l0LmNvbS9p",
            "by9tb2RlbC9zZGsvZ28vaW8vZmxpZ2h0c6oCFFBhc3NLaXQuR3JwYy5GbGln",
            "aHRzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PassKit.Grpc.CommonObjectsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PassKit.Grpc.Flights.AirportSecurityPrograms), typeof(global::PassKit.Grpc.Flights.FlightStatus), typeof(global::PassKit.Grpc.Flights.FlightCreateMode), typeof(global::PassKit.Grpc.Flights.FlightAlerts), typeof(global::PassKit.Grpc.Flights.BoardingPolicy), typeof(global::PassKit.Grpc.Flights.SeatClassPolicy), typeof(global::PassKit.Grpc.Flights.Authority), typeof(global::PassKit.Grpc.Flights.PassengerCapabilities), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Flights.FlightSchedule), global::PassKit.Grpc.Flights.FlightSchedule.Parser, new[]{ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Flights.FlightTimes), global::PassKit.Grpc.Flights.FlightTimes.Parser, new[]{ "ScheduledDepartureTime", "BoardingTime", "GateClosingTime", "ScheduledArrivalTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.Flights.FlightURLs), global::PassKit.Grpc.Flights.FlightURLs.Parser, new[]{ "UpgradeURL", "OrderFoodURL", "PurchaseWifiURL", "ChangeSeatURL", "EntertainmentURL", "StandbyListURL", "PurchaseAdditionalBaggageURL", "PurchaseLoungeAccessURL", "ReportLostBagURL", "ManagementURL", "RequestWheelchairURL", "RegisterServiceAnimalURL", "TransitProviderEmail", "TransitProviderWebsiteURL", "TransitProviderPhoneNumber" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// A set of values that indicate the security programs and clearances that are supported by an airport and of which the passenger is eligible to be displayed on the boarding pass.
  /// </summary>
  public enum AirportSecurityPrograms {
    /// <summary>
    /// Default, no programs available, or programs are unknown.
    /// </summary>
    [pbr::OriginalName("NO_SECURITY_PROGRAMS")] NoSecurityPrograms = 0,
    /// <summary>
    /// TSA PreCheck®.
    /// </summary>
    [pbr::OriginalName("TSA_PRE_CHECK")] TsaPreCheck = 1,
    /// <summary>
    /// TSA PreCheck® Touchless ID.
    /// </summary>
    [pbr::OriginalName("TSA_PRE_CHECK_TOUCHLESS_ID")] TsaPreCheckTouchlessId = 2,
    /// <summary>
    /// Transit Without Visa.
    /// </summary>
    [pbr::OriginalName("TWOV")] Twov = 3,
    /// <summary>
    /// One Stop Security.
    /// </summary>
    [pbr::OriginalName("OSS")] Oss = 4,
    /// <summary>
    /// International to International.
    /// </summary>
    [pbr::OriginalName("ITI")] Iti = 5,
    /// <summary>
    /// International to Domestic.
    /// </summary>
    [pbr::OriginalName("ITD")] Itd = 6,
    /// <summary>
    /// Global Entry.
    /// </summary>
    [pbr::OriginalName("GLOBAL_ENTRY")] GlobalEntry = 7,
    /// <summary>
    /// CLEAR Secure.
    /// </summary>
    [pbr::OriginalName("CLEAR")] Clear = 8,
  }

  /// <summary>
  /// For customers subscribing to automatic updates, the flight status will be automatically updated. Status is also writable for manual updates.
  /// </summary>
  public enum FlightStatus {
    /// <summary>
    /// No status is known, or flight is not yet scheduled.
    /// </summary>
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    /// <summary>
    /// Flight is scheduled to depart.
    /// </summary>
    [pbr::OriginalName("SCHEDULED")] Scheduled = 1,
    /// <summary>
    /// Flight has left the departure gate, but may not be airborne yet.
    /// </summary>
    [pbr::OriginalName("DEPARTED")] Departed = 2,
    /// <summary>
    /// Flight is airborne.
    /// </summary>
    [pbr::OriginalName("INAIR")] Inair = 3,
    /// <summary>
    /// Flight has landed, but may not yet be at the arrival gate.
    /// </summary>
    [pbr::OriginalName("LANDED")] Landed = 4,
    /// <summary>
    /// Flight has arrived at the destination gate.
    /// </summary>
    [pbr::OriginalName("ARRIVED")] Arrived = 5,
    /// <summary>
    /// Flight has been cancelled.
    /// </summary>
    [pbr::OriginalName("CANCELLED")] Cancelled = 6,
    /// <summary>
    /// Flight is delayed to depart by at least 15 minutes.
    /// </summary>
    [pbr::OriginalName("DELAYED")] Delayed = 7,
    /// <summary>
    /// Flight has been diverted from its scheduled destination and has left the departure gate.
    /// </summary>
    [pbr::OriginalName("DEPARTED_DIVERTED")] DepartedDiverted = 8,
    /// <summary>
    /// Flight has been diverted from its scheduled destination and is airborne.
    /// </summary>
    [pbr::OriginalName("INAIR_DIVERTED")] InairDiverted = 9,
    /// <summary>
    /// Flight has arrived at a location different to its scheduled destination.
    /// </summary>
    [pbr::OriginalName("ARRIVED_DIVERTED")] ArrivedDiverted = 10,
    /// <summary>
    /// Flight has left its diverted destination en-route to its original destination.
    /// </summary>
    [pbr::OriginalName("DEPARTED_RECOVERY")] DepartedRecovery = 11,
    /// <summary>
    /// Flight has left its diverted destination airborne en-route to its original destination.
    /// </summary>
    [pbr::OriginalName("INAIR_RECOVERY")] InairRecovery = 12,
    /// <summary>
    /// Flight has landed at is original scheduled destination.
    /// </summary>
    [pbr::OriginalName("ARRIVED_RECOVERY")] ArrivedRecovery = 13,
  }

  public enum FlightCreateMode {
    [pbr::OriginalName("DO_NOT_USE")] DoNotUse = 0,
    [pbr::OriginalName("MANUAL")] Manual = 1,
    [pbr::OriginalName("AUTOMATIC")] Automatic = 2,
  }

  /// <summary>
  /// Flight alerts automatically update boarding passes as information becomes available or changes. Note that these services may incur additional usage charges.
  /// </summary>
  public enum FlightAlerts {
    /// <summary>
    /// Boarding passes will not automatically update.
    /// </summary>
    [pbr::OriginalName("NO_ALERTS")] NoAlerts = 0,
    /// <summary>
    /// Boarding passes will automatically update whenever a change to the departure gate/time, arrival gate/time or baggage belt information is detected.
    /// </summary>
    [pbr::OriginalName("ALL_ALERTS")] AllAlerts = 1,
    /// <summary>
    /// Boarding passes will automatically update whenever a change to the departure gate is detected.
    /// </summary>
    [pbr::OriginalName("DEPARTURE_GATE_ALERT")] DepartureGateAlert = 2,
    /// <summary>
    /// Boarding passes will automatically update whenever a change to the estimated departure gate is detected.
    /// </summary>
    [pbr::OriginalName("DEPARTURE_TIME_ALERT")] DepartureTimeAlert = 4,
    /// <summary>
    /// Boarding passes will automatically update whenever a change to the arrival gate is detected.
    /// </summary>
    [pbr::OriginalName("ARRIVAL_GATE_ALERT")] ArrivalGateAlert = 8,
    /// <summary>
    /// Boarding passes will automatically update whenever a change to the estimated arrival time is detected.
    /// </summary>
    [pbr::OriginalName("ARRIVAL_TIME_ALERT")] ArrivalTimeAlert = 16,
    /// <summary>
    /// Boarding passes will automatically update whenever the baggage collection belt or area is known or changes.
    /// </summary>
    [pbr::OriginalName("BAGGAGE_BELT_ALERT")] BaggageBeltAlert = 32,
  }

  /// <summary>
  /// The Boarding Policy is used to determine informational labels on the pass.
  /// </summary>
  public enum BoardingPolicy {
    [pbr::OriginalName("BOARDING_POLICY_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Boarding is managed by zone.
    /// </summary>
    [pbr::OriginalName("ZONE_BASED")] ZoneBased = 1,
    /// <summary>
    /// Boarding is managed by group.
    /// </summary>
    [pbr::OriginalName("GROUP_BASED")] GroupBased = 2,
    /// <summary>
    /// Another, or No boarding policy is in place.
    /// </summary>
    [pbr::OriginalName("BOARDING_POLICY_OTHER")] Other = 3,
  }

  /// <summary>
  /// The Seat Class Policy is used to determine informational labels on the pass.
  /// </summary>
  public enum SeatClassPolicy {
    [pbr::OriginalName("SEAT_CLASS_POLICY_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Seats groups are determined by cabin. "Cabin" will be used as the label on the pass.
    /// </summary>
    [pbr::OriginalName("CABIN_BASED")] CabinBased = 1,
    /// <summary>
    /// Seats groups are determined by class of travel. "Class" will be used as the label on the pass.
    /// </summary>
    [pbr::OriginalName("CLASS_BASED")] ClassBased = 2,
    /// <summary>
    /// Seat groups are determined by tier. "Tier" will be used as the label on the pass.
    /// </summary>
    [pbr::OriginalName("TIER_BASED")] TierBased = 3,
    /// <summary>
    /// Another, or no seat policy is in place. No label will be used on the pass.
    /// </summary>
    [pbr::OriginalName("SEAT_CLASS_POLICY_OTHER")] Other = 4,
  }

  /// <summary>
  /// The authority of an identifier (carrier code, airport code, etc.).
  /// </summary>
  public enum Authority {
    /// <summary>
    /// International Air Transport Association (IATA).
    /// </summary>
    [pbr::OriginalName("IATA")] Iata = 0,
    /// <summary>
    /// International Civil Aviation Organization (ICAO).
    /// </summary>
    [pbr::OriginalName("ICAO")] Icao = 1,
  }

  /// <summary>
  /// Passenger Capabilities are used with Apple Semantic boarding passes to visibly show information useful at the boarding gate.
  /// </summary>
  public enum PassengerCapabilities {
    [pbr::OriginalName("NO_CAPABILITIES")] NoCapabilities = 0,
    [pbr::OriginalName("PRE_BOARDING")] PreBoarding = 1,
    [pbr::OriginalName("PRIORITY_BOARDING")] PriorityBoarding = 2,
    [pbr::OriginalName("CARRY_ON")] CarryOn = 3,
    [pbr::OriginalName("PERSONAL_ITEM")] PersonalItem = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// If there are no departures on a given day (E.g. flight only operates on Tuesdays and Thursdays), the days with no departures should be nil.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FlightSchedule : pb::IMessage<FlightSchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FlightSchedule> _parser = new pb::MessageParser<FlightSchedule>(() => new FlightSchedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FlightSchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.Flights.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlightSchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlightSchedule(FlightSchedule other) : this() {
      monday_ = other.monday_ != null ? other.monday_.Clone() : null;
      tuesday_ = other.tuesday_ != null ? other.tuesday_.Clone() : null;
      wednesday_ = other.wednesday_ != null ? other.wednesday_.Clone() : null;
      thursday_ = other.thursday_ != null ? other.thursday_.Clone() : null;
      friday_ = other.friday_ != null ? other.friday_.Clone() : null;
      saturday_ = other.saturday_ != null ? other.saturday_.Clone() : null;
      sunday_ = other.sunday_ != null ? other.sunday_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlightSchedule Clone() {
      return new FlightSchedule(this);
    }

    /// <summary>Field number for the "monday" field.</summary>
    public const int MondayFieldNumber = 1;
    private global::PassKit.Grpc.Flights.FlightTimes monday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Flights.FlightTimes Monday {
      get { return monday_; }
      set {
        monday_ = value;
      }
    }

    /// <summary>Field number for the "tuesday" field.</summary>
    public const int TuesdayFieldNumber = 2;
    private global::PassKit.Grpc.Flights.FlightTimes tuesday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Flights.FlightTimes Tuesday {
      get { return tuesday_; }
      set {
        tuesday_ = value;
      }
    }

    /// <summary>Field number for the "wednesday" field.</summary>
    public const int WednesdayFieldNumber = 3;
    private global::PassKit.Grpc.Flights.FlightTimes wednesday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Flights.FlightTimes Wednesday {
      get { return wednesday_; }
      set {
        wednesday_ = value;
      }
    }

    /// <summary>Field number for the "thursday" field.</summary>
    public const int ThursdayFieldNumber = 4;
    private global::PassKit.Grpc.Flights.FlightTimes thursday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Flights.FlightTimes Thursday {
      get { return thursday_; }
      set {
        thursday_ = value;
      }
    }

    /// <summary>Field number for the "friday" field.</summary>
    public const int FridayFieldNumber = 5;
    private global::PassKit.Grpc.Flights.FlightTimes friday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Flights.FlightTimes Friday {
      get { return friday_; }
      set {
        friday_ = value;
      }
    }

    /// <summary>Field number for the "saturday" field.</summary>
    public const int SaturdayFieldNumber = 6;
    private global::PassKit.Grpc.Flights.FlightTimes saturday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Flights.FlightTimes Saturday {
      get { return saturday_; }
      set {
        saturday_ = value;
      }
    }

    /// <summary>Field number for the "sunday" field.</summary>
    public const int SundayFieldNumber = 7;
    private global::PassKit.Grpc.Flights.FlightTimes sunday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Flights.FlightTimes Sunday {
      get { return sunday_; }
      set {
        sunday_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FlightSchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FlightSchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Monday, other.Monday)) return false;
      if (!object.Equals(Tuesday, other.Tuesday)) return false;
      if (!object.Equals(Wednesday, other.Wednesday)) return false;
      if (!object.Equals(Thursday, other.Thursday)) return false;
      if (!object.Equals(Friday, other.Friday)) return false;
      if (!object.Equals(Saturday, other.Saturday)) return false;
      if (!object.Equals(Sunday, other.Sunday)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (monday_ != null) hash ^= Monday.GetHashCode();
      if (tuesday_ != null) hash ^= Tuesday.GetHashCode();
      if (wednesday_ != null) hash ^= Wednesday.GetHashCode();
      if (thursday_ != null) hash ^= Thursday.GetHashCode();
      if (friday_ != null) hash ^= Friday.GetHashCode();
      if (saturday_ != null) hash ^= Saturday.GetHashCode();
      if (sunday_ != null) hash ^= Sunday.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (monday_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Monday);
      }
      if (tuesday_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Tuesday);
      }
      if (wednesday_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Wednesday);
      }
      if (thursday_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Thursday);
      }
      if (friday_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Friday);
      }
      if (saturday_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Saturday);
      }
      if (sunday_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Sunday);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (monday_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Monday);
      }
      if (tuesday_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Tuesday);
      }
      if (wednesday_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Wednesday);
      }
      if (thursday_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Thursday);
      }
      if (friday_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Friday);
      }
      if (saturday_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Saturday);
      }
      if (sunday_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Sunday);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (monday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Monday);
      }
      if (tuesday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tuesday);
      }
      if (wednesday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Wednesday);
      }
      if (thursday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Thursday);
      }
      if (friday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Friday);
      }
      if (saturday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Saturday);
      }
      if (sunday_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sunday);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FlightSchedule other) {
      if (other == null) {
        return;
      }
      if (other.monday_ != null) {
        if (monday_ == null) {
          Monday = new global::PassKit.Grpc.Flights.FlightTimes();
        }
        Monday.MergeFrom(other.Monday);
      }
      if (other.tuesday_ != null) {
        if (tuesday_ == null) {
          Tuesday = new global::PassKit.Grpc.Flights.FlightTimes();
        }
        Tuesday.MergeFrom(other.Tuesday);
      }
      if (other.wednesday_ != null) {
        if (wednesday_ == null) {
          Wednesday = new global::PassKit.Grpc.Flights.FlightTimes();
        }
        Wednesday.MergeFrom(other.Wednesday);
      }
      if (other.thursday_ != null) {
        if (thursday_ == null) {
          Thursday = new global::PassKit.Grpc.Flights.FlightTimes();
        }
        Thursday.MergeFrom(other.Thursday);
      }
      if (other.friday_ != null) {
        if (friday_ == null) {
          Friday = new global::PassKit.Grpc.Flights.FlightTimes();
        }
        Friday.MergeFrom(other.Friday);
      }
      if (other.saturday_ != null) {
        if (saturday_ == null) {
          Saturday = new global::PassKit.Grpc.Flights.FlightTimes();
        }
        Saturday.MergeFrom(other.Saturday);
      }
      if (other.sunday_ != null) {
        if (sunday_ == null) {
          Sunday = new global::PassKit.Grpc.Flights.FlightTimes();
        }
        Sunday.MergeFrom(other.Sunday);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (monday_ == null) {
              Monday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Monday);
            break;
          }
          case 18: {
            if (tuesday_ == null) {
              Tuesday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Tuesday);
            break;
          }
          case 26: {
            if (wednesday_ == null) {
              Wednesday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Wednesday);
            break;
          }
          case 34: {
            if (thursday_ == null) {
              Thursday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Thursday);
            break;
          }
          case 42: {
            if (friday_ == null) {
              Friday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Friday);
            break;
          }
          case 50: {
            if (saturday_ == null) {
              Saturday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Saturday);
            break;
          }
          case 58: {
            if (sunday_ == null) {
              Sunday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Sunday);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (monday_ == null) {
              Monday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Monday);
            break;
          }
          case 18: {
            if (tuesday_ == null) {
              Tuesday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Tuesday);
            break;
          }
          case 26: {
            if (wednesday_ == null) {
              Wednesday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Wednesday);
            break;
          }
          case 34: {
            if (thursday_ == null) {
              Thursday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Thursday);
            break;
          }
          case 42: {
            if (friday_ == null) {
              Friday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Friday);
            break;
          }
          case 50: {
            if (saturday_ == null) {
              Saturday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Saturday);
            break;
          }
          case 58: {
            if (sunday_ == null) {
              Sunday = new global::PassKit.Grpc.Flights.FlightTimes();
            }
            input.ReadMessage(Sunday);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FlightTimes : pb::IMessage<FlightTimes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FlightTimes> _parser = new pb::MessageParser<FlightTimes>(() => new FlightTimes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FlightTimes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.Flights.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlightTimes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlightTimes(FlightTimes other) : this() {
      scheduledDepartureTime_ = other.scheduledDepartureTime_ != null ? other.scheduledDepartureTime_.Clone() : null;
      boardingTime_ = other.boardingTime_ != null ? other.boardingTime_.Clone() : null;
      gateClosingTime_ = other.gateClosingTime_ != null ? other.gateClosingTime_.Clone() : null;
      scheduledArrivalTime_ = other.scheduledArrivalTime_ != null ? other.scheduledArrivalTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlightTimes Clone() {
      return new FlightTimes(this);
    }

    /// <summary>Field number for the "scheduledDepartureTime" field.</summary>
    public const int ScheduledDepartureTimeFieldNumber = 1;
    private global::PassKit.Grpc.Time scheduledDepartureTime_;
    /// <summary>
    /// The published departure time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Time ScheduledDepartureTime {
      get { return scheduledDepartureTime_; }
      set {
        scheduledDepartureTime_ = value;
      }
    }

    /// <summary>Field number for the "boardingTime" field.</summary>
    public const int BoardingTimeFieldNumber = 2;
    private global::PassKit.Grpc.Time boardingTime_;
    /// <summary>
    /// The published boarding time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Time BoardingTime {
      get { return boardingTime_; }
      set {
        boardingTime_ = value;
      }
    }

    /// <summary>Field number for the "gateClosingTime" field.</summary>
    public const int GateClosingTimeFieldNumber = 3;
    private global::PassKit.Grpc.Time gateClosingTime_;
    /// <summary>
    /// The point after which passengers will be denied boarding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Time GateClosingTime {
      get { return gateClosingTime_; }
      set {
        gateClosingTime_ = value;
      }
    }

    /// <summary>Field number for the "scheduledArrivalTime" field.</summary>
    public const int ScheduledArrivalTimeFieldNumber = 4;
    private global::PassKit.Grpc.Time scheduledArrivalTime_;
    /// <summary>
    /// The published, scheduled arrival time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Time ScheduledArrivalTime {
      get { return scheduledArrivalTime_; }
      set {
        scheduledArrivalTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FlightTimes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FlightTimes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ScheduledDepartureTime, other.ScheduledDepartureTime)) return false;
      if (!object.Equals(BoardingTime, other.BoardingTime)) return false;
      if (!object.Equals(GateClosingTime, other.GateClosingTime)) return false;
      if (!object.Equals(ScheduledArrivalTime, other.ScheduledArrivalTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (scheduledDepartureTime_ != null) hash ^= ScheduledDepartureTime.GetHashCode();
      if (boardingTime_ != null) hash ^= BoardingTime.GetHashCode();
      if (gateClosingTime_ != null) hash ^= GateClosingTime.GetHashCode();
      if (scheduledArrivalTime_ != null) hash ^= ScheduledArrivalTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (scheduledDepartureTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ScheduledDepartureTime);
      }
      if (boardingTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BoardingTime);
      }
      if (gateClosingTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GateClosingTime);
      }
      if (scheduledArrivalTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ScheduledArrivalTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (scheduledDepartureTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ScheduledDepartureTime);
      }
      if (boardingTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BoardingTime);
      }
      if (gateClosingTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GateClosingTime);
      }
      if (scheduledArrivalTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ScheduledArrivalTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (scheduledDepartureTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledDepartureTime);
      }
      if (boardingTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoardingTime);
      }
      if (gateClosingTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GateClosingTime);
      }
      if (scheduledArrivalTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledArrivalTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FlightTimes other) {
      if (other == null) {
        return;
      }
      if (other.scheduledDepartureTime_ != null) {
        if (scheduledDepartureTime_ == null) {
          ScheduledDepartureTime = new global::PassKit.Grpc.Time();
        }
        ScheduledDepartureTime.MergeFrom(other.ScheduledDepartureTime);
      }
      if (other.boardingTime_ != null) {
        if (boardingTime_ == null) {
          BoardingTime = new global::PassKit.Grpc.Time();
        }
        BoardingTime.MergeFrom(other.BoardingTime);
      }
      if (other.gateClosingTime_ != null) {
        if (gateClosingTime_ == null) {
          GateClosingTime = new global::PassKit.Grpc.Time();
        }
        GateClosingTime.MergeFrom(other.GateClosingTime);
      }
      if (other.scheduledArrivalTime_ != null) {
        if (scheduledArrivalTime_ == null) {
          ScheduledArrivalTime = new global::PassKit.Grpc.Time();
        }
        ScheduledArrivalTime.MergeFrom(other.ScheduledArrivalTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (scheduledDepartureTime_ == null) {
              ScheduledDepartureTime = new global::PassKit.Grpc.Time();
            }
            input.ReadMessage(ScheduledDepartureTime);
            break;
          }
          case 18: {
            if (boardingTime_ == null) {
              BoardingTime = new global::PassKit.Grpc.Time();
            }
            input.ReadMessage(BoardingTime);
            break;
          }
          case 26: {
            if (gateClosingTime_ == null) {
              GateClosingTime = new global::PassKit.Grpc.Time();
            }
            input.ReadMessage(GateClosingTime);
            break;
          }
          case 34: {
            if (scheduledArrivalTime_ == null) {
              ScheduledArrivalTime = new global::PassKit.Grpc.Time();
            }
            input.ReadMessage(ScheduledArrivalTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (scheduledDepartureTime_ == null) {
              ScheduledDepartureTime = new global::PassKit.Grpc.Time();
            }
            input.ReadMessage(ScheduledDepartureTime);
            break;
          }
          case 18: {
            if (boardingTime_ == null) {
              BoardingTime = new global::PassKit.Grpc.Time();
            }
            input.ReadMessage(BoardingTime);
            break;
          }
          case 26: {
            if (gateClosingTime_ == null) {
              GateClosingTime = new global::PassKit.Grpc.Time();
            }
            input.ReadMessage(GateClosingTime);
            break;
          }
          case 34: {
            if (scheduledArrivalTime_ == null) {
              ScheduledArrivalTime = new global::PassKit.Grpc.Time();
            }
            input.ReadMessage(ScheduledArrivalTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FlightUrls add utility to Semantic Boarding Passes.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FlightURLs : pb::IMessage<FlightURLs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FlightURLs> _parser = new pb::MessageParser<FlightURLs>(() => new FlightURLs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FlightURLs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.Flights.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlightURLs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlightURLs(FlightURLs other) : this() {
      upgradeURL_ = other.upgradeURL_;
      orderFoodURL_ = other.orderFoodURL_;
      purchaseWifiURL_ = other.purchaseWifiURL_;
      changeSeatURL_ = other.changeSeatURL_;
      entertainmentURL_ = other.entertainmentURL_;
      standbyListURL_ = other.standbyListURL_;
      purchaseAdditionalBaggageURL_ = other.purchaseAdditionalBaggageURL_;
      purchaseLoungeAccessURL_ = other.purchaseLoungeAccessURL_;
      reportLostBagURL_ = other.reportLostBagURL_;
      managementURL_ = other.managementURL_;
      requestWheelchairURL_ = other.requestWheelchairURL_;
      registerServiceAnimalURL_ = other.registerServiceAnimalURL_;
      transitProviderEmail_ = other.transitProviderEmail_;
      transitProviderWebsiteURL_ = other.transitProviderWebsiteURL_;
      transitProviderPhoneNumber_ = other.transitProviderPhoneNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlightURLs Clone() {
      return new FlightURLs(this);
    }

    /// <summary>Field number for the "upgradeURL" field.</summary>
    public const int UpgradeURLFieldNumber = 1;
    private string upgradeURL_ = "";
    /// <summary>
    /// A link to upgrade the flight.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UpgradeURL {
      get { return upgradeURL_; }
      set {
        upgradeURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "orderFoodURL" field.</summary>
    public const int OrderFoodURLFieldNumber = 2;
    private string orderFoodURL_ = "";
    /// <summary>
    /// A link to order food, either before or during the flight.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrderFoodURL {
      get { return orderFoodURL_; }
      set {
        orderFoodURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "purchaseWifiURL" field.</summary>
    public const int PurchaseWifiURLFieldNumber = 3;
    private string purchaseWifiURL_ = "";
    /// <summary>
    /// A link to purchase in-flight wifi.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PurchaseWifiURL {
      get { return purchaseWifiURL_; }
      set {
        purchaseWifiURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "changeSeatURL" field.</summary>
    public const int ChangeSeatURLFieldNumber = 4;
    private string changeSeatURL_ = "";
    /// <summary>
    /// A link to change the seat for this ticket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChangeSeatURL {
      get { return changeSeatURL_; }
      set {
        changeSeatURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entertainmentURL" field.</summary>
    public const int EntertainmentURLFieldNumber = 5;
    private string entertainmentURL_ = "";
    /// <summary>
    /// A link to in-flight entertainment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntertainmentURL {
      get { return entertainmentURL_; }
      set {
        entertainmentURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "standbyListURL" field.</summary>
    public const int StandbyListURLFieldNumber = 6;
    private string standbyListURL_ = "";
    /// <summary>
    /// A link to the stand-by list for this flight.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StandbyListURL {
      get { return standbyListURL_; }
      set {
        standbyListURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "purchaseAdditionalBaggageURL" field.</summary>
    public const int PurchaseAdditionalBaggageURLFieldNumber = 7;
    private string purchaseAdditionalBaggageURL_ = "";
    /// <summary>
    ///A link to add checked bags for this ticket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PurchaseAdditionalBaggageURL {
      get { return purchaseAdditionalBaggageURL_; }
      set {
        purchaseAdditionalBaggageURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "purchaseLoungeAccessURL" field.</summary>
    public const int PurchaseLoungeAccessURLFieldNumber = 8;
    private string purchaseLoungeAccessURL_ = "";
    /// <summary>
    /// A link to purchase lounge access
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PurchaseLoungeAccessURL {
      get { return purchaseLoungeAccessURL_; }
      set {
        purchaseLoungeAccessURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reportLostBagURL" field.</summary>
    public const int ReportLostBagURLFieldNumber = 9;
    private string reportLostBagURL_ = "";
    /// <summary>
    /// A link to report lost luggage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReportLostBagURL {
      get { return reportLostBagURL_; }
      set {
        reportLostBagURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "managementURL" field.</summary>
    public const int ManagementURLFieldNumber = 10;
    private string managementURL_ = "";
    /// <summary>
    /// A link for managing the booking.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ManagementURL {
      get { return managementURL_; }
      set {
        managementURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requestWheelchairURL" field.</summary>
    public const int RequestWheelchairURLFieldNumber = 11;
    private string requestWheelchairURL_ = "";
    /// <summary>
    /// A link to request a wheel chair.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RequestWheelchairURL {
      get { return requestWheelchairURL_; }
      set {
        requestWheelchairURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registerServiceAnimalURL" field.</summary>
    public const int RegisterServiceAnimalURLFieldNumber = 12;
    private string registerServiceAnimalURL_ = "";
    /// <summary>
    /// A link for registering a service animal.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RegisterServiceAnimalURL {
      get { return registerServiceAnimalURL_; }
      set {
        registerServiceAnimalURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transitProviderEmail" field.</summary>
    public const int TransitProviderEmailFieldNumber = 13;
    private string transitProviderEmail_ = "";
    /// <summary>
    /// The email for the transit provider.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TransitProviderEmail {
      get { return transitProviderEmail_; }
      set {
        transitProviderEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transitProviderWebsiteURL" field.</summary>
    public const int TransitProviderWebsiteURLFieldNumber = 14;
    private string transitProviderWebsiteURL_ = "";
    /// <summary>
    /// A link for the transit provider.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TransitProviderWebsiteURL {
      get { return transitProviderWebsiteURL_; }
      set {
        transitProviderWebsiteURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transitProviderPhoneNumber" field.</summary>
    public const int TransitProviderPhoneNumberFieldNumber = 15;
    private string transitProviderPhoneNumber_ = "";
    /// <summary>
    /// A phone number for the transit provider.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TransitProviderPhoneNumber {
      get { return transitProviderPhoneNumber_; }
      set {
        transitProviderPhoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FlightURLs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FlightURLs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UpgradeURL != other.UpgradeURL) return false;
      if (OrderFoodURL != other.OrderFoodURL) return false;
      if (PurchaseWifiURL != other.PurchaseWifiURL) return false;
      if (ChangeSeatURL != other.ChangeSeatURL) return false;
      if (EntertainmentURL != other.EntertainmentURL) return false;
      if (StandbyListURL != other.StandbyListURL) return false;
      if (PurchaseAdditionalBaggageURL != other.PurchaseAdditionalBaggageURL) return false;
      if (PurchaseLoungeAccessURL != other.PurchaseLoungeAccessURL) return false;
      if (ReportLostBagURL != other.ReportLostBagURL) return false;
      if (ManagementURL != other.ManagementURL) return false;
      if (RequestWheelchairURL != other.RequestWheelchairURL) return false;
      if (RegisterServiceAnimalURL != other.RegisterServiceAnimalURL) return false;
      if (TransitProviderEmail != other.TransitProviderEmail) return false;
      if (TransitProviderWebsiteURL != other.TransitProviderWebsiteURL) return false;
      if (TransitProviderPhoneNumber != other.TransitProviderPhoneNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UpgradeURL.Length != 0) hash ^= UpgradeURL.GetHashCode();
      if (OrderFoodURL.Length != 0) hash ^= OrderFoodURL.GetHashCode();
      if (PurchaseWifiURL.Length != 0) hash ^= PurchaseWifiURL.GetHashCode();
      if (ChangeSeatURL.Length != 0) hash ^= ChangeSeatURL.GetHashCode();
      if (EntertainmentURL.Length != 0) hash ^= EntertainmentURL.GetHashCode();
      if (StandbyListURL.Length != 0) hash ^= StandbyListURL.GetHashCode();
      if (PurchaseAdditionalBaggageURL.Length != 0) hash ^= PurchaseAdditionalBaggageURL.GetHashCode();
      if (PurchaseLoungeAccessURL.Length != 0) hash ^= PurchaseLoungeAccessURL.GetHashCode();
      if (ReportLostBagURL.Length != 0) hash ^= ReportLostBagURL.GetHashCode();
      if (ManagementURL.Length != 0) hash ^= ManagementURL.GetHashCode();
      if (RequestWheelchairURL.Length != 0) hash ^= RequestWheelchairURL.GetHashCode();
      if (RegisterServiceAnimalURL.Length != 0) hash ^= RegisterServiceAnimalURL.GetHashCode();
      if (TransitProviderEmail.Length != 0) hash ^= TransitProviderEmail.GetHashCode();
      if (TransitProviderWebsiteURL.Length != 0) hash ^= TransitProviderWebsiteURL.GetHashCode();
      if (TransitProviderPhoneNumber.Length != 0) hash ^= TransitProviderPhoneNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UpgradeURL.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UpgradeURL);
      }
      if (OrderFoodURL.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrderFoodURL);
      }
      if (PurchaseWifiURL.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PurchaseWifiURL);
      }
      if (ChangeSeatURL.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ChangeSeatURL);
      }
      if (EntertainmentURL.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EntertainmentURL);
      }
      if (StandbyListURL.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StandbyListURL);
      }
      if (PurchaseAdditionalBaggageURL.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PurchaseAdditionalBaggageURL);
      }
      if (PurchaseLoungeAccessURL.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PurchaseLoungeAccessURL);
      }
      if (ReportLostBagURL.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ReportLostBagURL);
      }
      if (ManagementURL.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ManagementURL);
      }
      if (RequestWheelchairURL.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RequestWheelchairURL);
      }
      if (RegisterServiceAnimalURL.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(RegisterServiceAnimalURL);
      }
      if (TransitProviderEmail.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TransitProviderEmail);
      }
      if (TransitProviderWebsiteURL.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(TransitProviderWebsiteURL);
      }
      if (TransitProviderPhoneNumber.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(TransitProviderPhoneNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UpgradeURL.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UpgradeURL);
      }
      if (OrderFoodURL.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrderFoodURL);
      }
      if (PurchaseWifiURL.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PurchaseWifiURL);
      }
      if (ChangeSeatURL.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ChangeSeatURL);
      }
      if (EntertainmentURL.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EntertainmentURL);
      }
      if (StandbyListURL.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StandbyListURL);
      }
      if (PurchaseAdditionalBaggageURL.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PurchaseAdditionalBaggageURL);
      }
      if (PurchaseLoungeAccessURL.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PurchaseLoungeAccessURL);
      }
      if (ReportLostBagURL.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ReportLostBagURL);
      }
      if (ManagementURL.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ManagementURL);
      }
      if (RequestWheelchairURL.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RequestWheelchairURL);
      }
      if (RegisterServiceAnimalURL.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(RegisterServiceAnimalURL);
      }
      if (TransitProviderEmail.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TransitProviderEmail);
      }
      if (TransitProviderWebsiteURL.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(TransitProviderWebsiteURL);
      }
      if (TransitProviderPhoneNumber.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(TransitProviderPhoneNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UpgradeURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UpgradeURL);
      }
      if (OrderFoodURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderFoodURL);
      }
      if (PurchaseWifiURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PurchaseWifiURL);
      }
      if (ChangeSeatURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChangeSeatURL);
      }
      if (EntertainmentURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntertainmentURL);
      }
      if (StandbyListURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StandbyListURL);
      }
      if (PurchaseAdditionalBaggageURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PurchaseAdditionalBaggageURL);
      }
      if (PurchaseLoungeAccessURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PurchaseLoungeAccessURL);
      }
      if (ReportLostBagURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReportLostBagURL);
      }
      if (ManagementURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ManagementURL);
      }
      if (RequestWheelchairURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestWheelchairURL);
      }
      if (RegisterServiceAnimalURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegisterServiceAnimalURL);
      }
      if (TransitProviderEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransitProviderEmail);
      }
      if (TransitProviderWebsiteURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransitProviderWebsiteURL);
      }
      if (TransitProviderPhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransitProviderPhoneNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FlightURLs other) {
      if (other == null) {
        return;
      }
      if (other.UpgradeURL.Length != 0) {
        UpgradeURL = other.UpgradeURL;
      }
      if (other.OrderFoodURL.Length != 0) {
        OrderFoodURL = other.OrderFoodURL;
      }
      if (other.PurchaseWifiURL.Length != 0) {
        PurchaseWifiURL = other.PurchaseWifiURL;
      }
      if (other.ChangeSeatURL.Length != 0) {
        ChangeSeatURL = other.ChangeSeatURL;
      }
      if (other.EntertainmentURL.Length != 0) {
        EntertainmentURL = other.EntertainmentURL;
      }
      if (other.StandbyListURL.Length != 0) {
        StandbyListURL = other.StandbyListURL;
      }
      if (other.PurchaseAdditionalBaggageURL.Length != 0) {
        PurchaseAdditionalBaggageURL = other.PurchaseAdditionalBaggageURL;
      }
      if (other.PurchaseLoungeAccessURL.Length != 0) {
        PurchaseLoungeAccessURL = other.PurchaseLoungeAccessURL;
      }
      if (other.ReportLostBagURL.Length != 0) {
        ReportLostBagURL = other.ReportLostBagURL;
      }
      if (other.ManagementURL.Length != 0) {
        ManagementURL = other.ManagementURL;
      }
      if (other.RequestWheelchairURL.Length != 0) {
        RequestWheelchairURL = other.RequestWheelchairURL;
      }
      if (other.RegisterServiceAnimalURL.Length != 0) {
        RegisterServiceAnimalURL = other.RegisterServiceAnimalURL;
      }
      if (other.TransitProviderEmail.Length != 0) {
        TransitProviderEmail = other.TransitProviderEmail;
      }
      if (other.TransitProviderWebsiteURL.Length != 0) {
        TransitProviderWebsiteURL = other.TransitProviderWebsiteURL;
      }
      if (other.TransitProviderPhoneNumber.Length != 0) {
        TransitProviderPhoneNumber = other.TransitProviderPhoneNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UpgradeURL = input.ReadString();
            break;
          }
          case 18: {
            OrderFoodURL = input.ReadString();
            break;
          }
          case 26: {
            PurchaseWifiURL = input.ReadString();
            break;
          }
          case 34: {
            ChangeSeatURL = input.ReadString();
            break;
          }
          case 42: {
            EntertainmentURL = input.ReadString();
            break;
          }
          case 50: {
            StandbyListURL = input.ReadString();
            break;
          }
          case 58: {
            PurchaseAdditionalBaggageURL = input.ReadString();
            break;
          }
          case 66: {
            PurchaseLoungeAccessURL = input.ReadString();
            break;
          }
          case 74: {
            ReportLostBagURL = input.ReadString();
            break;
          }
          case 82: {
            ManagementURL = input.ReadString();
            break;
          }
          case 90: {
            RequestWheelchairURL = input.ReadString();
            break;
          }
          case 98: {
            RegisterServiceAnimalURL = input.ReadString();
            break;
          }
          case 106: {
            TransitProviderEmail = input.ReadString();
            break;
          }
          case 114: {
            TransitProviderWebsiteURL = input.ReadString();
            break;
          }
          case 122: {
            TransitProviderPhoneNumber = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UpgradeURL = input.ReadString();
            break;
          }
          case 18: {
            OrderFoodURL = input.ReadString();
            break;
          }
          case 26: {
            PurchaseWifiURL = input.ReadString();
            break;
          }
          case 34: {
            ChangeSeatURL = input.ReadString();
            break;
          }
          case 42: {
            EntertainmentURL = input.ReadString();
            break;
          }
          case 50: {
            StandbyListURL = input.ReadString();
            break;
          }
          case 58: {
            PurchaseAdditionalBaggageURL = input.ReadString();
            break;
          }
          case 66: {
            PurchaseLoungeAccessURL = input.ReadString();
            break;
          }
          case 74: {
            ReportLostBagURL = input.ReadString();
            break;
          }
          case 82: {
            ManagementURL = input.ReadString();
            break;
          }
          case 90: {
            RequestWheelchairURL = input.ReadString();
            break;
          }
          case 98: {
            RegisterServiceAnimalURL = input.ReadString();
            break;
          }
          case 106: {
            TransitProviderEmail = input.ReadString();
            break;
          }
          case 114: {
            TransitProviderWebsiteURL = input.ReadString();
            break;
          }
          case 122: {
            TransitProviderPhoneNumber = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
