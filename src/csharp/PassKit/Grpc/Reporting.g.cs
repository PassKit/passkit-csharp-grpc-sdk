// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: io/common/reporting.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PassKit.Grpc {

  /// <summary>Holder for reflection information generated from io/common/reporting.proto</summary>
  public static partial class ReportingReflection {

    #region Descriptor
    /// <summary>File descriptor for io/common/reporting.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReportingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chlpby9jb21tb24vcmVwb3J0aW5nLnByb3RvEgJpbxoZaW8vY29tbW9uL3By",
            "b3RvY29scy5wcm90bxoeaW8vY29tbW9uL2NvbW1vbl9vYmplY3RzLnByb3Rv",
            "Gi5wcm90b2MtZ2VuLW9wZW5hcGl2Mi9vcHRpb25zL2Fubm90YXRpb25zLnBy",
            "b3RvIt8GChFBbmFseXRpY3NSZXNwb25zZRIaCgZwZXJpb2QYASABKA4yCi5p",
            "by5QZXJpb2QSDwoHY3JlYXRlZBgCIAEoDRIRCglpbnN0YWxsZWQYAyABKA0S",
            "DwoHZGVsZXRlZBgEIAEoDRITCgtpbnZhbGlkYXRlZBgFIAEoDRIsCg9kZXZp",
            "Y2VCcmVha2Rvd24YBiABKAsyEy5pby5EZXZpY2VCcmVha2Rvd24SSQoSdXRt",
            "U291cmNlQnJlYWtkb3duGAcgAygLMi0uaW8uQW5hbHl0aWNzUmVzcG9uc2Uu",
            "VXRtU291cmNlQnJlYWtkb3duRW50cnkSIQoEZGF0YRgIIAMoCzITLmlvLkNo",
            "YXJ0RGF0YVBvaW50cxJJChJ1dG1NZWRpdW1CcmVha2Rvd24YCSADKAsyLS5p",
            "by5BbmFseXRpY3NSZXNwb25zZS5VdG1NZWRpdW1CcmVha2Rvd25FbnRyeRJF",
            "ChB1dG1OYW1lQnJlYWtkb3duGAogAygLMisuaW8uQW5hbHl0aWNzUmVzcG9u",
            "c2UuVXRtTmFtZUJyZWFrZG93bkVudHJ5EkUKEHV0bVRlcm1CcmVha2Rvd24Y",
            "CyADKAsyKy5pby5BbmFseXRpY3NSZXNwb25zZS5VdG1UZXJtQnJlYWtkb3du",
            "RW50cnkSSwoTdXRtQ29udGVudEJyZWFrZG93bhgMIAMoCzIuLmlvLkFuYWx5",
            "dGljc1Jlc3BvbnNlLlV0bUNvbnRlbnRCcmVha2Rvd25FbnRyeRo5ChdVdG1T",
            "b3VyY2VCcmVha2Rvd25FbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiAB",
            "KA06AjgBGjkKF1V0bU1lZGl1bUJyZWFrZG93bkVudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoDToCOAEaNwoVVXRtTmFtZUJyZWFrZG93bkVudHJ5",
            "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoDToCOAEaNwoVVXRtVGVybUJy",
            "ZWFrZG93bkVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoDToCOAEa",
            "OgoYVXRtQ29udGVudEJyZWFrZG93bkVudHJ5EgsKA2tleRgBIAEoCRINCgV2",
            "YWx1ZRgCIAEoDToCOAEiTgoPRGV2aWNlQnJlYWtkb3duEhMKC2FwcGxlV2Fs",
            "bGV0GAEgASgNEhEKCWdvb2dsZVBheRgCIAEoDRITCgtvdGhlcldhbGxldBgD",
            "IAEoDSKKAQoPQ2hhcnREYXRhUG9pbnRzEgwKBG5hbWUYASABKAkSDwoHY3Jl",
            "YXRlZBgCIAEoDRIRCglpbnN0YWxsZWQYAyABKA0SDwoHdXBkYXRlZBgEIAEo",
            "DRIPCgdkZWxldGVkGAUgASgNEhMKC2ludmFsaWRhdGVkGAYgASgNEg4KBmN1",
            "c3RvbRgHIAEoDSKkAwoQQW5hbHl0aWNzUmVxdWVzdBIiCghwcm90b2NvbBgB",
            "IAEoDjIQLmlvLlBhc3NQcm90b2NvbBIPCgdjbGFzc0lkGAIgASgJEhoKBnBl",
            "cmlvZBgDIAEoDjIKLmlvLlBlcmlvZBIRCglzdGFydERhdGUYBCABKAkSDwoH",
            "ZW5kRGF0ZRgFIAEoCRIQCgh0aW1lem9uZRgGIAEoCRIrCgZjb3Vwb24YDyAB",
            "KAsyGS5pby5Db3Vwb25BbmFseXRpY3NGaWx0ZXJIABIrCgZmbGlnaHQYECAB",
            "KAsyGS5pby5GbGlnaHRBbmFseXRpY3NGaWx0ZXJIABI1CgtldmVudFRpY2tl",
            "dBgRIAEoCzIeLmlvLkV2ZW50VGlja2V0QW5hbHl0aWNzRmlsdGVySAA6bpJB",
            "awppKhFBbmFseXRpY3MgUmVxdWVzdDI/UmV0cmlldmVzIHBhc3MgY3JlYXRl",
            "ZCwgaW5zdGFsbGVkLCBkZWxldGVkLCBpbnZhbGlkYXRlZCBjb3VudHMu0gEI",
            "cHJvdG9jb2zSAQdjbGFzc0lkQggKBmZpbHRlciIoChVDb3Vwb25BbmFseXRp",
            "Y3NGaWx0ZXISDwoHb2ZmZXJJZBgBIAEoCSJ9ChVGbGlnaHRBbmFseXRpY3NG",
            "aWx0ZXISFAoMZmxpZ2h0TnVtYmVyGAEgASgJEh8KDWRlcGFydHVyZURhdGUY",
            "AiABKAsyCC5pby5EYXRlEhUKDWJvYXJkaW5nUG9pbnQYAyABKAkSFgoOZGVw",
            "bGFuaW5nUG9pbnQYBCABKAkifQoaRXZlbnRUaWNrZXRBbmFseXRpY3NGaWx0",
            "ZXISFAoMdGlja2V0VHlwZUlkGAEgASgJEhUKDXRpY2tldFR5cGVVaWQYAiAB",
            "KAkSDwoHdmVudWVJZBgDIAEoCRIQCgh2ZW51ZVVpZBgEIAEoCRIPCgdldmVu",
            "dElkGAUgASgJKiYKBlBlcmlvZBIHCgNEQVkQABIJCgVNT05USBABEggKBFlF",
            "QVIQAkJHChBjb20ucGFzc2tpdC5ncnBjWiRzdGFzaC5wYXNza2l0LmNvbS9p",
            "by9tb2RlbC9zZGsvZ28vaW+qAgxQYXNzS2l0LkdycGNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::PassKit.Grpc.ProtocolsReflection.Descriptor, global::PassKit.Grpc.CommonObjectsReflection.Descriptor, global::PassKit.Grpc.Gateway.ProtocGenOpenapiv2.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PassKit.Grpc.Period), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.AnalyticsResponse), global::PassKit.Grpc.AnalyticsResponse.Parser, new[]{ "Period", "Created", "Installed", "Deleted", "Invalidated", "DeviceBreakdown", "UtmSourceBreakdown", "Data", "UtmMediumBreakdown", "UtmNameBreakdown", "UtmTermBreakdown", "UtmContentBreakdown" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.DeviceBreakdown), global::PassKit.Grpc.DeviceBreakdown.Parser, new[]{ "AppleWallet", "GooglePay", "OtherWallet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.ChartDataPoints), global::PassKit.Grpc.ChartDataPoints.Parser, new[]{ "Name", "Created", "Installed", "Updated", "Deleted", "Invalidated", "Custom" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.AnalyticsRequest), global::PassKit.Grpc.AnalyticsRequest.Parser, new[]{ "Protocol", "ClassId", "Period", "StartDate", "EndDate", "Timezone", "Coupon", "Flight", "EventTicket" }, new[]{ "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.CouponAnalyticsFilter), global::PassKit.Grpc.CouponAnalyticsFilter.Parser, new[]{ "OfferId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.FlightAnalyticsFilter), global::PassKit.Grpc.FlightAnalyticsFilter.Parser, new[]{ "FlightNumber", "DepartureDate", "BoardingPoint", "DeplaningPoint" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PassKit.Grpc.EventTicketAnalyticsFilter), global::PassKit.Grpc.EventTicketAnalyticsFilter.Parser, new[]{ "TicketTypeId", "TicketTypeUid", "VenueId", "VenueUid", "EventId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Enum to specify the period grouping for analytics data.
  /// </summary>
  public enum Period {
    /// <summary>
    /// Show individual data by day.
    /// </summary>
    [pbr::OriginalName("DAY")] Day = 0,
    /// <summary>
    /// Default response will be in months.
    /// </summary>
    [pbr::OriginalName("MONTH")] Month = 1,
    /// <summary>
    /// Show individual data by year.
    /// </summary>
    [pbr::OriginalName("YEAR")] Year = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The response message containing analytics statistics.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AnalyticsResponse : pb::IMessage<AnalyticsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyticsResponse> _parser = new pb::MessageParser<AnalyticsResponse>(() => new AnalyticsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyticsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.ReportingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsResponse(AnalyticsResponse other) : this() {
      period_ = other.period_;
      created_ = other.created_;
      installed_ = other.installed_;
      deleted_ = other.deleted_;
      invalidated_ = other.invalidated_;
      deviceBreakdown_ = other.deviceBreakdown_ != null ? other.deviceBreakdown_.Clone() : null;
      utmSourceBreakdown_ = other.utmSourceBreakdown_.Clone();
      data_ = other.data_.Clone();
      utmMediumBreakdown_ = other.utmMediumBreakdown_.Clone();
      utmNameBreakdown_ = other.utmNameBreakdown_.Clone();
      utmTermBreakdown_ = other.utmTermBreakdown_.Clone();
      utmContentBreakdown_ = other.utmContentBreakdown_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsResponse Clone() {
      return new AnalyticsResponse(this);
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 1;
    private global::PassKit.Grpc.Period period_ = global::PassKit.Grpc.Period.Day;
    /// <summary>
    /// The Period that the response data is grouped by by: per DAY, MONTH or YEAR.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Period Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 2;
    private uint created_;
    /// <summary>
    /// Total number of passes created during the requested period.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "installed" field.</summary>
    public const int InstalledFieldNumber = 3;
    private uint installed_;
    /// <summary>
    /// Total number of passes installed during the requested period.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Installed {
      get { return installed_; }
      set {
        installed_ = value;
      }
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 4;
    private uint deleted_;
    /// <summary>
    /// Total number of passes deleted during the requested period.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Deleted {
      get { return deleted_; }
      set {
        deleted_ = value;
      }
    }

    /// <summary>Field number for the "invalidated" field.</summary>
    public const int InvalidatedFieldNumber = 5;
    private uint invalidated_;
    /// <summary>
    /// Total number of passes invalidated during the requested period.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Invalidated {
      get { return invalidated_; }
      set {
        invalidated_ = value;
      }
    }

    /// <summary>Field number for the "deviceBreakdown" field.</summary>
    public const int DeviceBreakdownFieldNumber = 6;
    private global::PassKit.Grpc.DeviceBreakdown deviceBreakdown_;
    /// <summary>
    /// Total number of passes installed for each device type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.DeviceBreakdown DeviceBreakdown {
      get { return deviceBreakdown_; }
      set {
        deviceBreakdown_ = value;
      }
    }

    /// <summary>Field number for the "utmSourceBreakdown" field.</summary>
    public const int UtmSourceBreakdownFieldNumber = 7;
    private static readonly pbc::MapField<string, uint>.Codec _map_utmSourceBreakdown_codec
        = new pbc::MapField<string, uint>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForUInt32(16, 0), 58);
    private readonly pbc::MapField<string, uint> utmSourceBreakdown_ = new pbc::MapField<string, uint>();
    /// <summary>
    /// Total number of passes installed for each distribution source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, uint> UtmSourceBreakdown {
      get { return utmSourceBreakdown_; }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 8;
    private static readonly pb::FieldCodec<global::PassKit.Grpc.ChartDataPoints> _repeated_data_codec
        = pb::FieldCodec.ForMessage(66, global::PassKit.Grpc.ChartDataPoints.Parser);
    private readonly pbc::RepeatedField<global::PassKit.Grpc.ChartDataPoints> data_ = new pbc::RepeatedField<global::PassKit.Grpc.ChartDataPoints>();
    /// <summary>
    /// Breakdown of data by day, month or year.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::PassKit.Grpc.ChartDataPoints> Data {
      get { return data_; }
    }

    /// <summary>Field number for the "utmMediumBreakdown" field.</summary>
    public const int UtmMediumBreakdownFieldNumber = 9;
    private static readonly pbc::MapField<string, uint>.Codec _map_utmMediumBreakdown_codec
        = new pbc::MapField<string, uint>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForUInt32(16, 0), 74);
    private readonly pbc::MapField<string, uint> utmMediumBreakdown_ = new pbc::MapField<string, uint>();
    /// <summary>
    /// Breakdown of data by utm medium.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, uint> UtmMediumBreakdown {
      get { return utmMediumBreakdown_; }
    }

    /// <summary>Field number for the "utmNameBreakdown" field.</summary>
    public const int UtmNameBreakdownFieldNumber = 10;
    private static readonly pbc::MapField<string, uint>.Codec _map_utmNameBreakdown_codec
        = new pbc::MapField<string, uint>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForUInt32(16, 0), 82);
    private readonly pbc::MapField<string, uint> utmNameBreakdown_ = new pbc::MapField<string, uint>();
    /// <summary>
    /// Breakdown of data by utm name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, uint> UtmNameBreakdown {
      get { return utmNameBreakdown_; }
    }

    /// <summary>Field number for the "utmTermBreakdown" field.</summary>
    public const int UtmTermBreakdownFieldNumber = 11;
    private static readonly pbc::MapField<string, uint>.Codec _map_utmTermBreakdown_codec
        = new pbc::MapField<string, uint>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForUInt32(16, 0), 90);
    private readonly pbc::MapField<string, uint> utmTermBreakdown_ = new pbc::MapField<string, uint>();
    /// <summary>
    /// Breakdown of data by utm term.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, uint> UtmTermBreakdown {
      get { return utmTermBreakdown_; }
    }

    /// <summary>Field number for the "utmContentBreakdown" field.</summary>
    public const int UtmContentBreakdownFieldNumber = 12;
    private static readonly pbc::MapField<string, uint>.Codec _map_utmContentBreakdown_codec
        = new pbc::MapField<string, uint>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForUInt32(16, 0), 98);
    private readonly pbc::MapField<string, uint> utmContentBreakdown_ = new pbc::MapField<string, uint>();
    /// <summary>
    /// Breakdown of data by utm content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, uint> UtmContentBreakdown {
      get { return utmContentBreakdown_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyticsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyticsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Period != other.Period) return false;
      if (Created != other.Created) return false;
      if (Installed != other.Installed) return false;
      if (Deleted != other.Deleted) return false;
      if (Invalidated != other.Invalidated) return false;
      if (!object.Equals(DeviceBreakdown, other.DeviceBreakdown)) return false;
      if (!UtmSourceBreakdown.Equals(other.UtmSourceBreakdown)) return false;
      if(!data_.Equals(other.data_)) return false;
      if (!UtmMediumBreakdown.Equals(other.UtmMediumBreakdown)) return false;
      if (!UtmNameBreakdown.Equals(other.UtmNameBreakdown)) return false;
      if (!UtmTermBreakdown.Equals(other.UtmTermBreakdown)) return false;
      if (!UtmContentBreakdown.Equals(other.UtmContentBreakdown)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Period != global::PassKit.Grpc.Period.Day) hash ^= Period.GetHashCode();
      if (Created != 0) hash ^= Created.GetHashCode();
      if (Installed != 0) hash ^= Installed.GetHashCode();
      if (Deleted != 0) hash ^= Deleted.GetHashCode();
      if (Invalidated != 0) hash ^= Invalidated.GetHashCode();
      if (deviceBreakdown_ != null) hash ^= DeviceBreakdown.GetHashCode();
      hash ^= UtmSourceBreakdown.GetHashCode();
      hash ^= data_.GetHashCode();
      hash ^= UtmMediumBreakdown.GetHashCode();
      hash ^= UtmNameBreakdown.GetHashCode();
      hash ^= UtmTermBreakdown.GetHashCode();
      hash ^= UtmContentBreakdown.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Period != global::PassKit.Grpc.Period.Day) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Period);
      }
      if (Created != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Created);
      }
      if (Installed != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Installed);
      }
      if (Deleted != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Deleted);
      }
      if (Invalidated != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Invalidated);
      }
      if (deviceBreakdown_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DeviceBreakdown);
      }
      utmSourceBreakdown_.WriteTo(output, _map_utmSourceBreakdown_codec);
      data_.WriteTo(output, _repeated_data_codec);
      utmMediumBreakdown_.WriteTo(output, _map_utmMediumBreakdown_codec);
      utmNameBreakdown_.WriteTo(output, _map_utmNameBreakdown_codec);
      utmTermBreakdown_.WriteTo(output, _map_utmTermBreakdown_codec);
      utmContentBreakdown_.WriteTo(output, _map_utmContentBreakdown_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Period != global::PassKit.Grpc.Period.Day) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Period);
      }
      if (Created != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Created);
      }
      if (Installed != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Installed);
      }
      if (Deleted != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Deleted);
      }
      if (Invalidated != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Invalidated);
      }
      if (deviceBreakdown_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DeviceBreakdown);
      }
      utmSourceBreakdown_.WriteTo(ref output, _map_utmSourceBreakdown_codec);
      data_.WriteTo(ref output, _repeated_data_codec);
      utmMediumBreakdown_.WriteTo(ref output, _map_utmMediumBreakdown_codec);
      utmNameBreakdown_.WriteTo(ref output, _map_utmNameBreakdown_codec);
      utmTermBreakdown_.WriteTo(ref output, _map_utmTermBreakdown_codec);
      utmContentBreakdown_.WriteTo(ref output, _map_utmContentBreakdown_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Period != global::PassKit.Grpc.Period.Day) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Period);
      }
      if (Created != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Created);
      }
      if (Installed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Installed);
      }
      if (Deleted != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Deleted);
      }
      if (Invalidated != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Invalidated);
      }
      if (deviceBreakdown_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceBreakdown);
      }
      size += utmSourceBreakdown_.CalculateSize(_map_utmSourceBreakdown_codec);
      size += data_.CalculateSize(_repeated_data_codec);
      size += utmMediumBreakdown_.CalculateSize(_map_utmMediumBreakdown_codec);
      size += utmNameBreakdown_.CalculateSize(_map_utmNameBreakdown_codec);
      size += utmTermBreakdown_.CalculateSize(_map_utmTermBreakdown_codec);
      size += utmContentBreakdown_.CalculateSize(_map_utmContentBreakdown_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyticsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Period != global::PassKit.Grpc.Period.Day) {
        Period = other.Period;
      }
      if (other.Created != 0) {
        Created = other.Created;
      }
      if (other.Installed != 0) {
        Installed = other.Installed;
      }
      if (other.Deleted != 0) {
        Deleted = other.Deleted;
      }
      if (other.Invalidated != 0) {
        Invalidated = other.Invalidated;
      }
      if (other.deviceBreakdown_ != null) {
        if (deviceBreakdown_ == null) {
          DeviceBreakdown = new global::PassKit.Grpc.DeviceBreakdown();
        }
        DeviceBreakdown.MergeFrom(other.DeviceBreakdown);
      }
      utmSourceBreakdown_.MergeFrom(other.utmSourceBreakdown_);
      data_.Add(other.data_);
      utmMediumBreakdown_.MergeFrom(other.utmMediumBreakdown_);
      utmNameBreakdown_.MergeFrom(other.utmNameBreakdown_);
      utmTermBreakdown_.MergeFrom(other.utmTermBreakdown_);
      utmContentBreakdown_.MergeFrom(other.utmContentBreakdown_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Period = (global::PassKit.Grpc.Period) input.ReadEnum();
            break;
          }
          case 16: {
            Created = input.ReadUInt32();
            break;
          }
          case 24: {
            Installed = input.ReadUInt32();
            break;
          }
          case 32: {
            Deleted = input.ReadUInt32();
            break;
          }
          case 40: {
            Invalidated = input.ReadUInt32();
            break;
          }
          case 50: {
            if (deviceBreakdown_ == null) {
              DeviceBreakdown = new global::PassKit.Grpc.DeviceBreakdown();
            }
            input.ReadMessage(DeviceBreakdown);
            break;
          }
          case 58: {
            utmSourceBreakdown_.AddEntriesFrom(input, _map_utmSourceBreakdown_codec);
            break;
          }
          case 66: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
          case 74: {
            utmMediumBreakdown_.AddEntriesFrom(input, _map_utmMediumBreakdown_codec);
            break;
          }
          case 82: {
            utmNameBreakdown_.AddEntriesFrom(input, _map_utmNameBreakdown_codec);
            break;
          }
          case 90: {
            utmTermBreakdown_.AddEntriesFrom(input, _map_utmTermBreakdown_codec);
            break;
          }
          case 98: {
            utmContentBreakdown_.AddEntriesFrom(input, _map_utmContentBreakdown_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Period = (global::PassKit.Grpc.Period) input.ReadEnum();
            break;
          }
          case 16: {
            Created = input.ReadUInt32();
            break;
          }
          case 24: {
            Installed = input.ReadUInt32();
            break;
          }
          case 32: {
            Deleted = input.ReadUInt32();
            break;
          }
          case 40: {
            Invalidated = input.ReadUInt32();
            break;
          }
          case 50: {
            if (deviceBreakdown_ == null) {
              DeviceBreakdown = new global::PassKit.Grpc.DeviceBreakdown();
            }
            input.ReadMessage(DeviceBreakdown);
            break;
          }
          case 58: {
            utmSourceBreakdown_.AddEntriesFrom(ref input, _map_utmSourceBreakdown_codec);
            break;
          }
          case 66: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
          case 74: {
            utmMediumBreakdown_.AddEntriesFrom(ref input, _map_utmMediumBreakdown_codec);
            break;
          }
          case 82: {
            utmNameBreakdown_.AddEntriesFrom(ref input, _map_utmNameBreakdown_codec);
            break;
          }
          case 90: {
            utmTermBreakdown_.AddEntriesFrom(ref input, _map_utmTermBreakdown_codec);
            break;
          }
          case 98: {
            utmContentBreakdown_.AddEntriesFrom(ref input, _map_utmContentBreakdown_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Installation breakdown by device type.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeviceBreakdown : pb::IMessage<DeviceBreakdown>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceBreakdown> _parser = new pb::MessageParser<DeviceBreakdown>(() => new DeviceBreakdown());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceBreakdown> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.ReportingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceBreakdown() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceBreakdown(DeviceBreakdown other) : this() {
      appleWallet_ = other.appleWallet_;
      googlePay_ = other.googlePay_;
      otherWallet_ = other.otherWallet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceBreakdown Clone() {
      return new DeviceBreakdown(this);
    }

    /// <summary>Field number for the "appleWallet" field.</summary>
    public const int AppleWalletFieldNumber = 1;
    private uint appleWallet_;
    /// <summary>
    /// Total number of passes installed in Apple Wallet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AppleWallet {
      get { return appleWallet_; }
      set {
        appleWallet_ = value;
      }
    }

    /// <summary>Field number for the "googlePay" field.</summary>
    public const int GooglePayFieldNumber = 2;
    private uint googlePay_;
    /// <summary>
    /// Total number of passes installed in Google Pay.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GooglePay {
      get { return googlePay_; }
      set {
        googlePay_ = value;
      }
    }

    /// <summary>Field number for the "otherWallet" field.</summary>
    public const int OtherWalletFieldNumber = 3;
    private uint otherWallet_;
    /// <summary>
    /// Total number of passes installed in Other Wallet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OtherWallet {
      get { return otherWallet_; }
      set {
        otherWallet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceBreakdown);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceBreakdown other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppleWallet != other.AppleWallet) return false;
      if (GooglePay != other.GooglePay) return false;
      if (OtherWallet != other.OtherWallet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AppleWallet != 0) hash ^= AppleWallet.GetHashCode();
      if (GooglePay != 0) hash ^= GooglePay.GetHashCode();
      if (OtherWallet != 0) hash ^= OtherWallet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AppleWallet != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(AppleWallet);
      }
      if (GooglePay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GooglePay);
      }
      if (OtherWallet != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(OtherWallet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AppleWallet != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(AppleWallet);
      }
      if (GooglePay != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GooglePay);
      }
      if (OtherWallet != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(OtherWallet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AppleWallet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppleWallet);
      }
      if (GooglePay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GooglePay);
      }
      if (OtherWallet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OtherWallet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceBreakdown other) {
      if (other == null) {
        return;
      }
      if (other.AppleWallet != 0) {
        AppleWallet = other.AppleWallet;
      }
      if (other.GooglePay != 0) {
        GooglePay = other.GooglePay;
      }
      if (other.OtherWallet != 0) {
        OtherWallet = other.OtherWallet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AppleWallet = input.ReadUInt32();
            break;
          }
          case 16: {
            GooglePay = input.ReadUInt32();
            break;
          }
          case 24: {
            OtherWallet = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AppleWallet = input.ReadUInt32();
            break;
          }
          case 16: {
            GooglePay = input.ReadUInt32();
            break;
          }
          case 24: {
            OtherWallet = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Data points for each unit of the selected period.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ChartDataPoints : pb::IMessage<ChartDataPoints>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChartDataPoints> _parser = new pb::MessageParser<ChartDataPoints>(() => new ChartDataPoints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChartDataPoints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.ReportingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChartDataPoints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChartDataPoints(ChartDataPoints other) : this() {
      name_ = other.name_;
      created_ = other.created_;
      installed_ = other.installed_;
      updated_ = other.updated_;
      deleted_ = other.deleted_;
      invalidated_ = other.invalidated_;
      custom_ = other.custom_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChartDataPoints Clone() {
      return new ChartDataPoints(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// ie. January, Monday
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created" field.</summary>
    public const int CreatedFieldNumber = 2;
    private uint created_;
    /// <summary>
    /// Daily, monthly or yearly total of pass created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Created {
      get { return created_; }
      set {
        created_ = value;
      }
    }

    /// <summary>Field number for the "installed" field.</summary>
    public const int InstalledFieldNumber = 3;
    private uint installed_;
    /// <summary>
    /// Daily, monthly or yearly total of pass installed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Installed {
      get { return installed_; }
      set {
        installed_ = value;
      }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 4;
    private uint updated_;
    /// <summary>
    /// Daily, monthly or yearly total of pass updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Updated {
      get { return updated_; }
      set {
        updated_ = value;
      }
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 5;
    private uint deleted_;
    /// <summary>
    /// Daily, monthly or yearly total of pass deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Deleted {
      get { return deleted_; }
      set {
        deleted_ = value;
      }
    }

    /// <summary>Field number for the "invalidated" field.</summary>
    public const int InvalidatedFieldNumber = 6;
    private uint invalidated_;
    /// <summary>
    /// Daily, monthly or yearly total of pass invalidated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Invalidated {
      get { return invalidated_; }
      set {
        invalidated_ = value;
      }
    }

    /// <summary>Field number for the "custom" field.</summary>
    public const int CustomFieldNumber = 7;
    private uint custom_;
    /// <summary>
    /// Daily, monthly or yearly total of custom data (in case this field used by a protocol; it can put whatever is preferred in here).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Custom {
      get { return custom_; }
      set {
        custom_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChartDataPoints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChartDataPoints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Created != other.Created) return false;
      if (Installed != other.Installed) return false;
      if (Updated != other.Updated) return false;
      if (Deleted != other.Deleted) return false;
      if (Invalidated != other.Invalidated) return false;
      if (Custom != other.Custom) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Created != 0) hash ^= Created.GetHashCode();
      if (Installed != 0) hash ^= Installed.GetHashCode();
      if (Updated != 0) hash ^= Updated.GetHashCode();
      if (Deleted != 0) hash ^= Deleted.GetHashCode();
      if (Invalidated != 0) hash ^= Invalidated.GetHashCode();
      if (Custom != 0) hash ^= Custom.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Created != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Created);
      }
      if (Installed != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Installed);
      }
      if (Updated != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Updated);
      }
      if (Deleted != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Deleted);
      }
      if (Invalidated != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Invalidated);
      }
      if (Custom != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Custom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Created != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Created);
      }
      if (Installed != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Installed);
      }
      if (Updated != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Updated);
      }
      if (Deleted != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Deleted);
      }
      if (Invalidated != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Invalidated);
      }
      if (Custom != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Custom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Created != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Created);
      }
      if (Installed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Installed);
      }
      if (Updated != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Updated);
      }
      if (Deleted != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Deleted);
      }
      if (Invalidated != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Invalidated);
      }
      if (Custom != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Custom);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChartDataPoints other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Created != 0) {
        Created = other.Created;
      }
      if (other.Installed != 0) {
        Installed = other.Installed;
      }
      if (other.Updated != 0) {
        Updated = other.Updated;
      }
      if (other.Deleted != 0) {
        Deleted = other.Deleted;
      }
      if (other.Invalidated != 0) {
        Invalidated = other.Invalidated;
      }
      if (other.Custom != 0) {
        Custom = other.Custom;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Created = input.ReadUInt32();
            break;
          }
          case 24: {
            Installed = input.ReadUInt32();
            break;
          }
          case 32: {
            Updated = input.ReadUInt32();
            break;
          }
          case 40: {
            Deleted = input.ReadUInt32();
            break;
          }
          case 48: {
            Invalidated = input.ReadUInt32();
            break;
          }
          case 56: {
            Custom = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Created = input.ReadUInt32();
            break;
          }
          case 24: {
            Installed = input.ReadUInt32();
            break;
          }
          case 32: {
            Updated = input.ReadUInt32();
            break;
          }
          case 40: {
            Deleted = input.ReadUInt32();
            break;
          }
          case 48: {
            Invalidated = input.ReadUInt32();
            break;
          }
          case 56: {
            Custom = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request message for fetching analytics data.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AnalyticsRequest : pb::IMessage<AnalyticsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnalyticsRequest> _parser = new pb::MessageParser<AnalyticsRequest>(() => new AnalyticsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnalyticsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.ReportingReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsRequest(AnalyticsRequest other) : this() {
      protocol_ = other.protocol_;
      classId_ = other.classId_;
      period_ = other.period_;
      startDate_ = other.startDate_;
      endDate_ = other.endDate_;
      timezone_ = other.timezone_;
      switch (other.FilterCase) {
        case FilterOneofCase.Coupon:
          Coupon = other.Coupon.Clone();
          break;
        case FilterOneofCase.Flight:
          Flight = other.Flight.Clone();
          break;
        case FilterOneofCase.EventTicket:
          EventTicket = other.EventTicket.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnalyticsRequest Clone() {
      return new AnalyticsRequest(this);
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 1;
    private global::PassKit.Grpc.PassProtocol protocol_ = global::PassKit.Grpc.PassProtocol.DoNotUse;
    /// <summary>
    /// The protocol that you are requesting analytics for, i.e. MEMBERSHIP, SINGLE_USE_COUPON, EVENT_TICKETS, FLIGHTS, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.PassProtocol Protocol {
      get { return protocol_; }
      set {
        protocol_ = value;
      }
    }

    /// <summary>Field number for the "classId" field.</summary>
    public const int ClassIdFieldNumber = 2;
    private string classId_ = "";
    /// <summary>
    /// The ID of the highest level element in the protocol. For Membership this is the Program ID, for coupons this is the Campaign ID, For Event Tickets this is Production, For Flight this is CarrierCode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClassId {
      get { return classId_; }
      set {
        classId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 3;
    private global::PassKit.Grpc.Period period_ = global::PassKit.Grpc.Period.Day;
    /// <summary>
    /// The Period to group the response data by: per DAY, MONTH or YEAR.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Period Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    /// <summary>Field number for the "startDate" field.</summary>
    public const int StartDateFieldNumber = 4;
    private string startDate_ = "";
    /// <summary>
    /// Start date sets the oldest date of the data to be shown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endDate" field.</summary>
    public const int EndDateFieldNumber = 5;
    private string endDate_ = "";
    /// <summary>
    /// End date sets the latest date of the data to be shown.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndDate {
      get { return endDate_; }
      set {
        endDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 6;
    private string timezone_ = "";
    /// <summary>
    /// Timezone in IANA format; defaults to UTC if not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Timezone {
      get { return timezone_; }
      set {
        timezone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "coupon" field.</summary>
    public const int CouponFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.CouponAnalyticsFilter Coupon {
      get { return filterCase_ == FilterOneofCase.Coupon ? (global::PassKit.Grpc.CouponAnalyticsFilter) filter_ : null; }
      set {
        filter_ = value;
        filterCase_ = value == null ? FilterOneofCase.None : FilterOneofCase.Coupon;
      }
    }

    /// <summary>Field number for the "flight" field.</summary>
    public const int FlightFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.FlightAnalyticsFilter Flight {
      get { return filterCase_ == FilterOneofCase.Flight ? (global::PassKit.Grpc.FlightAnalyticsFilter) filter_ : null; }
      set {
        filter_ = value;
        filterCase_ = value == null ? FilterOneofCase.None : FilterOneofCase.Flight;
      }
    }

    /// <summary>Field number for the "eventTicket" field.</summary>
    public const int EventTicketFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.EventTicketAnalyticsFilter EventTicket {
      get { return filterCase_ == FilterOneofCase.EventTicket ? (global::PassKit.Grpc.EventTicketAnalyticsFilter) filter_ : null; }
      set {
        filter_ = value;
        filterCase_ = value == null ? FilterOneofCase.None : FilterOneofCase.EventTicket;
      }
    }

    private object filter_;
    /// <summary>Enum of possible cases for the "filter" oneof.</summary>
    public enum FilterOneofCase {
      None = 0,
      Coupon = 15,
      Flight = 16,
      EventTicket = 17,
    }
    private FilterOneofCase filterCase_ = FilterOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FilterOneofCase FilterCase {
      get { return filterCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilter() {
      filterCase_ = FilterOneofCase.None;
      filter_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnalyticsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnalyticsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Protocol != other.Protocol) return false;
      if (ClassId != other.ClassId) return false;
      if (Period != other.Period) return false;
      if (StartDate != other.StartDate) return false;
      if (EndDate != other.EndDate) return false;
      if (Timezone != other.Timezone) return false;
      if (!object.Equals(Coupon, other.Coupon)) return false;
      if (!object.Equals(Flight, other.Flight)) return false;
      if (!object.Equals(EventTicket, other.EventTicket)) return false;
      if (FilterCase != other.FilterCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Protocol != global::PassKit.Grpc.PassProtocol.DoNotUse) hash ^= Protocol.GetHashCode();
      if (ClassId.Length != 0) hash ^= ClassId.GetHashCode();
      if (Period != global::PassKit.Grpc.Period.Day) hash ^= Period.GetHashCode();
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (EndDate.Length != 0) hash ^= EndDate.GetHashCode();
      if (Timezone.Length != 0) hash ^= Timezone.GetHashCode();
      if (filterCase_ == FilterOneofCase.Coupon) hash ^= Coupon.GetHashCode();
      if (filterCase_ == FilterOneofCase.Flight) hash ^= Flight.GetHashCode();
      if (filterCase_ == FilterOneofCase.EventTicket) hash ^= EventTicket.GetHashCode();
      hash ^= (int) filterCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Protocol != global::PassKit.Grpc.PassProtocol.DoNotUse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Protocol);
      }
      if (ClassId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClassId);
      }
      if (Period != global::PassKit.Grpc.Period.Day) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Period);
      }
      if (StartDate.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StartDate);
      }
      if (EndDate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EndDate);
      }
      if (Timezone.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Timezone);
      }
      if (filterCase_ == FilterOneofCase.Coupon) {
        output.WriteRawTag(122);
        output.WriteMessage(Coupon);
      }
      if (filterCase_ == FilterOneofCase.Flight) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Flight);
      }
      if (filterCase_ == FilterOneofCase.EventTicket) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(EventTicket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Protocol != global::PassKit.Grpc.PassProtocol.DoNotUse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Protocol);
      }
      if (ClassId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClassId);
      }
      if (Period != global::PassKit.Grpc.Period.Day) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Period);
      }
      if (StartDate.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StartDate);
      }
      if (EndDate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EndDate);
      }
      if (Timezone.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Timezone);
      }
      if (filterCase_ == FilterOneofCase.Coupon) {
        output.WriteRawTag(122);
        output.WriteMessage(Coupon);
      }
      if (filterCase_ == FilterOneofCase.Flight) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Flight);
      }
      if (filterCase_ == FilterOneofCase.EventTicket) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(EventTicket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Protocol != global::PassKit.Grpc.PassProtocol.DoNotUse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
      }
      if (ClassId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClassId);
      }
      if (Period != global::PassKit.Grpc.Period.Day) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Period);
      }
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (EndDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndDate);
      }
      if (Timezone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timezone);
      }
      if (filterCase_ == FilterOneofCase.Coupon) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Coupon);
      }
      if (filterCase_ == FilterOneofCase.Flight) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Flight);
      }
      if (filterCase_ == FilterOneofCase.EventTicket) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EventTicket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnalyticsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Protocol != global::PassKit.Grpc.PassProtocol.DoNotUse) {
        Protocol = other.Protocol;
      }
      if (other.ClassId.Length != 0) {
        ClassId = other.ClassId;
      }
      if (other.Period != global::PassKit.Grpc.Period.Day) {
        Period = other.Period;
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.EndDate.Length != 0) {
        EndDate = other.EndDate;
      }
      if (other.Timezone.Length != 0) {
        Timezone = other.Timezone;
      }
      switch (other.FilterCase) {
        case FilterOneofCase.Coupon:
          if (Coupon == null) {
            Coupon = new global::PassKit.Grpc.CouponAnalyticsFilter();
          }
          Coupon.MergeFrom(other.Coupon);
          break;
        case FilterOneofCase.Flight:
          if (Flight == null) {
            Flight = new global::PassKit.Grpc.FlightAnalyticsFilter();
          }
          Flight.MergeFrom(other.Flight);
          break;
        case FilterOneofCase.EventTicket:
          if (EventTicket == null) {
            EventTicket = new global::PassKit.Grpc.EventTicketAnalyticsFilter();
          }
          EventTicket.MergeFrom(other.EventTicket);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Protocol = (global::PassKit.Grpc.PassProtocol) input.ReadEnum();
            break;
          }
          case 18: {
            ClassId = input.ReadString();
            break;
          }
          case 24: {
            Period = (global::PassKit.Grpc.Period) input.ReadEnum();
            break;
          }
          case 34: {
            StartDate = input.ReadString();
            break;
          }
          case 42: {
            EndDate = input.ReadString();
            break;
          }
          case 50: {
            Timezone = input.ReadString();
            break;
          }
          case 122: {
            global::PassKit.Grpc.CouponAnalyticsFilter subBuilder = new global::PassKit.Grpc.CouponAnalyticsFilter();
            if (filterCase_ == FilterOneofCase.Coupon) {
              subBuilder.MergeFrom(Coupon);
            }
            input.ReadMessage(subBuilder);
            Coupon = subBuilder;
            break;
          }
          case 130: {
            global::PassKit.Grpc.FlightAnalyticsFilter subBuilder = new global::PassKit.Grpc.FlightAnalyticsFilter();
            if (filterCase_ == FilterOneofCase.Flight) {
              subBuilder.MergeFrom(Flight);
            }
            input.ReadMessage(subBuilder);
            Flight = subBuilder;
            break;
          }
          case 138: {
            global::PassKit.Grpc.EventTicketAnalyticsFilter subBuilder = new global::PassKit.Grpc.EventTicketAnalyticsFilter();
            if (filterCase_ == FilterOneofCase.EventTicket) {
              subBuilder.MergeFrom(EventTicket);
            }
            input.ReadMessage(subBuilder);
            EventTicket = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Protocol = (global::PassKit.Grpc.PassProtocol) input.ReadEnum();
            break;
          }
          case 18: {
            ClassId = input.ReadString();
            break;
          }
          case 24: {
            Period = (global::PassKit.Grpc.Period) input.ReadEnum();
            break;
          }
          case 34: {
            StartDate = input.ReadString();
            break;
          }
          case 42: {
            EndDate = input.ReadString();
            break;
          }
          case 50: {
            Timezone = input.ReadString();
            break;
          }
          case 122: {
            global::PassKit.Grpc.CouponAnalyticsFilter subBuilder = new global::PassKit.Grpc.CouponAnalyticsFilter();
            if (filterCase_ == FilterOneofCase.Coupon) {
              subBuilder.MergeFrom(Coupon);
            }
            input.ReadMessage(subBuilder);
            Coupon = subBuilder;
            break;
          }
          case 130: {
            global::PassKit.Grpc.FlightAnalyticsFilter subBuilder = new global::PassKit.Grpc.FlightAnalyticsFilter();
            if (filterCase_ == FilterOneofCase.Flight) {
              subBuilder.MergeFrom(Flight);
            }
            input.ReadMessage(subBuilder);
            Flight = subBuilder;
            break;
          }
          case 138: {
            global::PassKit.Grpc.EventTicketAnalyticsFilter subBuilder = new global::PassKit.Grpc.EventTicketAnalyticsFilter();
            if (filterCase_ == FilterOneofCase.EventTicket) {
              subBuilder.MergeFrom(EventTicket);
            }
            input.ReadMessage(subBuilder);
            EventTicket = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Filter object for coupon analytics.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CouponAnalyticsFilter : pb::IMessage<CouponAnalyticsFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CouponAnalyticsFilter> _parser = new pb::MessageParser<CouponAnalyticsFilter>(() => new CouponAnalyticsFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CouponAnalyticsFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.ReportingReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CouponAnalyticsFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CouponAnalyticsFilter(CouponAnalyticsFilter other) : this() {
      offerId_ = other.offerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CouponAnalyticsFilter Clone() {
      return new CouponAnalyticsFilter(this);
    }

    /// <summary>Field number for the "offerId" field.</summary>
    public const int OfferIdFieldNumber = 1;
    private string offerId_ = "";
    /// <summary>
    /// The offer ID to filter analytics by.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OfferId {
      get { return offerId_; }
      set {
        offerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CouponAnalyticsFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CouponAnalyticsFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OfferId != other.OfferId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OfferId.Length != 0) hash ^= OfferId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OfferId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OfferId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OfferId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OfferId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OfferId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CouponAnalyticsFilter other) {
      if (other == null) {
        return;
      }
      if (other.OfferId.Length != 0) {
        OfferId = other.OfferId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OfferId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OfferId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// FlightAnalyticsFilter filter analytics by flight or/and flight designator.
  /// FlightNumber, departureDate, boardingPoint and deplaningPoint are required to filter by flight.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FlightAnalyticsFilter : pb::IMessage<FlightAnalyticsFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FlightAnalyticsFilter> _parser = new pb::MessageParser<FlightAnalyticsFilter>(() => new FlightAnalyticsFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FlightAnalyticsFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.ReportingReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlightAnalyticsFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlightAnalyticsFilter(FlightAnalyticsFilter other) : this() {
      flightNumber_ = other.flightNumber_;
      departureDate_ = other.departureDate_ != null ? other.departureDate_.Clone() : null;
      boardingPoint_ = other.boardingPoint_;
      deplaningPoint_ = other.deplaningPoint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FlightAnalyticsFilter Clone() {
      return new FlightAnalyticsFilter(this);
    }

    /// <summary>Field number for the "flightNumber" field.</summary>
    public const int FlightNumberFieldNumber = 1;
    private string flightNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FlightNumber {
      get { return flightNumber_; }
      set {
        flightNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "departureDate" field.</summary>
    public const int DepartureDateFieldNumber = 2;
    private global::PassKit.Grpc.Date departureDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::PassKit.Grpc.Date DepartureDate {
      get { return departureDate_; }
      set {
        departureDate_ = value;
      }
    }

    /// <summary>Field number for the "boardingPoint" field.</summary>
    public const int BoardingPointFieldNumber = 3;
    private string boardingPoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BoardingPoint {
      get { return boardingPoint_; }
      set {
        boardingPoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deplaningPoint" field.</summary>
    public const int DeplaningPointFieldNumber = 4;
    private string deplaningPoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeplaningPoint {
      get { return deplaningPoint_; }
      set {
        deplaningPoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FlightAnalyticsFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FlightAnalyticsFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FlightNumber != other.FlightNumber) return false;
      if (!object.Equals(DepartureDate, other.DepartureDate)) return false;
      if (BoardingPoint != other.BoardingPoint) return false;
      if (DeplaningPoint != other.DeplaningPoint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FlightNumber.Length != 0) hash ^= FlightNumber.GetHashCode();
      if (departureDate_ != null) hash ^= DepartureDate.GetHashCode();
      if (BoardingPoint.Length != 0) hash ^= BoardingPoint.GetHashCode();
      if (DeplaningPoint.Length != 0) hash ^= DeplaningPoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FlightNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FlightNumber);
      }
      if (departureDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DepartureDate);
      }
      if (BoardingPoint.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BoardingPoint);
      }
      if (DeplaningPoint.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DeplaningPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FlightNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FlightNumber);
      }
      if (departureDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DepartureDate);
      }
      if (BoardingPoint.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BoardingPoint);
      }
      if (DeplaningPoint.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DeplaningPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FlightNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FlightNumber);
      }
      if (departureDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepartureDate);
      }
      if (BoardingPoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BoardingPoint);
      }
      if (DeplaningPoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeplaningPoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FlightAnalyticsFilter other) {
      if (other == null) {
        return;
      }
      if (other.FlightNumber.Length != 0) {
        FlightNumber = other.FlightNumber;
      }
      if (other.departureDate_ != null) {
        if (departureDate_ == null) {
          DepartureDate = new global::PassKit.Grpc.Date();
        }
        DepartureDate.MergeFrom(other.DepartureDate);
      }
      if (other.BoardingPoint.Length != 0) {
        BoardingPoint = other.BoardingPoint;
      }
      if (other.DeplaningPoint.Length != 0) {
        DeplaningPoint = other.DeplaningPoint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FlightNumber = input.ReadString();
            break;
          }
          case 18: {
            if (departureDate_ == null) {
              DepartureDate = new global::PassKit.Grpc.Date();
            }
            input.ReadMessage(DepartureDate);
            break;
          }
          case 26: {
            BoardingPoint = input.ReadString();
            break;
          }
          case 34: {
            DeplaningPoint = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FlightNumber = input.ReadString();
            break;
          }
          case 18: {
            if (departureDate_ == null) {
              DepartureDate = new global::PassKit.Grpc.Date();
            }
            input.ReadMessage(DepartureDate);
            break;
          }
          case 26: {
            BoardingPoint = input.ReadString();
            break;
          }
          case 34: {
            DeplaningPoint = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Filter object for event ticket analytics.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EventTicketAnalyticsFilter : pb::IMessage<EventTicketAnalyticsFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventTicketAnalyticsFilter> _parser = new pb::MessageParser<EventTicketAnalyticsFilter>(() => new EventTicketAnalyticsFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EventTicketAnalyticsFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PassKit.Grpc.ReportingReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventTicketAnalyticsFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventTicketAnalyticsFilter(EventTicketAnalyticsFilter other) : this() {
      ticketTypeId_ = other.ticketTypeId_;
      ticketTypeUid_ = other.ticketTypeUid_;
      venueId_ = other.venueId_;
      venueUid_ = other.venueUid_;
      eventId_ = other.eventId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventTicketAnalyticsFilter Clone() {
      return new EventTicketAnalyticsFilter(this);
    }

    /// <summary>Field number for the "ticketTypeId" field.</summary>
    public const int TicketTypeIdFieldNumber = 1;
    private string ticketTypeId_ = "";
    /// <summary>
    /// Ticket type ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TicketTypeId {
      get { return ticketTypeId_; }
      set {
        ticketTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ticketTypeUid" field.</summary>
    public const int TicketTypeUidFieldNumber = 2;
    private string ticketTypeUid_ = "";
    /// <summary>
    /// Ticket type UID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TicketTypeUid {
      get { return ticketTypeUid_; }
      set {
        ticketTypeUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "venueId" field.</summary>
    public const int VenueIdFieldNumber = 3;
    private string venueId_ = "";
    /// <summary>
    /// Venue ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueId {
      get { return venueId_; }
      set {
        venueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "venueUid" field.</summary>
    public const int VenueUidFieldNumber = 4;
    private string venueUid_ = "";
    /// <summary>
    /// Venue UID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VenueUid {
      get { return venueUid_; }
      set {
        venueUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eventId" field.</summary>
    public const int EventIdFieldNumber = 5;
    private string eventId_ = "";
    /// <summary>
    /// Event ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EventTicketAnalyticsFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EventTicketAnalyticsFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TicketTypeId != other.TicketTypeId) return false;
      if (TicketTypeUid != other.TicketTypeUid) return false;
      if (VenueId != other.VenueId) return false;
      if (VenueUid != other.VenueUid) return false;
      if (EventId != other.EventId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TicketTypeId.Length != 0) hash ^= TicketTypeId.GetHashCode();
      if (TicketTypeUid.Length != 0) hash ^= TicketTypeUid.GetHashCode();
      if (VenueId.Length != 0) hash ^= VenueId.GetHashCode();
      if (VenueUid.Length != 0) hash ^= VenueUid.GetHashCode();
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TicketTypeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketTypeId);
      }
      if (TicketTypeUid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TicketTypeUid);
      }
      if (VenueId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VenueId);
      }
      if (VenueUid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(VenueUid);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EventId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TicketTypeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketTypeId);
      }
      if (TicketTypeUid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TicketTypeUid);
      }
      if (VenueId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VenueId);
      }
      if (VenueUid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(VenueUid);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EventId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TicketTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketTypeId);
      }
      if (TicketTypeUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketTypeUid);
      }
      if (VenueId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VenueId);
      }
      if (VenueUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VenueUid);
      }
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EventTicketAnalyticsFilter other) {
      if (other == null) {
        return;
      }
      if (other.TicketTypeId.Length != 0) {
        TicketTypeId = other.TicketTypeId;
      }
      if (other.TicketTypeUid.Length != 0) {
        TicketTypeUid = other.TicketTypeUid;
      }
      if (other.VenueId.Length != 0) {
        VenueId = other.VenueId;
      }
      if (other.VenueUid.Length != 0) {
        VenueUid = other.VenueUid;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TicketTypeId = input.ReadString();
            break;
          }
          case 18: {
            TicketTypeUid = input.ReadString();
            break;
          }
          case 26: {
            VenueId = input.ReadString();
            break;
          }
          case 34: {
            VenueUid = input.ReadString();
            break;
          }
          case 42: {
            EventId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TicketTypeId = input.ReadString();
            break;
          }
          case 18: {
            TicketTypeUid = input.ReadString();
            break;
          }
          case 26: {
            VenueId = input.ReadString();
            break;
          }
          case 34: {
            VenueUid = input.ReadString();
            break;
          }
          case 42: {
            EventId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
